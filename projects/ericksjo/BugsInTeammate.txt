SMITH BUG
Running cardtest1 produces this output:
***********BEGINNING SMITHY CARD TESTING**********

Giving the current player a smithy card in the last position of their hand
Testing that the current player has a smithy card in the last position of their hand
SUCCESS

Playing the Smithy card in the last position of the hand
Testing that the played card was the Smithy card.
SUCCESS

Testing that the player drew 3 cards (Gaining 2 cards overall, after discard)
FAILURE

Testing that 3 cards were taken from the deck
FAILURE

Testing that only 1 card was played
SUCCESS

Testing the the other players hand has the same number of cards that it started with
SUCCESS

Checking that the other players deck count remained the same
SUCCESS

Testing that the other players deck has the same cards in it as at game initialization
Card #0 SUCCESS

Card #1 SUCCESS

Card #2 SUCCESS

Card #3 SUCCESS

Card #4 SUCCESS

Card #5 SUCCESS

Card #6 SUCCESS

Card #7 SUCCESS

Card #8 SUCCESS

Card #9 SUCCESS

Testing the other players discard pile has the same number of cards that it started with
SUCCESS

***********FINISHING SMITHY CARD TESTING**********

Running randomcardtest1 produces similar output, but using different inputs and with many more lines of output. Looking through the tests,
it’s pretty easy to see that when the Smithy card is being played, it is being put into the playedCards pile, but then the expected effect
it should have (drawing 3 cards/taking 3 cards from the deck), does not occur. This indicates that something is wrong with, or with 
something around, the drawCard function inside the smithyCard function. Looking at the code around drawCard, I see:
int i;

//+3 Cards

for (i = 1; i < 3; i++)

{

drawCard(currentPlayer, state);

}
drawCard looks like it’s being called correctly, so there should be no issues there. However, the variable i is being initialized to 
1 instead of 0 in the for loop, causing the loop to only iterate twice. This will cause the current player to draw only two cards, 
giving the failed test states when checking if the current player drew 3 cards and if the deck had 3 cards drawn from it. 

BUG FOUND FOR SMITHY: Only 2 cards are being drawn. This is due to the counter variable i being initialized to 1 instead of 0 inside 
the for loop that draws cards for the current player. 


VILLAGE BUG
The output for cardtest3 looks like this:
***********BEGINNING VILLAGE CARD TESTING**********

Giving the current player a Village card in the last position of their hand
Testing that the current player has a Village card in the last position of their hand
SUCCESS

Playing the Village card in the last position of the hand
Testing that the played card was the Village card.
FAILURE

Testing that the player drew 1 cards (Gaining 0 cards overall, after discard)
(This could give a false positive)
SUCCESS

Testing that 1 card was drawn from the deck
SUCCESS

Testing that the current number of actions increased by 2
FAILURE

Testing that only 1 card was played
SUCCESS

Testing the the other players hand has the same number of cards that it started with
SUCCESS

Testing that the other players deck count remained the same
SUCCESS

Testing that the other players deck has the same cards in it as at game initialization
Card #0 SUCCESS

Card #1 SUCCESS

Card #2 SUCCESS

Card #3 SUCCESS

Card #4 SUCCESS

Card #5 SUCCESS

Card #6 SUCCESS

Card #7 SUCCESS

Card #8 SUCCESS

Card #9 SUCCESS

Testing the the other players discard pile has the same number of cards that it started with
SUCCESS

***********FINISHING VILLAGE CARD TESTING**********
My tests ended up really narrowing this bug down for me, since I only had one FAILED test. My failed test was checking whether 
the current number of actions for the turn increased by two. Since it did not here, the first obvious place to look for a bug 
is around the state->num actions = statement. Looking at my teammates code:
//+2 Actions

state->numActions = state->numActions + 1;
The bug here ended up being really obvious, the numActions variable is only being increased by 1, when it should be increased by 2, 
giving the bug seen in the tests. 

BUG FOUND FOR VILLAGE: The numActions variable is only being increased by 1, when it should be increased by two. 
Change state->numActions = state->numActions + 1; to 
state->numActions = state->numActions + 2;
