File: randomstring.c.text

Erin Rosenbaum
cs_362 winter 2017
February 5, 2017
quiz_2

The objective of this assignment is to reach the error statement,
which requires the following if statement to be true:

    if (s[0] == 'r' && s[1] == 'e'
       && s[2] == 's' && s[3] == 'e'
       && s[4] == 't' && s[5] == '\0'
       && state == 9)
    {

The inputs to this function are thus r, s, and state. s is instantiated
by calling the inputString() function, and c is instantiated by calling the 
inputChar() function. state is initialized to 0, and its value changes,
depending on the conditional statements. State only increments to as high as 9. 
Values that c need to have are:

    // create a character array with all required inputs
    char my_array[] = "[]{}() ax";

    for each call to inputChar(), return one of the possible input characters.

    // randomly generate an integer from 0 through 8, representing
    // the indeces of the character array
    int rand_num = rand() % 9;

    // return the random character
    char rand_char = my_array[rand_num];
    return rand_char;

    for each call to inputString(), create a random string of length 6 
    that is created by randomly selecting each character from the array of 6 
    possible inputs.

    // create a character array with all required inputs
    char my_array[] = "\0reset";

    // create space in memory for random character array
    char* result = malloc(6 * sizeof(char));

    // create a resulting charter array of length 6 composed of random chars from input array
    int i;
    for (i=0; i<6; i++){
        int rand_num = rand() % 6;
        char rand_char = my_array[rand_num];
        result[i] = rand_char;
    }

    return result;

This approach is able to reach the error message in around 5000 attemps, roughly on average. 
The range of input values is kept as minimal as possible to make reaching the error message
as easy as possible. 