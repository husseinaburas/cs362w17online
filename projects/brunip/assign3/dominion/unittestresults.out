Running dominion unittestresults:
unittest1.c:
----------------- Testing Unit: isGameOver ----------------
TEST 1: Testing if game ends with supply count province at 0
isGameOver() returns 1, expected = 1
TEST 2: Testing if game ends with 8 province
isGameOver() returns 0, expected = 0
TEST 3: Testing if game ends when setting more than 3 out of 8 to zero
isGameOver() returns 1, expected = 1

 >>>>> SUCCESS: Testing complete for unittest1 <<<<<

File 'dominion.c'
Lines executed:17.26% of 562
Branches executed:17.66% of 419
Taken at least once:14.32% of 419
Calls executed:7.29% of 96
Creating 'dominion.c.gcov'

unittest2.c:
----------------- Testing Unit: updateCoins ----------------
TEST 1: Testing if G.coins == 5
coins = 5, expected = 5
TEST 2: Testing if G.coins == 0
coins = 0, expected = 0
TEST 3: Testing the bonus variable
coins = 14, expected = 14

 >>>>> SUCCESS: Testing complete for unittest2 <<<<<

File 'dominion.c'
Lines executed:16.19% of 562
Branches executed:15.75% of 419
Taken at least once:13.37% of 419
Calls executed:7.29% of 96
Creating 'dominion.c.gcov'

unittest3.c:
----------------- Testing Unit: whosCard() ----------------
TEST 1: Testing Player 0 Turn
Whose Turn?? = 0, expected = 0
TEST 1: Testing Player 1 Turn
Whose Turn?? = 1, expected = 1

 >>>>> SUCCESS: Testing complete for unittest3 <<<<<

File 'dominion.c'
Lines executed:15.84% of 562
Branches executed:15.27% of 419
Taken at least once:12.17% of 419
Calls executed:7.29% of 96
Creating 'dominion.c.gcov'

unittest4.c:
----------------- Testing Unit: getCost ----------------
TEST 1: TEST 1: Testing cost of curse
cost = 0, expected = 0
TEST 1: TEST 1: Testing cost of estate
cost = 2, expected = 2
TEST 1: TEST 1: Testing cost of duchy
cost = 5, expected = 
TEST 1: TEST 1: Testing cost of province
cost = 8, expected = 8
TEST 1: TEST 1: Testing cost of copper
cost = 0, expected = 0
TEST 1: TEST 1: Testing cost of silver
cost = 3, expected = 3
TEST 1: TEST 1: Testing cost of gold
cost = 6, expected = 6
TEST 1: TEST 1: Testing cost of adventurer
cost = 6, expected = 6
TEST 1: TEST 1: Testing cost of council_room
cost = 5, expected = 5
TEST 1: TEST 1: Testing cost of feast
cost = 4, expected = 4
TEST 1: TEST 1: Testing cost of gardens
cost = 4, expected = 4
TEST 1: TEST 1: Testing cost of mine
cost = 5, expected = 5
TEST 1: TEST 1: Testing cost of remodel
cost = 4, expected = 4
TEST 1: TEST 1: Testing cost of smithy
cost = 4, expected = 4
TEST 1: TEST 1: Testing cost of village
cost = 3, expected = 3
TEST 1: TEST 1: Testing cost of baron
cost = 4, expected = 4
TEST 1: TEST 1: Testing cost of great_hall
cost = 3, expected = 3
TEST 1: TEST 1: Testing cost of minion
cost = 5, expected = 5
TEST 1: TEST 1: Testing cost of steward
cost = 3, expected = 3
TEST 1: TEST 1: Testing cost of tribute
cost = 5, expected = 5
TEST 1: TEST 1: Testing cost of ambassador
cost = 3, expected = 3
TEST 1: TEST 1: Testing cost of cutpurse
cost = 4, expected = 4
TEST 1: TEST 1: Testing cost of embargo
cost = 2, expected = 2
TEST 1: TEST 1: Testing cost of outpost
cost = 5, expected = 5
TEST 1: TEST 1: Testing cost of salvager
cost = 4, expected = 4
TEST 1: TEST 1: Testing cost of sea_hag
cost = 4, expected = 4
TEST 1: TEST 1: Testing cost of treasure_map
cost = 4, expected = 4

 >>>>> SUCCESS: Testing complete for unittest4 <<<<<

File 'dominion.c'
Lines executed:21.00% of 562
Branches executed:22.43% of 419
Taken at least once:19.33% of 419
Calls executed:7.29% of 96
Creating 'dominion.c.gcov'

cardtest1.c:
----------------- Testing Card: outpost ----------------
TEST 1: outpost flag set
outpostPlayed = 1, expected = 1
TEST 2: Testing if Discarded
hand count = 4, expected = 4
deck count = 5, expected = 5

 >>>>> SUCCESS: Testing complete outpost <<<<<

File 'dominion.c'
Lines executed:19.75% of 562
Branches executed:22.20% of 419
Taken at least once:13.37% of 419
Calls executed:10.42% of 96
Creating 'dominion.c.gcov'

cardtest2.c:
----------------- Testing Card: village ----------------
TEST 1: Testing if a card was drawn
hand count = 5, expected = 5
TEST 2: Testing if +2 actions
numActions = 3, expected = 3

 >>>>> SUCCESS: Testing complete village <<<<<

File 'dominion.c'
Lines executed:19.93% of 562
Branches executed:22.20% of 419
Taken at least once:13.37% of 419
Calls executed:10.42% of 96
Creating 'dominion.c.gcov'

cardtest3.c:
----------------- Testing Card: smithy ----------------
TEST 1: Testing if 3 cards were drawn and one discarded (+2 cards)
hand count = 7, expected = 7
TEST 2: Testing if deckCount decreased by 3
deckCount = 2, expected = 2

 >>>>> SUCCESS: Testing complete smithy <<<<<

File 'dominion.c'
Lines executed:19.93% of 562
Branches executed:22.67% of 419
Taken at least once:13.84% of 419
Calls executed:10.42% of 96
Creating 'dominion.c.gcov'

cardtest4.c:
----------------- Testing Card: adventurer ----------------
TEST 1: Testing if a card was drawn
hand count = 7, expected = 7
TEST 2: Testing if copper in hand
copper true: = 1, expected = 1
TEST 2: Testing if silver in hand
printing 1: 5
printing 2: 5
silver true: = 1, expected = 1

 >>>>> SUCCESS: Testing complete adventurer <<<<<

File 'dominion.c'
Lines executed:20.11% of 562
Branches executed:23.63% of 419
Taken at least once:15.04% of 419
Calls executed:11.46% of 96
Creating 'dominion.c.gcov'

