Bugs In TeamMate, beatoj's Code

Smithy
Both my random tests and unit tests found the following bug in my teammate’ s code. The smithy code is drawing one less card than it should be. I looked in my teammate’s code and found that the for loop that is responsible for drawing three cards for the current player, only iterates two times, and thus only two cards are drawn. Both my unit and random tests achieved 100% line and branch coverage of my teammate’s smithy code.

Smithy Bug (lines 678, 679 of dominion.c)
	//+3 Cards
    	int i = 1;                  
    	for(i ; i < 3; i++)
    	{
            drawCard(currentPlayer, state);
    	}
 

Village
Both my random tests and unit tests found the following bug in my teammate’ s code. The village code is granting the current player one extra action than it should be. I looked in my teammate’s code and found that the game’s numActions state is being incremented by three, instead of two. Both my unit and random tests achieved 100% line and branch coverage of my teammate’s village code.

Village Bug (line 697 of dominion.c):
	//+2 Actions
    	state->numActions = state->numActions + 3;   


Adventurer
Both my random tests and unit tests found the following bug in my teammate’ s code. The adventurer code is discarding the improper number of cards. I looked in my teammate’s code and found that the while loop at the end of the playAdventurer() function responsible for discarding all the cards in play that were drawn while playing adventurer was running an extra iteration than it should have, and thus discarding an extra card than it should. I know this is not the only discard bug in the adventurer code, because “z-2” in the while loop versus “z-1” only accounts for one extra discard. Multiple test cases from my random tests showed more than one extra card being discarded, and sometimes too few cards were being discarded.  Both my unit and random tests achieved 100% line and branch coverage of my teammate’s adventurer code.

Adventurer Bug (line 666 of dominion.c):

	while(z-2>=0){
            state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
            z=z-1;
    	}
