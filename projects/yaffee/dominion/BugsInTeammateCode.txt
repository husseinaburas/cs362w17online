Bugs in Teammate Code
I ran into an unexpected issue with the Adventurer card. My unit test worked just fine, 
but my random test seg faulted every time. The random test ran 500,000 times, so I 
found that by running it fewer times (just 50), I could get a result without it seg 
faulting. This was somewhat problematic. The errors in our code were not supposed 
to make it un-runnable, but rather just be logic errors. I played around with my 
test quite a bit, thinking it was a problem on my end, but I could not find 
anything. So instead I inspected my teammate’s code. I found that in certain 
situations the code would try to access memory outside of the hand array. For 
example, instead of accessing the 5th card of a 5-card hand, it would access the 
6th card. This line:
cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]];
should be this:
cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];
but because it does not decrement the hand count to make up for the fact that the 
subscripts go from 0-4, it would return 5, which does not necessarily exist. This 
error is found on line 659 of my teammate’s dominion.c code.
 
Another bug I found was with the Smithy card. An interesting thing I noticed was that 
for some unit tests, some conditions would pass the test. However, with Smithy card, 
every single test failed with the same error: the card was not correctly added to 
the played card pile, and the played card count was wrong. This led me to look for 
an error that would occur with any condition. That is, no matter what conditions I 
was testing, the code should always run the line that caused the error. This is 
exactly what I found: when discarding the card, the card was trashed instead of 
discarded. This would mean that it would never get added to the played cards pile, 
which would account for both errors. This error was on line 686 of my teammate’s 
dominion.c code. This:
discardCard(handPos, currentPlayer, state, 1);
should have been this:
discardCard(handPos, currentPlayer, state, 0);
 
