Bugs Found:

I. In the playSmithy function there are several bugs

	1. The function does not return the expected value (0). In fact, it returns nothing despite it not being a void function.
		Cause: No "return 0" statement in the function code.
		Symptoms: None for the purposes of the unit test, however if another function expects a returned INT value this can potentially cause issues. Also a function should return something if not a void function.
		How I found it: My cardtest function checks if the return value is == 0. In this case nothing was returned so that test failed.
	2. Smithy does not draw the proper number of cards from the deck. In fact, it draws 5 cards rather than the expected 3.
		Cause: The responsible line of code is "for (i = 0; i < 5; i++)"
		Symptoms: 5 cards are drawn instead of 3. Subsequently Smithy is much more powerful than intended.
		How I found it: My cardtest function checks the game state and compares the new hand/deck values to the old values. In this case the number was higher than expected. After finding that, I added a few print statements to output the exact values. This is how I discovered that 5 were drawn before looking directly at the source code.

		These were the two major bugs I found. Interestingly this differs from the bugs I had in my own playSmithy function. In my own function the Smithy card was not properly discarded, in addition to drawing 4 cards rather than 3.


II. In the playAdventurer function there is one major bug that causes two observable issues.

	-Adventurer drew too many cards from the deck.
	-Adventurer did not draw the expected number of cards from the deck

	Those two statements are from my unit test of the playAdventurer function. 
	
	Using my randomtestadventurer function I found that of the 60000 value checks, 4610 of them failed. And this was consistent on multiple runs.
	Using this information I was able to guess at where in the code the bug would be. However my tests alone were insufficient in finding the root cause of the bug. Thus I had to look at the source code.
	
	Looking at the source code I found the bug-causing line.
	The bug-causing line in the playAdventurer function is "if (cardDrawn == copper || cardDrawn == silver)".
	Because of that line, the function will fail to treat gold as a treasure and will thus fail to draw and discard the proper number of cards from the deck.
	I ran my own test where I manually fixed that line and then ran my test functions again. After the fix my tests showed no failures, and thus I am confident that was the only bug in the function.
	

Overall I found 3 bugs split over 2 functions with my unit/card/random tests.