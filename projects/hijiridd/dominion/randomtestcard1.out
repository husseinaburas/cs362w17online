Starting ramdom test for SMITHY

------------ ITERATION # 0
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 0 -> FAILED tests
------------ ITERATION # 1
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 1 -> FAILED tests
------------ ITERATION # 2
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 2 -> FAILED tests
------------ ITERATION # 3
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 3 -> FAILED tests
------------ ITERATION # 4
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 4 -> FAILED tests
------------ ITERATION # 5
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 5 -> FAILED tests
------------ ITERATION # 6
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 6 -> FAILED tests
------------ ITERATION # 7
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 1
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 7 -> FAILED tests
------------ ITERATION # 8
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 2
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 8 -> FAILED tests
------------ ITERATION # 9
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 9 -> FAILED tests
------------ ITERATION # 10
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 10 -> FAILED tests
------------ ITERATION # 11
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 11 -> FAILED tests
------------ ITERATION # 12
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 12 -> FAILED tests
------------ ITERATION # 13
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 13 -> FAILED tests
------------ ITERATION # 14
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 14 -> FAILED tests
------------ ITERATION # 15
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 15 -> FAILED tests
------------ ITERATION # 16
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 16 -> FAILED tests
------------ ITERATION # 17
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 17 -> FAILED tests
------------ ITERATION # 18
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 18 -> FAILED tests
------------ ITERATION # 19
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 19 -> successfully passed tests
------------ ITERATION # 20
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 20 -> FAILED tests
------------ ITERATION # 21
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #0, check if hand count has not changed
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 21 -> FAILED tests
------------ ITERATION # 22
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 22 -> FAILED tests
------------ ITERATION # 23
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 23 -> FAILED tests
------------ ITERATION # 24
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 24 -> FAILED tests
------------ ITERATION # 25
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 25 -> FAILED tests
------------ ITERATION # 26
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 26 -> FAILED tests
------------ ITERATION # 27
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 27 -> successfully passed tests
------------ ITERATION # 28
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 28 -> FAILED tests
------------ ITERATION # 29
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 29 -> FAILED tests
------------ ITERATION # 30
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 30 -> FAILED tests
------------ ITERATION # 31
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 31 -> FAILED tests
------------ ITERATION # 32
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 32 -> FAILED tests
------------ ITERATION # 33
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 33 -> FAILED tests
------------ ITERATION # 34
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 34 -> FAILED tests
------------ ITERATION # 35
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 35 -> FAILED tests
------------ ITERATION # 36
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 36 -> successfully passed tests
------------ ITERATION # 37
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 37 -> FAILED tests
------------ ITERATION # 38
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 38 -> FAILED tests
------------ ITERATION # 39
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 39 -> FAILED tests
------------ ITERATION # 40
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 40 -> FAILED tests
------------ ITERATION # 41
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 41 -> FAILED tests
------------ ITERATION # 42
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 42 -> successfully passed tests
------------ ITERATION # 43
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 43 -> FAILED tests
------------ ITERATION # 44
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 44 -> FAILED tests
------------ ITERATION # 45
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 45 -> FAILED tests
------------ ITERATION # 46
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 46 -> FAILED tests
------------ ITERATION # 47
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 47 -> FAILED tests
------------ ITERATION # 48
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 48 -> FAILED tests
------------ ITERATION # 49
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 49 -> successfully passed tests
------------ ITERATION # 50
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 50 -> FAILED tests
------------ ITERATION # 51
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 51 -> successfully passed tests
------------ ITERATION # 52
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 52 -> FAILED tests
------------ ITERATION # 53
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 53 -> FAILED tests
------------ ITERATION # 54
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 54 -> FAILED tests
------------ ITERATION # 55
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 55 -> FAILED tests
------------ ITERATION # 56
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 56 -> FAILED tests
------------ ITERATION # 57
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 57 -> FAILED tests
------------ ITERATION # 58
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 58 -> FAILED tests
------------ ITERATION # 59
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 59 -> FAILED tests
------------ ITERATION # 60
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 60 -> successfully passed tests
------------ ITERATION # 61
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 61 -> FAILED tests
------------ ITERATION # 62
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 62 -> FAILED tests
------------ ITERATION # 63
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 63 -> FAILED tests
------------ ITERATION # 64
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 64 -> FAILED tests
------------ ITERATION # 65
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 65 -> FAILED tests
------------ ITERATION # 66
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 66 -> FAILED tests
------------ ITERATION # 67
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 67 -> FAILED tests
------------ ITERATION # 68
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 68 -> FAILED tests
------------ ITERATION # 69
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 69 -> FAILED tests
------------ ITERATION # 70
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 70 -> FAILED tests
------------ ITERATION # 71
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 71 -> FAILED tests
------------ ITERATION # 72
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 72 -> FAILED tests
------------ ITERATION # 73
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 73 -> FAILED tests
------------ ITERATION # 74
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 74 -> FAILED tests
------------ ITERATION # 75
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 75 -> FAILED tests
------------ ITERATION # 76
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 76 -> FAILED tests
------------ ITERATION # 77
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 77 -> FAILED tests
------------ ITERATION # 78
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 78 -> FAILED tests
------------ ITERATION # 79
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 79 -> FAILED tests
------------ ITERATION # 80
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 80 -> FAILED tests
------------ ITERATION # 81
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 81 -> FAILED tests
------------ ITERATION # 82
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 82 -> FAILED tests
------------ ITERATION # 83
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 83 -> FAILED tests
------------ ITERATION # 84
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 84 -> FAILED tests
------------ ITERATION # 85
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 85 -> FAILED tests
------------ ITERATION # 86
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #0, check if hand count has not changed
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 86 -> FAILED tests
------------ ITERATION # 87
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 87 -> FAILED tests
------------ ITERATION # 88
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 1
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 88 -> FAILED tests
------------ ITERATION # 89
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 89 -> FAILED tests
------------ ITERATION # 90
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 90 -> FAILED tests
------------ ITERATION # 91
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 91 -> FAILED tests
------------ ITERATION # 92
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 92 -> FAILED tests
------------ ITERATION # 93
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 93 -> FAILED tests
------------ ITERATION # 94
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 94 -> FAILED tests
------------ ITERATION # 95
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 95 -> FAILED tests
------------ ITERATION # 96
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 96 -> FAILED tests
------------ ITERATION # 97
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 97 -> FAILED tests
------------ ITERATION # 98
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 98 -> FAILED tests
------------ ITERATION # 99
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 99 -> successfully passed tests
------------ ITERATION # 100
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 3
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 100 -> FAILED tests
------------ ITERATION # 101
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 101 -> FAILED tests
------------ ITERATION # 102
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 102 -> FAILED tests
------------ ITERATION # 103
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 103 -> FAILED tests
------------ ITERATION # 104
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 104 -> FAILED tests
------------ ITERATION # 105
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 105 -> FAILED tests
------------ ITERATION # 106
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 106 -> FAILED tests
------------ ITERATION # 107
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 107 -> FAILED tests
------------ ITERATION # 108
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 108 -> FAILED tests
------------ ITERATION # 109
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 109 -> FAILED tests
------------ ITERATION # 110
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 110 -> successfully passed tests
------------ ITERATION # 111
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 111 -> FAILED tests
------------ ITERATION # 112
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 112 -> FAILED tests
------------ ITERATION # 113
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 113 -> FAILED tests
------------ ITERATION # 114
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 114 -> FAILED tests
------------ ITERATION # 115
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 115 -> FAILED tests
------------ ITERATION # 116
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 116 -> successfully passed tests
------------ ITERATION # 117
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 117 -> successfully passed tests
------------ ITERATION # 118
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 118 -> FAILED tests
------------ ITERATION # 119
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 119 -> successfully passed tests
------------ ITERATION # 120
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: -1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 120 -> FAILED tests
------------ ITERATION # 121
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 121 -> FAILED tests
------------ ITERATION # 122
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 122 -> FAILED tests
------------ ITERATION # 123
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 123 -> FAILED tests
------------ ITERATION # 124
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 124 -> FAILED tests
------------ ITERATION # 125
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 125 -> FAILED tests
------------ ITERATION # 126
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 126 -> FAILED tests
------------ ITERATION # 127
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 127 -> FAILED tests
------------ ITERATION # 128
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 128 -> FAILED tests
------------ ITERATION # 129
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 129 -> FAILED tests
------------ ITERATION # 130
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 130 -> FAILED tests
------------ ITERATION # 131
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 131 -> FAILED tests
------------ ITERATION # 132
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 132 -> FAILED tests
------------ ITERATION # 133
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 133 -> FAILED tests
------------ ITERATION # 134
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 134 -> FAILED tests
------------ ITERATION # 135
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 135 -> FAILED tests
------------ ITERATION # 136
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 136 -> FAILED tests
------------ ITERATION # 137
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 137 -> FAILED tests
------------ ITERATION # 138
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 138 -> FAILED tests
------------ ITERATION # 139
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 139 -> FAILED tests
------------ ITERATION # 140
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 140 -> FAILED tests
------------ ITERATION # 141
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 141 -> FAILED tests
------------ ITERATION # 142
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 142 -> FAILED tests
------------ ITERATION # 143
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 143 -> FAILED tests
------------ ITERATION # 144
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 144 -> FAILED tests
------------ ITERATION # 145
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 145 -> FAILED tests
------------ ITERATION # 146
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 146 -> FAILED tests
------------ ITERATION # 147
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 147 -> FAILED tests
------------ ITERATION # 148
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 148 -> FAILED tests
------------ ITERATION # 149
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 149 -> FAILED tests
------------ ITERATION # 150
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 150 -> FAILED tests
------------ ITERATION # 151
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 151 -> FAILED tests
------------ ITERATION # 152
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 152 -> FAILED tests
------------ ITERATION # 153
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 153 -> FAILED tests
------------ ITERATION # 154
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 154 -> FAILED tests
------------ ITERATION # 155
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 155 -> FAILED tests
------------ ITERATION # 156
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 156 -> FAILED tests
------------ ITERATION # 157
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 157 -> FAILED tests
------------ ITERATION # 158
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 158 -> FAILED tests
------------ ITERATION # 159
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 159 -> FAILED tests
------------ ITERATION # 160
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 160 -> FAILED tests
------------ ITERATION # 161
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 161 -> FAILED tests
------------ ITERATION # 162
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 162 -> FAILED tests
------------ ITERATION # 163
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 163 -> FAILED tests
------------ ITERATION # 164
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 164 -> FAILED tests
------------ ITERATION # 165
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 165 -> FAILED tests
------------ ITERATION # 166
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 166 -> FAILED tests
------------ ITERATION # 167
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 167 -> FAILED tests
------------ ITERATION # 168
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 168 -> FAILED tests
------------ ITERATION # 169
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 169 -> FAILED tests
------------ ITERATION # 170
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 170 -> successfully passed tests
------------ ITERATION # 171
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 171 -> successfully passed tests
------------ ITERATION # 172
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 172 -> FAILED tests
------------ ITERATION # 173
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 173 -> FAILED tests
------------ ITERATION # 174
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 174 -> FAILED tests
------------ ITERATION # 175
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 175 -> FAILED tests
------------ ITERATION # 176
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 176 -> FAILED tests
------------ ITERATION # 177
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 177 -> FAILED tests
------------ ITERATION # 178
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 178 -> FAILED tests
------------ ITERATION # 179
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 179 -> FAILED tests
------------ ITERATION # 180
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 180 -> FAILED tests
------------ ITERATION # 181
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 181 -> FAILED tests
------------ ITERATION # 182
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 182 -> FAILED tests
------------ ITERATION # 183
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 183 -> FAILED tests
------------ ITERATION # 184
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 184 -> FAILED tests
------------ ITERATION # 185
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 185 -> FAILED tests
------------ ITERATION # 186
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 186 -> FAILED tests
------------ ITERATION # 187
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 187 -> FAILED tests
------------ ITERATION # 188
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 188 -> FAILED tests
------------ ITERATION # 189
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 189 -> FAILED tests
------------ ITERATION # 190
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 190 -> FAILED tests
------------ ITERATION # 191
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 191 -> FAILED tests
------------ ITERATION # 192
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 192 -> FAILED tests
------------ ITERATION # 193
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 193 -> FAILED tests
------------ ITERATION # 194
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 194 -> FAILED tests
------------ ITERATION # 195
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 195 -> successfully passed tests
------------ ITERATION # 196
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 196 -> FAILED tests
------------ ITERATION # 197
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 197 -> FAILED tests
------------ ITERATION # 198
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 198 -> FAILED tests
------------ ITERATION # 199
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 199 -> FAILED tests
------------ ITERATION # 200
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 200 -> FAILED tests
------------ ITERATION # 201
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 201 -> FAILED tests
------------ ITERATION # 202
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 202 -> FAILED tests
------------ ITERATION # 203
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 203 -> FAILED tests
------------ ITERATION # 204
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 204 -> FAILED tests
------------ ITERATION # 205
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 205 -> FAILED tests
------------ ITERATION # 206
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 206 -> FAILED tests
------------ ITERATION # 207
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 207 -> successfully passed tests
------------ ITERATION # 208
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 208 -> FAILED tests
------------ ITERATION # 209
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 209 -> FAILED tests
------------ ITERATION # 210
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 210 -> FAILED tests
------------ ITERATION # 211
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 211 -> FAILED tests
------------ ITERATION # 212
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 3
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 212 -> FAILED tests
------------ ITERATION # 213
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 213 -> successfully passed tests
------------ ITERATION # 214
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 214 -> FAILED tests
------------ ITERATION # 215
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 215 -> FAILED tests
------------ ITERATION # 216
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #0, check if hand count has not changed
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 216 -> FAILED tests
------------ ITERATION # 217
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 217 -> FAILED tests
------------ ITERATION # 218
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 218 -> FAILED tests
------------ ITERATION # 219
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 219 -> FAILED tests
------------ ITERATION # 220
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 5
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 220 -> FAILED tests
------------ ITERATION # 221
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 221 -> FAILED tests
------------ ITERATION # 222
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 222 -> FAILED tests
------------ ITERATION # 223
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 223 -> FAILED tests
------------ ITERATION # 224
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 224 -> FAILED tests
------------ ITERATION # 225
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 225 -> FAILED tests
------------ ITERATION # 226
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 226 -> FAILED tests
------------ ITERATION # 227
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 227 -> FAILED tests
------------ ITERATION # 228
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 228 -> FAILED tests
------------ ITERATION # 229
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 229 -> FAILED tests
------------ ITERATION # 230
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 230 -> FAILED tests
------------ ITERATION # 231
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 231 -> FAILED tests
------------ ITERATION # 232
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 232 -> FAILED tests
------------ ITERATION # 233
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 233 -> FAILED tests
------------ ITERATION # 234
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 234 -> FAILED tests
------------ ITERATION # 235
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 235 -> FAILED tests
------------ ITERATION # 236
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 236 -> FAILED tests
------------ ITERATION # 237
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 237 -> FAILED tests
------------ ITERATION # 238
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 238 -> FAILED tests
------------ ITERATION # 239
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 239 -> FAILED tests
------------ ITERATION # 240
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 240 -> FAILED tests
------------ ITERATION # 241
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 241 -> FAILED tests
------------ ITERATION # 242
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 242 -> FAILED tests
------------ ITERATION # 243
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 243 -> successfully passed tests
------------ ITERATION # 244
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 244 -> FAILED tests
------------ ITERATION # 245
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 245 -> FAILED tests
------------ ITERATION # 246
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 246 -> FAILED tests
------------ ITERATION # 247
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 247 -> FAILED tests
------------ ITERATION # 248
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 248 -> successfully passed tests
------------ ITERATION # 249
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 2
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 249 -> FAILED tests
------------ ITERATION # 250
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 250 -> FAILED tests
------------ ITERATION # 251
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 251 -> FAILED tests
------------ ITERATION # 252
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 252 -> FAILED tests
------------ ITERATION # 253
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 253 -> FAILED tests
------------ ITERATION # 254
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 254 -> FAILED tests
------------ ITERATION # 255
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 255 -> FAILED tests
------------ ITERATION # 256
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 256 -> FAILED tests
------------ ITERATION # 257
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 257 -> FAILED tests
------------ ITERATION # 258
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 258 -> FAILED tests
------------ ITERATION # 259
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 259 -> FAILED tests
------------ ITERATION # 260
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 260 -> FAILED tests
------------ ITERATION # 261
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 261 -> FAILED tests
------------ ITERATION # 262
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 262 -> FAILED tests
------------ ITERATION # 263
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 263 -> FAILED tests
------------ ITERATION # 264
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 264 -> FAILED tests
------------ ITERATION # 265
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 265 -> successfully passed tests
------------ ITERATION # 266
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 266 -> successfully passed tests
------------ ITERATION # 267
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 267 -> FAILED tests
------------ ITERATION # 268
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 268 -> FAILED tests
------------ ITERATION # 269
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 269 -> FAILED tests
------------ ITERATION # 270
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 270 -> FAILED tests
------------ ITERATION # 271
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 2
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 271 -> FAILED tests
------------ ITERATION # 272
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: -1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 272 -> FAILED tests
------------ ITERATION # 273
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 273 -> FAILED tests
------------ ITERATION # 274
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 274 -> FAILED tests
------------ ITERATION # 275
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 275 -> successfully passed tests
------------ ITERATION # 276
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 276 -> FAILED tests
------------ ITERATION # 277
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 277 -> FAILED tests
------------ ITERATION # 278
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 278 -> FAILED tests
------------ ITERATION # 279
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 279 -> FAILED tests
------------ ITERATION # 280
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 280 -> FAILED tests
------------ ITERATION # 281
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 281 -> FAILED tests
------------ ITERATION # 282
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 282 -> FAILED tests
------------ ITERATION # 283
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 283 -> FAILED tests
------------ ITERATION # 284
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 284 -> FAILED tests
------------ ITERATION # 285
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 285 -> successfully passed tests
------------ ITERATION # 286
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 286 -> FAILED tests
------------ ITERATION # 287
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 287 -> successfully passed tests
------------ ITERATION # 288
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 288 -> FAILED tests
------------ ITERATION # 289
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 289 -> FAILED tests
------------ ITERATION # 290
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 290 -> FAILED tests
------------ ITERATION # 291
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 291 -> FAILED tests
------------ ITERATION # 292
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 292 -> FAILED tests
------------ ITERATION # 293
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 293 -> FAILED tests
------------ ITERATION # 294
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #0, check if hand count has not changed
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 294 -> FAILED tests
------------ ITERATION # 295
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 295 -> successfully passed tests
------------ ITERATION # 296
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 296 -> FAILED tests
------------ ITERATION # 297
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 297 -> FAILED tests
------------ ITERATION # 298
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 298 -> FAILED tests
------------ ITERATION # 299
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 299 -> FAILED tests
------------ ITERATION # 300
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 300 -> FAILED tests
------------ ITERATION # 301
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 301 -> FAILED tests
------------ ITERATION # 302
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 302 -> FAILED tests
------------ ITERATION # 303
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 303 -> FAILED tests
------------ ITERATION # 304
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 304 -> FAILED tests
------------ ITERATION # 305
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 305 -> FAILED tests
------------ ITERATION # 306
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 306 -> successfully passed tests
------------ ITERATION # 307
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 307 -> FAILED tests
------------ ITERATION # 308
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 308 -> successfully passed tests
------------ ITERATION # 309
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 309 -> FAILED tests
------------ ITERATION # 310
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 310 -> FAILED tests
------------ ITERATION # 311
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 311 -> FAILED tests
------------ ITERATION # 312
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 312 -> FAILED tests
------------ ITERATION # 313
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 313 -> FAILED tests
------------ ITERATION # 314
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 314 -> FAILED tests
------------ ITERATION # 315
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 315 -> FAILED tests
------------ ITERATION # 316
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 316 -> successfully passed tests
------------ ITERATION # 317
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #1, check if hand count has not changed
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 317 -> FAILED tests
------------ ITERATION # 318
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 318 -> FAILED tests
------------ ITERATION # 319
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 319 -> FAILED tests
------------ ITERATION # 320
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 320 -> FAILED tests
------------ ITERATION # 321
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 321 -> FAILED tests
------------ ITERATION # 322
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 322 -> FAILED tests
------------ ITERATION # 323
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 323 -> FAILED tests
------------ ITERATION # 324
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 324 -> successfully passed tests
------------ ITERATION # 325
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 325 -> successfully passed tests
------------ ITERATION # 326
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 326 -> FAILED tests
------------ ITERATION # 327
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 327 -> FAILED tests
------------ ITERATION # 328
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 328 -> successfully passed tests
------------ ITERATION # 329
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 329 -> FAILED tests
------------ ITERATION # 330
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 330 -> FAILED tests
------------ ITERATION # 331
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 331 -> FAILED tests
------------ ITERATION # 332
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 332 -> FAILED tests
------------ ITERATION # 333
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 333 -> FAILED tests
------------ ITERATION # 334
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 334 -> FAILED tests
------------ ITERATION # 335
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 335 -> FAILED tests
------------ ITERATION # 336
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 336 -> FAILED tests
------------ ITERATION # 337
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 337 -> FAILED tests
------------ ITERATION # 338
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 338 -> FAILED tests
------------ ITERATION # 339
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 339 -> FAILED tests
------------ ITERATION # 340
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 340 -> FAILED tests
------------ ITERATION # 341
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 5
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 341 -> FAILED tests
------------ ITERATION # 342
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 342 -> FAILED tests
------------ ITERATION # 343
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 343 -> FAILED tests
------------ ITERATION # 344
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 344 -> FAILED tests
------------ ITERATION # 345
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 345 -> FAILED tests
------------ ITERATION # 346
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 346 -> FAILED tests
------------ ITERATION # 347
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 347 -> FAILED tests
------------ ITERATION # 348
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 348 -> FAILED tests
------------ ITERATION # 349
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 349 -> FAILED tests
------------ ITERATION # 350
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 350 -> FAILED tests
------------ ITERATION # 351
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 351 -> FAILED tests
------------ ITERATION # 352
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #1, check if hand count has not changed
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 352 -> FAILED tests
------------ ITERATION # 353
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 353 -> successfully passed tests
------------ ITERATION # 354
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 354 -> FAILED tests
------------ ITERATION # 355
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 355 -> FAILED tests
------------ ITERATION # 356
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #0, check if hand count has not changed
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 356 -> FAILED tests
------------ ITERATION # 357
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 357 -> FAILED tests
------------ ITERATION # 358
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 358 -> FAILED tests
------------ ITERATION # 359
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 359 -> FAILED tests
------------ ITERATION # 360
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #0, check if hand count has not changed
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 360 -> FAILED tests
------------ ITERATION # 361
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 361 -> FAILED tests
------------ ITERATION # 362
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 362 -> successfully passed tests
------------ ITERATION # 363
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 363 -> FAILED tests
------------ ITERATION # 364
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 364 -> FAILED tests
------------ ITERATION # 365
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 365 -> successfully passed tests
------------ ITERATION # 366
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 366 -> FAILED tests
------------ ITERATION # 367
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 367 -> FAILED tests
------------ ITERATION # 368
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 368 -> FAILED tests
------------ ITERATION # 369
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 369 -> FAILED tests
------------ ITERATION # 370
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 370 -> FAILED tests
------------ ITERATION # 371
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 371 -> FAILED tests
------------ ITERATION # 372
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 372 -> FAILED tests
------------ ITERATION # 373
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 373 -> FAILED tests
------------ ITERATION # 374
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 374 -> FAILED tests
------------ ITERATION # 375
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 375 -> FAILED tests
------------ ITERATION # 376
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 376 -> FAILED tests
------------ ITERATION # 377
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 377 -> FAILED tests
------------ ITERATION # 378
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 378 -> FAILED tests
------------ ITERATION # 379
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 379 -> FAILED tests
------------ ITERATION # 380
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 380 -> FAILED tests
------------ ITERATION # 381
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 381 -> FAILED tests
------------ ITERATION # 382
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 382 -> FAILED tests
------------ ITERATION # 383
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 383 -> FAILED tests
------------ ITERATION # 384
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #1, check if hand count has not changed
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 384 -> FAILED tests
------------ ITERATION # 385
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 385 -> FAILED tests
------------ ITERATION # 386
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 386 -> FAILED tests
------------ ITERATION # 387
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 387 -> FAILED tests
------------ ITERATION # 388
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: -1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 388 -> FAILED tests
------------ ITERATION # 389
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 389 -> FAILED tests
------------ ITERATION # 390
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 390 -> FAILED tests
------------ ITERATION # 391
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 391 -> FAILED tests
------------ ITERATION # 392
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 392 -> FAILED tests
------------ ITERATION # 393
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 393 -> FAILED tests
------------ ITERATION # 394
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 394 -> FAILED tests
------------ ITERATION # 395
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 395 -> FAILED tests
------------ ITERATION # 396
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 396 -> FAILED tests
------------ ITERATION # 397
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 397 -> FAILED tests
------------ ITERATION # 398
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 398 -> FAILED tests
------------ ITERATION # 399
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 399 -> FAILED tests
------------ ITERATION # 400
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 400 -> FAILED tests
------------ ITERATION # 401
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 1
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 401 -> FAILED tests
------------ ITERATION # 402
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 402 -> FAILED tests
------------ ITERATION # 403
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 403 -> FAILED tests
------------ ITERATION # 404
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 404 -> FAILED tests
------------ ITERATION # 405
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 405 -> FAILED tests
------------ ITERATION # 406
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 406 -> FAILED tests
------------ ITERATION # 407
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 407 -> FAILED tests
------------ ITERATION # 408
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 408 -> FAILED tests
------------ ITERATION # 409
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 409 -> FAILED tests
------------ ITERATION # 410
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 410 -> FAILED tests
------------ ITERATION # 411
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 411 -> FAILED tests
------------ ITERATION # 412
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 412 -> FAILED tests
------------ ITERATION # 413
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 413 -> successfully passed tests
------------ ITERATION # 414
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 414 -> FAILED tests
------------ ITERATION # 415
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 415 -> FAILED tests
------------ ITERATION # 416
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 416 -> FAILED tests
------------ ITERATION # 417
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 417 -> FAILED tests
------------ ITERATION # 418
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 418 -> FAILED tests
------------ ITERATION # 419
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 419 -> FAILED tests
------------ ITERATION # 420
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 420 -> FAILED tests
------------ ITERATION # 421
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 421 -> FAILED tests
------------ ITERATION # 422
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 422 -> FAILED tests
------------ ITERATION # 423
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 423 -> FAILED tests
------------ ITERATION # 424
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 1
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 424 -> FAILED tests
------------ ITERATION # 425
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 425 -> FAILED tests
------------ ITERATION # 426
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 426 -> FAILED tests
------------ ITERATION # 427
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 427 -> FAILED tests
------------ ITERATION # 428
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 428 -> FAILED tests
------------ ITERATION # 429
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 429 -> FAILED tests
------------ ITERATION # 430
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 430 -> FAILED tests
------------ ITERATION # 431
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 431 -> FAILED tests
------------ ITERATION # 432
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 432 -> FAILED tests
------------ ITERATION # 433
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 433 -> FAILED tests
------------ ITERATION # 434
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 434 -> successfully passed tests
------------ ITERATION # 435
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 435 -> FAILED tests
------------ ITERATION # 436
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 436 -> FAILED tests
------------ ITERATION # 437
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 437 -> FAILED tests
------------ ITERATION # 438
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 438 -> successfully passed tests
------------ ITERATION # 439
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 439 -> FAILED tests
------------ ITERATION # 440
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 440 -> FAILED tests
------------ ITERATION # 441
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 441 -> FAILED tests
------------ ITERATION # 442
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 442 -> FAILED tests
------------ ITERATION # 443
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 443 -> FAILED tests
------------ ITERATION # 444
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 444 -> successfully passed tests
------------ ITERATION # 445
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 445 -> FAILED tests
------------ ITERATION # 446
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 446 -> FAILED tests
------------ ITERATION # 447
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 447 -> FAILED tests
------------ ITERATION # 448
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 448 -> FAILED tests
------------ ITERATION # 449
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 449 -> FAILED tests
------------ ITERATION # 450
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 450 -> FAILED tests
------------ ITERATION # 451
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 451 -> FAILED tests
------------ ITERATION # 452
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 452 -> FAILED tests
------------ ITERATION # 453
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 453 -> FAILED tests
------------ ITERATION # 454
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 454 -> FAILED tests
------------ ITERATION # 455
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 455 -> FAILED tests
------------ ITERATION # 456
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 456 -> FAILED tests
------------ ITERATION # 457
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 457 -> FAILED tests
------------ ITERATION # 458
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 458 -> FAILED tests
------------ ITERATION # 459
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 459 -> successfully passed tests
------------ ITERATION # 460
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 460 -> FAILED tests
------------ ITERATION # 461
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 461 -> FAILED tests
------------ ITERATION # 462
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 462 -> FAILED tests
------------ ITERATION # 463
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 463 -> FAILED tests
------------ ITERATION # 464
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 464 -> FAILED tests
------------ ITERATION # 465
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 465 -> FAILED tests
------------ ITERATION # 466
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 466 -> FAILED tests
------------ ITERATION # 467
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 467 -> FAILED tests
------------ ITERATION # 468
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 468 -> FAILED tests
------------ ITERATION # 469
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 469 -> FAILED tests
------------ ITERATION # 470
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 470 -> successfully passed tests
------------ ITERATION # 471
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 471 -> FAILED tests
------------ ITERATION # 472
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 472 -> FAILED tests
------------ ITERATION # 473
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 473 -> FAILED tests
------------ ITERATION # 474
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 474 -> FAILED tests
------------ ITERATION # 475
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 475 -> FAILED tests
------------ ITERATION # 476
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 476 -> FAILED tests
------------ ITERATION # 477
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 477 -> FAILED tests
------------ ITERATION # 478
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 478 -> FAILED tests
------------ ITERATION # 479
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 479 -> FAILED tests
------------ ITERATION # 480
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 480 -> FAILED tests
------------ ITERATION # 481
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 481 -> FAILED tests
------------ ITERATION # 482
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 482 -> FAILED tests
------------ ITERATION # 483
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 483 -> FAILED tests
------------ ITERATION # 484
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 484 -> FAILED tests
------------ ITERATION # 485
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 485 -> FAILED tests
------------ ITERATION # 486
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 486 -> FAILED tests
------------ ITERATION # 487
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 487 -> FAILED tests
------------ ITERATION # 488
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 488 -> FAILED tests
------------ ITERATION # 489
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 489 -> successfully passed tests
------------ ITERATION # 490
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 490 -> FAILED tests
------------ ITERATION # 491
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 491 -> FAILED tests
------------ ITERATION # 492
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 492 -> FAILED tests
------------ ITERATION # 493
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 493 -> FAILED tests
------------ ITERATION # 494
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 494 -> FAILED tests
------------ ITERATION # 495
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 495 -> FAILED tests
------------ ITERATION # 496
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 496 -> successfully passed tests
------------ ITERATION # 497
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 497 -> FAILED tests
------------ ITERATION # 498
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 498 -> FAILED tests
------------ ITERATION # 499
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 499 -> FAILED tests
------------ ITERATION # 500
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 500 -> FAILED tests
------------ ITERATION # 501
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 501 -> FAILED tests
------------ ITERATION # 502
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 502 -> FAILED tests
------------ ITERATION # 503
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 503 -> FAILED tests
------------ ITERATION # 504
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 504 -> FAILED tests
------------ ITERATION # 505
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 505 -> FAILED tests
------------ ITERATION # 506
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 506 -> FAILED tests
------------ ITERATION # 507
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 507 -> FAILED tests
------------ ITERATION # 508
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: -1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 508 -> FAILED tests
------------ ITERATION # 509
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 509 -> successfully passed tests
------------ ITERATION # 510
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 510 -> FAILED tests
------------ ITERATION # 511
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 511 -> FAILED tests
------------ ITERATION # 512
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 512 -> FAILED tests
------------ ITERATION # 513
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 513 -> FAILED tests
------------ ITERATION # 514
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #1, check if hand count has not changed
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 514 -> FAILED tests
------------ ITERATION # 515
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 515 -> FAILED tests
------------ ITERATION # 516
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 4
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 516 -> FAILED tests
------------ ITERATION # 517
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 517 -> successfully passed tests
------------ ITERATION # 518
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 518 -> FAILED tests
------------ ITERATION # 519
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 519 -> FAILED tests
------------ ITERATION # 520
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 520 -> FAILED tests
------------ ITERATION # 521
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 521 -> FAILED tests
------------ ITERATION # 522
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 522 -> FAILED tests
------------ ITERATION # 523
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 523 -> successfully passed tests
------------ ITERATION # 524
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 524 -> FAILED tests
------------ ITERATION # 525
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 525 -> FAILED tests
------------ ITERATION # 526
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 526 -> FAILED tests
------------ ITERATION # 527
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 527 -> FAILED tests
------------ ITERATION # 528
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 528 -> FAILED tests
------------ ITERATION # 529
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 529 -> FAILED tests
------------ ITERATION # 530
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 530 -> FAILED tests
------------ ITERATION # 531
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 531 -> FAILED tests
------------ ITERATION # 532
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 532 -> FAILED tests
------------ ITERATION # 533
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 533 -> FAILED tests
------------ ITERATION # 534
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 534 -> FAILED tests
------------ ITERATION # 535
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 535 -> FAILED tests
------------ ITERATION # 536
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 536 -> FAILED tests
------------ ITERATION # 537
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 537 -> successfully passed tests
------------ ITERATION # 538
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 538 -> FAILED tests
------------ ITERATION # 539
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 539 -> FAILED tests
------------ ITERATION # 540
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 540 -> FAILED tests
------------ ITERATION # 541
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 541 -> FAILED tests
------------ ITERATION # 542
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 542 -> FAILED tests
------------ ITERATION # 543
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 543 -> FAILED tests
------------ ITERATION # 544
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 544 -> FAILED tests
------------ ITERATION # 545
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 545 -> FAILED tests
------------ ITERATION # 546
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 546 -> FAILED tests
------------ ITERATION # 547
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 547 -> FAILED tests
------------ ITERATION # 548
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 548 -> FAILED tests
------------ ITERATION # 549
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 549 -> FAILED tests
------------ ITERATION # 550
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 550 -> FAILED tests
------------ ITERATION # 551
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 551 -> FAILED tests
------------ ITERATION # 552
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 552 -> FAILED tests
------------ ITERATION # 553
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 553 -> FAILED tests
------------ ITERATION # 554
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 554 -> FAILED tests
------------ ITERATION # 555
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 555 -> FAILED tests
------------ ITERATION # 556
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 556 -> FAILED tests
------------ ITERATION # 557
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: -1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 557 -> FAILED tests
------------ ITERATION # 558
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 558 -> FAILED tests
------------ ITERATION # 559
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 559 -> FAILED tests
------------ ITERATION # 560
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 560 -> FAILED tests
------------ ITERATION # 561
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 561 -> FAILED tests
------------ ITERATION # 562
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 562 -> FAILED tests
------------ ITERATION # 563
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 563 -> successfully passed tests
------------ ITERATION # 564
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 564 -> FAILED tests
------------ ITERATION # 565
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 5
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 565 -> FAILED tests
------------ ITERATION # 566
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 566 -> FAILED tests
------------ ITERATION # 567
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 567 -> FAILED tests
------------ ITERATION # 568
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 568 -> FAILED tests
------------ ITERATION # 569
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 569 -> FAILED tests
------------ ITERATION # 570
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 570 -> FAILED tests
------------ ITERATION # 571
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 571 -> FAILED tests
------------ ITERATION # 572
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 572 -> FAILED tests
------------ ITERATION # 573
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 573 -> FAILED tests
------------ ITERATION # 574
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 574 -> FAILED tests
------------ ITERATION # 575
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 3
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 575 -> FAILED tests
------------ ITERATION # 576
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 576 -> FAILED tests
------------ ITERATION # 577
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 577 -> successfully passed tests
------------ ITERATION # 578
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #1, check if hand count has not changed
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 578 -> FAILED tests
------------ ITERATION # 579
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 579 -> FAILED tests
------------ ITERATION # 580
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 580 -> FAILED tests
------------ ITERATION # 581
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 581 -> FAILED tests
------------ ITERATION # 582
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 582 -> FAILED tests
------------ ITERATION # 583
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 583 -> FAILED tests
------------ ITERATION # 584
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 584 -> FAILED tests
------------ ITERATION # 585
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 585 -> FAILED tests
------------ ITERATION # 586
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 586 -> FAILED tests
------------ ITERATION # 587
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 587 -> FAILED tests
------------ ITERATION # 588
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 588 -> FAILED tests
------------ ITERATION # 589
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 589 -> FAILED tests
------------ ITERATION # 590
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 590 -> FAILED tests
------------ ITERATION # 591
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 591 -> FAILED tests
------------ ITERATION # 592
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 592 -> FAILED tests
------------ ITERATION # 593
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 593 -> FAILED tests
------------ ITERATION # 594
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 594 -> FAILED tests
------------ ITERATION # 595
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 595 -> FAILED tests
------------ ITERATION # 596
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 596 -> FAILED tests
------------ ITERATION # 597
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 597 -> FAILED tests
------------ ITERATION # 598
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 598 -> FAILED tests
------------ ITERATION # 599
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 599 -> FAILED tests
------------ ITERATION # 600
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 600 -> FAILED tests
------------ ITERATION # 601
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 601 -> FAILED tests
------------ ITERATION # 602
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #1, check if hand count has not changed
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 602 -> FAILED tests
------------ ITERATION # 603
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 603 -> FAILED tests
------------ ITERATION # 604
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 604 -> FAILED tests
------------ ITERATION # 605
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 605 -> FAILED tests
------------ ITERATION # 606
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 606 -> FAILED tests
------------ ITERATION # 607
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 607 -> FAILED tests
------------ ITERATION # 608
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 608 -> FAILED tests
------------ ITERATION # 609
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 609 -> FAILED tests
------------ ITERATION # 610
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 610 -> FAILED tests
------------ ITERATION # 611
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 611 -> FAILED tests
------------ ITERATION # 612
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 612 -> FAILED tests
------------ ITERATION # 613
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 613 -> FAILED tests
------------ ITERATION # 614
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 614 -> FAILED tests
------------ ITERATION # 615
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 615 -> FAILED tests
------------ ITERATION # 616
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 616 -> FAILED tests
------------ ITERATION # 617
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 617 -> FAILED tests
------------ ITERATION # 618
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 618 -> FAILED tests
------------ ITERATION # 619
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 619 -> FAILED tests
------------ ITERATION # 620
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 620 -> FAILED tests
------------ ITERATION # 621
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 621 -> FAILED tests
------------ ITERATION # 622
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 622 -> FAILED tests
------------ ITERATION # 623
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 623 -> FAILED tests
------------ ITERATION # 624
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 624 -> FAILED tests
------------ ITERATION # 625
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 625 -> FAILED tests
------------ ITERATION # 626
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 626 -> FAILED tests
------------ ITERATION # 627
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 627 -> FAILED tests
------------ ITERATION # 628
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 628 -> FAILED tests
------------ ITERATION # 629
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 629 -> FAILED tests
------------ ITERATION # 630
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 630 -> FAILED tests
------------ ITERATION # 631
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 631 -> FAILED tests
------------ ITERATION # 632
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 632 -> FAILED tests
------------ ITERATION # 633
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 633 -> FAILED tests
------------ ITERATION # 634
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 634 -> FAILED tests
------------ ITERATION # 635
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 635 -> FAILED tests
------------ ITERATION # 636
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 636 -> FAILED tests
------------ ITERATION # 637
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #0, check if hand count has not changed
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 637 -> FAILED tests
------------ ITERATION # 638
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 638 -> FAILED tests
------------ ITERATION # 639
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 639 -> FAILED tests
------------ ITERATION # 640
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 0, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 640 -> FAILED tests
------------ ITERATION # 641
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 641 -> FAILED tests
------------ ITERATION # 642
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 642 -> FAILED tests
------------ ITERATION # 643
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 643 -> FAILED tests
------------ ITERATION # 644
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 644 -> FAILED tests
------------ ITERATION # 645
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 645 -> FAILED tests
------------ ITERATION # 646
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 646 -> FAILED tests
------------ ITERATION # 647
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 647 -> FAILED tests
------------ ITERATION # 648
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 648 -> FAILED tests
------------ ITERATION # 649
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 649 -> FAILED tests
------------ ITERATION # 650
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 650 -> FAILED tests
------------ ITERATION # 651
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 3
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 651 -> FAILED tests
------------ ITERATION # 652
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 652 -> successfully passed tests
------------ ITERATION # 653
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 653 -> FAILED tests
------------ ITERATION # 654
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 654 -> FAILED tests
------------ ITERATION # 655
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 655 -> FAILED tests
------------ ITERATION # 656
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 656 -> FAILED tests
------------ ITERATION # 657
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 657 -> FAILED tests
------------ ITERATION # 658
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 658 -> FAILED tests
------------ ITERATION # 659
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 659 -> FAILED tests
------------ ITERATION # 660
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 660 -> FAILED tests
------------ ITERATION # 661
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 661 -> FAILED tests
------------ ITERATION # 662
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 662 -> successfully passed tests
------------ ITERATION # 663
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 663 -> FAILED tests
------------ ITERATION # 664
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 664 -> FAILED tests
------------ ITERATION # 665
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 665 -> FAILED tests
------------ ITERATION # 666
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 666 -> FAILED tests
------------ ITERATION # 667
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 667 -> FAILED tests
------------ ITERATION # 668
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 668 -> FAILED tests
------------ ITERATION # 669
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 669 -> FAILED tests
------------ ITERATION # 670
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 670 -> FAILED tests
------------ ITERATION # 671
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 671 -> FAILED tests
------------ ITERATION # 672
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 672 -> FAILED tests
------------ ITERATION # 673
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 0, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 673 -> FAILED tests
------------ ITERATION # 674
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 674 -> FAILED tests
------------ ITERATION # 675
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 675 -> FAILED tests
------------ ITERATION # 676
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 676 -> FAILED tests
------------ ITERATION # 677
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 677 -> FAILED tests
------------ ITERATION # 678
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 678 -> FAILED tests
------------ ITERATION # 679
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 679 -> successfully passed tests
------------ ITERATION # 680
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 680 -> FAILED tests
------------ ITERATION # 681
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 681 -> FAILED tests
------------ ITERATION # 682
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 682 -> FAILED tests
------------ ITERATION # 683
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 683 -> successfully passed tests
------------ ITERATION # 684
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 684 -> FAILED tests
------------ ITERATION # 685
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 685 -> FAILED tests
------------ ITERATION # 686
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 686 -> successfully passed tests
------------ ITERATION # 687
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 687 -> FAILED tests
------------ ITERATION # 688
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 688 -> FAILED tests
------------ ITERATION # 689
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 689 -> FAILED tests
------------ ITERATION # 690
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 690 -> FAILED tests
------------ ITERATION # 691
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #0, check if hand count has not changed
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 691 -> FAILED tests
------------ ITERATION # 692
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 692 -> FAILED tests
------------ ITERATION # 693
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 693 -> FAILED tests
------------ ITERATION # 694
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 694 -> FAILED tests
------------ ITERATION # 695
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 695 -> FAILED tests
------------ ITERATION # 696
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 696 -> FAILED tests
------------ ITERATION # 697
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 697 -> successfully passed tests
------------ ITERATION # 698
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 698 -> successfully passed tests
------------ ITERATION # 699
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 699 -> successfully passed tests
------------ ITERATION # 700
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 700 -> FAILED tests
------------ ITERATION # 701
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 701 -> FAILED tests
------------ ITERATION # 702
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 702 -> successfully passed tests
------------ ITERATION # 703
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 703 -> FAILED tests
------------ ITERATION # 704
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 704 -> FAILED tests
------------ ITERATION # 705
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 705 -> FAILED tests
------------ ITERATION # 706
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 706 -> FAILED tests
------------ ITERATION # 707
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 707 -> FAILED tests
------------ ITERATION # 708
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 708 -> FAILED tests
------------ ITERATION # 709
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 709 -> FAILED tests
------------ ITERATION # 710
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 710 -> FAILED tests
------------ ITERATION # 711
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 711 -> FAILED tests
------------ ITERATION # 712
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 712 -> successfully passed tests
------------ ITERATION # 713
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 713 -> FAILED tests
------------ ITERATION # 714
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 714 -> FAILED tests
------------ ITERATION # 715
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 715 -> FAILED tests
------------ ITERATION # 716
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 716 -> FAILED tests
------------ ITERATION # 717
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 717 -> FAILED tests
------------ ITERATION # 718
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 718 -> FAILED tests
------------ ITERATION # 719
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 719 -> FAILED tests
------------ ITERATION # 720
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 720 -> successfully passed tests
------------ ITERATION # 721
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 721 -> FAILED tests
------------ ITERATION # 722
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 722 -> FAILED tests
------------ ITERATION # 723
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 723 -> FAILED tests
------------ ITERATION # 724
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 724 -> FAILED tests
------------ ITERATION # 725
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 725 -> FAILED tests
------------ ITERATION # 726
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 726 -> FAILED tests
------------ ITERATION # 727
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #1, check if hand count has not changed
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 727 -> FAILED tests
------------ ITERATION # 728
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 728 -> successfully passed tests
------------ ITERATION # 729
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 729 -> FAILED tests
------------ ITERATION # 730
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 730 -> FAILED tests
------------ ITERATION # 731
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 731 -> FAILED tests
------------ ITERATION # 732
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 732 -> FAILED tests
------------ ITERATION # 733
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 733 -> successfully passed tests
------------ ITERATION # 734
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 734 -> successfully passed tests
------------ ITERATION # 735
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 735 -> FAILED tests
------------ ITERATION # 736
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 736 -> FAILED tests
------------ ITERATION # 737
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 737 -> FAILED tests
------------ ITERATION # 738
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 738 -> FAILED tests
------------ ITERATION # 739
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 739 -> FAILED tests
------------ ITERATION # 740
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 740 -> FAILED tests
------------ ITERATION # 741
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 741 -> FAILED tests
------------ ITERATION # 742
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 742 -> FAILED tests
------------ ITERATION # 743
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 743 -> FAILED tests
------------ ITERATION # 744
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 744 -> FAILED tests
------------ ITERATION # 745
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 745 -> FAILED tests
------------ ITERATION # 746
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 746 -> FAILED tests
------------ ITERATION # 747
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 747 -> FAILED tests
------------ ITERATION # 748
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 748 -> FAILED tests
------------ ITERATION # 749
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 749 -> successfully passed tests
------------ ITERATION # 750
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 750 -> FAILED tests
------------ ITERATION # 751
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 751 -> FAILED tests
------------ ITERATION # 752
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 752 -> FAILED tests
------------ ITERATION # 753
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 753 -> FAILED tests
------------ ITERATION # 754
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 754 -> FAILED tests
------------ ITERATION # 755
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 755 -> FAILED tests
------------ ITERATION # 756
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 756 -> FAILED tests
------------ ITERATION # 757
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 757 -> FAILED tests
------------ ITERATION # 758
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 758 -> FAILED tests
------------ ITERATION # 759
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 759 -> FAILED tests
------------ ITERATION # 760
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 760 -> FAILED tests
------------ ITERATION # 761
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 761 -> FAILED tests
------------ ITERATION # 762
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 762 -> FAILED tests
------------ ITERATION # 763
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 763 -> FAILED tests
------------ ITERATION # 764
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 764 -> FAILED tests
------------ ITERATION # 765
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 765 -> FAILED tests
------------ ITERATION # 766
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 766 -> FAILED tests
------------ ITERATION # 767
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 767 -> successfully passed tests
------------ ITERATION # 768
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 768 -> FAILED tests
------------ ITERATION # 769
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 769 -> FAILED tests
------------ ITERATION # 770
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 770 -> FAILED tests
------------ ITERATION # 771
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 771 -> FAILED tests
------------ ITERATION # 772
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 772 -> FAILED tests
------------ ITERATION # 773
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 773 -> FAILED tests
------------ ITERATION # 774
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 774 -> successfully passed tests
------------ ITERATION # 775
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 775 -> FAILED tests
------------ ITERATION # 776
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 776 -> FAILED tests
------------ ITERATION # 777
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 777 -> FAILED tests
------------ ITERATION # 778
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 778 -> FAILED tests
------------ ITERATION # 779
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 779 -> FAILED tests
------------ ITERATION # 780
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 780 -> FAILED tests
------------ ITERATION # 781
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 781 -> FAILED tests
------------ ITERATION # 782
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 782 -> FAILED tests
------------ ITERATION # 783
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 783 -> FAILED tests
------------ ITERATION # 784
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 784 -> FAILED tests
------------ ITERATION # 785
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 785 -> successfully passed tests
------------ ITERATION # 786
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 786 -> FAILED tests
------------ ITERATION # 787
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 787 -> FAILED tests
------------ ITERATION # 788
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 788 -> FAILED tests
------------ ITERATION # 789
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 789 -> FAILED tests
------------ ITERATION # 790
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 790 -> FAILED tests
------------ ITERATION # 791
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 791 -> FAILED tests
------------ ITERATION # 792
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 792 -> FAILED tests
------------ ITERATION # 793
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 793 -> successfully passed tests
------------ ITERATION # 794
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 794 -> FAILED tests
------------ ITERATION # 795
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 795 -> FAILED tests
------------ ITERATION # 796
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 796 -> FAILED tests
------------ ITERATION # 797
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 797 -> FAILED tests
------------ ITERATION # 798
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 798 -> FAILED tests
------------ ITERATION # 799
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 799 -> FAILED tests
------------ ITERATION # 800
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 800 -> FAILED tests
------------ ITERATION # 801
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 801 -> FAILED tests
------------ ITERATION # 802
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 802 -> FAILED tests
------------ ITERATION # 803
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 803 -> FAILED tests
------------ ITERATION # 804
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 1
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 804 -> FAILED tests
------------ ITERATION # 805
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 805 -> FAILED tests
------------ ITERATION # 806
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 806 -> FAILED tests
------------ ITERATION # 807
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 807 -> FAILED tests
------------ ITERATION # 808
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 808 -> FAILED tests
------------ ITERATION # 809
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #1, check if hand count has not changed
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 809 -> FAILED tests
------------ ITERATION # 810
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 810 -> FAILED tests
------------ ITERATION # 811
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 811 -> FAILED tests
------------ ITERATION # 812
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 812 -> FAILED tests
------------ ITERATION # 813
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 813 -> FAILED tests
------------ ITERATION # 814
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 814 -> FAILED tests
------------ ITERATION # 815
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 815 -> FAILED tests
------------ ITERATION # 816
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 816 -> FAILED tests
------------ ITERATION # 817
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 817 -> FAILED tests
------------ ITERATION # 818
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 818 -> FAILED tests
------------ ITERATION # 819
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #1, check if hand count has not changed
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 819 -> FAILED tests
------------ ITERATION # 820
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 3
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 820 -> FAILED tests
------------ ITERATION # 821
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 821 -> FAILED tests
------------ ITERATION # 822
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 822 -> FAILED tests
------------ ITERATION # 823
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 823 -> FAILED tests
------------ ITERATION # 824
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 824 -> successfully passed tests
------------ ITERATION # 825
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 825 -> FAILED tests
------------ ITERATION # 826
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 826 -> successfully passed tests
------------ ITERATION # 827
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 827 -> FAILED tests
------------ ITERATION # 828
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 828 -> FAILED tests
------------ ITERATION # 829
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 2
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 829 -> FAILED tests
------------ ITERATION # 830
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 830 -> FAILED tests
------------ ITERATION # 831
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 831 -> FAILED tests
------------ ITERATION # 832
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 832 -> FAILED tests
------------ ITERATION # 833
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 833 -> FAILED tests
------------ ITERATION # 834
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 834 -> FAILED tests
------------ ITERATION # 835
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 835 -> FAILED tests
------------ ITERATION # 836
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 836 -> FAILED tests
------------ ITERATION # 837
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 837 -> FAILED tests
------------ ITERATION # 838
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 838 -> FAILED tests
------------ ITERATION # 839
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 839 -> FAILED tests
------------ ITERATION # 840
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 840 -> FAILED tests
------------ ITERATION # 841
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 841 -> FAILED tests
------------ ITERATION # 842
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 842 -> FAILED tests
------------ ITERATION # 843
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 843 -> FAILED tests
------------ ITERATION # 844
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 844 -> FAILED tests
------------ ITERATION # 845
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 845 -> FAILED tests
------------ ITERATION # 846
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 846 -> FAILED tests
------------ ITERATION # 847
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 847 -> FAILED tests
------------ ITERATION # 848
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 848 -> FAILED tests
------------ ITERATION # 849
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 849 -> FAILED tests
------------ ITERATION # 850
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 850 -> FAILED tests
------------ ITERATION # 851
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 851 -> FAILED tests
------------ ITERATION # 852
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 852 -> FAILED tests
------------ ITERATION # 853
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 853 -> FAILED tests
------------ ITERATION # 854
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 854 -> FAILED tests
------------ ITERATION # 855
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #1, check if hand count has not changed
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 855 -> FAILED tests
------------ ITERATION # 856
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 856 -> FAILED tests
------------ ITERATION # 857
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 857 -> successfully passed tests
------------ ITERATION # 858
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 858 -> FAILED tests
------------ ITERATION # 859
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 859 -> FAILED tests
------------ ITERATION # 860
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 860 -> FAILED tests
------------ ITERATION # 861
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 861 -> FAILED tests
------------ ITERATION # 862
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 862 -> FAILED tests
------------ ITERATION # 863
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 863 -> FAILED tests
------------ ITERATION # 864
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 864 -> FAILED tests
------------ ITERATION # 865
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 865 -> FAILED tests
------------ ITERATION # 866
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 866 -> FAILED tests
------------ ITERATION # 867
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 867 -> FAILED tests
------------ ITERATION # 868
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 868 -> FAILED tests
------------ ITERATION # 869
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 869 -> FAILED tests
------------ ITERATION # 870
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 870 -> FAILED tests
------------ ITERATION # 871
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 871 -> FAILED tests
------------ ITERATION # 872
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 872 -> FAILED tests
------------ ITERATION # 873
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 873 -> FAILED tests
------------ ITERATION # 874
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 874 -> FAILED tests
------------ ITERATION # 875
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 875 -> FAILED tests
------------ ITERATION # 876
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 876 -> FAILED tests
------------ ITERATION # 877
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 877 -> FAILED tests
------------ ITERATION # 878
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 878 -> FAILED tests
------------ ITERATION # 879
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 879 -> FAILED tests
------------ ITERATION # 880
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 880 -> FAILED tests
------------ ITERATION # 881
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #1, check if hand count has not changed
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 881 -> FAILED tests
------------ ITERATION # 882
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 882 -> FAILED tests
------------ ITERATION # 883
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 0
Smithy test - iteration 883 -> FAILED tests
------------ ITERATION # 884
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 884 -> FAILED tests
------------ ITERATION # 885
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 885 -> FAILED tests
------------ ITERATION # 886
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 886 -> FAILED tests
------------ ITERATION # 887
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 887 -> FAILED tests
------------ ITERATION # 888
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 888 -> FAILED tests
------------ ITERATION # 889
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 889 -> FAILED tests
------------ ITERATION # 890
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 890 -> FAILED tests
------------ ITERATION # 891
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 891 -> successfully passed tests
------------ ITERATION # 892
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 892 -> successfully passed tests
------------ ITERATION # 893
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 893 -> FAILED tests
------------ ITERATION # 894
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 894 -> FAILED tests
------------ ITERATION # 895
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 895 -> FAILED tests
------------ ITERATION # 896
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 896 -> FAILED tests
------------ ITERATION # 897
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 897 -> FAILED tests
------------ ITERATION # 898
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 898 -> FAILED tests
------------ ITERATION # 899
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 899 -> FAILED tests
------------ ITERATION # 900
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 900 -> FAILED tests
------------ ITERATION # 901
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 901 -> FAILED tests
------------ ITERATION # 902
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 902 -> successfully passed tests
------------ ITERATION # 903
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 903 -> FAILED tests
------------ ITERATION # 904
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 904 -> FAILED tests
------------ ITERATION # 905
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 905 -> FAILED tests
------------ ITERATION # 906
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 906 -> FAILED tests
------------ ITERATION # 907
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 907 -> FAILED tests
------------ ITERATION # 908
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 908 -> FAILED tests
------------ ITERATION # 909
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 909 -> successfully passed tests
------------ ITERATION # 910
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 910 -> FAILED tests
------------ ITERATION # 911
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 911 -> FAILED tests
------------ ITERATION # 912
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 912 -> FAILED tests
------------ ITERATION # 913
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 913 -> successfully passed tests
------------ ITERATION # 914
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 914 -> FAILED tests
------------ ITERATION # 915
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 915 -> FAILED tests
------------ ITERATION # 916
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 916 -> FAILED tests
------------ ITERATION # 917
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 917 -> FAILED tests
------------ ITERATION # 918
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 918 -> FAILED tests
------------ ITERATION # 919
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 919 -> FAILED tests
------------ ITERATION # 920
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 920 -> FAILED tests
------------ ITERATION # 921
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 921 -> FAILED tests
------------ ITERATION # 922
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 922 -> FAILED tests
------------ ITERATION # 923
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 923 -> FAILED tests
------------ ITERATION # 924
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 924 -> FAILED tests
------------ ITERATION # 925
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 925 -> FAILED tests
------------ ITERATION # 926
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 926 -> FAILED tests
------------ ITERATION # 927
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 927 -> FAILED tests
------------ ITERATION # 928
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 928 -> successfully passed tests
------------ ITERATION # 929
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 929 -> FAILED tests
------------ ITERATION # 930
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 930 -> FAILED tests
------------ ITERATION # 931
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 931 -> FAILED tests
------------ ITERATION # 932
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 932 -> FAILED tests
------------ ITERATION # 933
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 933 -> FAILED tests
------------ ITERATION # 934
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 934 -> FAILED tests
------------ ITERATION # 935
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 935 -> FAILED tests
------------ ITERATION # 936
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 936 -> FAILED tests
------------ ITERATION # 937
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 937 -> FAILED tests
------------ ITERATION # 938
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 938 -> FAILED tests
------------ ITERATION # 939
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 939 -> FAILED tests
------------ ITERATION # 940
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 940 -> FAILED tests
------------ ITERATION # 941
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 941 -> successfully passed tests
------------ ITERATION # 942
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 942 -> FAILED tests
------------ ITERATION # 943
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 943 -> FAILED tests
------------ ITERATION # 944
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 944 -> FAILED tests
------------ ITERATION # 945
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 945 -> FAILED tests
------------ ITERATION # 946
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 946 -> FAILED tests
------------ ITERATION # 947
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 947 -> FAILED tests
------------ ITERATION # 948
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 948 -> FAILED tests
------------ ITERATION # 949
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 2, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 949 -> FAILED tests
------------ ITERATION # 950
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #0, check if hand count has not changed
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 950 -> FAILED tests
------------ ITERATION # 951
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 951 -> successfully passed tests
------------ ITERATION # 952
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 952 -> FAILED tests
------------ ITERATION # 953
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 953 -> FAILED tests
------------ ITERATION # 954
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 954 -> FAILED tests
------------ ITERATION # 955
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 955 -> FAILED tests
------------ ITERATION # 956
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 956 -> FAILED tests
------------ ITERATION # 957
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 957 -> FAILED tests
------------ ITERATION # 958
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 958 -> FAILED tests
------------ ITERATION # 959
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 959 -> FAILED tests
------------ ITERATION # 960
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 960 -> FAILED tests
------------ ITERATION # 961
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 961 -> FAILED tests
------------ ITERATION # 962
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: SUCCESS: player #0, check if hand count has not changed
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 1
Smithy test - iteration 962 -> FAILED tests
------------ ITERATION # 963
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): SUCCESS: player #1, no Smithy card, check if deck count has not changed
Smithy test - iteration 963 -> FAILED tests
------------ ITERATION # 964
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 964 -> FAILED tests
------------ ITERATION # 965
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 965 -> FAILED tests
------------ ITERATION # 966
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 966 -> FAILED tests
------------ ITERATION # 967
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 967 -> FAILED tests
------------ ITERATION # 968
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 968 -> FAILED tests
------------ ITERATION # 969
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 969 -> FAILED tests
------------ ITERATION # 970
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 4
Smithy test - iteration 970 -> FAILED tests
------------ ITERATION # 971
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 971 -> successfully passed tests
------------ ITERATION # 972
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 972 -> FAILED tests
------------ ITERATION # 973
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): SUCCESS: player #0, no Smithy card, check if deck count has not changed
Smithy test - iteration 973 -> FAILED tests
------------ ITERATION # 974
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 2
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 974 -> FAILED tests
------------ ITERATION # 975
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 975 -> FAILED tests
------------ ITERATION # 976
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 4, (Gpre.deckCount[p] + Gpre.discardCount[p]): 8
Smithy test - iteration 976 -> FAILED tests
------------ ITERATION # 977
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 977 -> successfully passed tests
------------ ITERATION # 978
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 978 -> FAILED tests
------------ ITERATION # 979
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 1
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 979 -> FAILED tests
------------ ITERATION # 980
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 980 -> FAILED tests
------------ ITERATION # 981
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 981 -> successfully passed tests
------------ ITERATION # 982
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 982 -> FAILED tests
------------ ITERATION # 983
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 5, (Gpre.deckCount[p] + Gpre.discardCount[p]): 9
Smithy test - iteration 983 -> FAILED tests
------------ ITERATION # 984
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 984 -> FAILED tests
------------ ITERATION # 985
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 1, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 985 -> FAILED tests
------------ ITERATION # 986
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 986 -> successfully passed tests
------------ ITERATION # 987
NOTE Player 0: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #0, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #0, check if hand count has not changed
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 3
Smithy test - iteration 987 -> FAILED tests
------------ ITERATION # 988
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 988 -> FAILED tests
------------ ITERATION # 989
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Test4 (check deck + discard count): SUCCESS: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Smithy test - iteration 989 -> successfully passed tests
------------ ITERATION # 990
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 990 -> FAILED tests
------------ ITERATION # 991
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 991 -> FAILED tests
------------ ITERATION # 992
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 4, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 992 -> FAILED tests
------------ ITERATION # 993
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 993 -> FAILED tests
------------ ITERATION # 994
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 7, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 6, (Gpre.deckCount[p] + Gpre.discardCount[p]): 10
Smithy test - iteration 994 -> FAILED tests
------------ ITERATION # 995
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 2, (Gpre.deckCount[p] + Gpre.discardCount[p]): 6
Smithy test - iteration 995 -> FAILED tests
------------ ITERATION # 996
NOTE Player 1: did NOT find Smithy in player's hand
Test1 (check played card change): FAILED: player #1, check if played card has increased by 0
Debug: G->playedCardCount: 1, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): Test3: FAILED: player #1, check if hand count has not changed
Debug Data: G->handCount[p]: 3, Gpre.handCount[p]: 0
Test4 (check deck + discard count): FAILED: player #1, no Smithy card, check if deck+discard count has not changed
Debug Data: G->deckCount[p] + G->discardCount[p]): 3, (Gpre.deckCount[p] + Gpre.discardCount[p]): 7
Smithy test - iteration 996 -> FAILED tests
------------ ITERATION # 997
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 8, Gpre.handCount[p]: 5
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 997 -> FAILED tests
------------ ITERATION # 998
Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 6, Gpre.handCount[p]: 3
Test4 (check deck + discard count): FAILED: player #1, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 1, (Gpre.deckCount[p] + Gpre.discardCount[p]): 5
Smithy test - iteration 998 -> FAILED tests
------------ ITERATION # 999
Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 1
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 2 (minus Smith + 3 cards)
Debug Data: G->handCount[p]: 5, Gpre.handCount[p]: 4
Test4 (check deck + discard count): FAILED: player #0, check deck+discard count decreased 3 (only 3 cards moved to hand)
Debug Data: G->deckCount[p] + G->discardCount[p]): 0, (Gpre.deckCount[p] + Gpre.discardCount[p]): 2
Smithy test - iteration 999 -> FAILED tests
Function 'CutPurseAction'
Lines executed:0.00% of 14
Branches executed:0.00% of 12
Taken at least once:0.00% of 12
Calls executed:0.00% of 4

Function 'CouncilRoomAction'
Lines executed:0.00% of 10
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 4

Function 'VillageAction'
Lines executed:0.00% of 5
No branches
Calls executed:0.00% of 2

Function 'AdventurerAction'
Lines executed:0.00% of 21
Branches executed:0.00% of 12
Taken at least once:0.00% of 12
Calls executed:0.00% of 4

Function 'SmithyAction'
Lines executed:100.00% of 5
Branches executed:100.00% of 2
Taken at least once:100.00% of 2
Calls executed:100.00% of 2

Function 'TreasureMapAction'
Lines executed:0.00% of 13
Branches executed:0.00% of 10
Taken at least once:0.00% of 10
Calls executed:0.00% of 3

Function 'updateCoins'
Lines executed:81.82% of 11
Branches executed:100.00% of 8
Taken at least once:75.00% of 8
No calls

Function 'gainCard'
Lines executed:0.00% of 13
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 1

Function 'discardCard'
Lines executed:100.00% of 13
Branches executed:100.00% of 6
Taken at least once:83.33% of 6
No calls

Function 'cardEffect'
Lines executed:6.67% of 195
Branches executed:14.65% of 157
Taken at least once:1.91% of 157
Calls executed:3.64% of 55

Function 'getCost'
Lines executed:0.00% of 30
Branches executed:0.00% of 28
Taken at least once:0.00% of 28
No calls

Function 'drawCard'
Lines executed:100.00% of 22
Branches executed:100.00% of 6
Taken at least once:100.00% of 6
Calls executed:100.00% of 1

Function 'getWinners'
Lines executed:0.00% of 24
Branches executed:0.00% of 22
Taken at least once:0.00% of 22
Calls executed:0.00% of 2

Function 'scoreFor'
Lines executed:0.00% of 24
Branches executed:0.00% of 42
Taken at least once:0.00% of 42
Calls executed:0.00% of 3

Function 'isGameOver'
Lines executed:0.00% of 10
Branches executed:0.00% of 8
Taken at least once:0.00% of 8
No calls

Function 'endTurn'
Lines executed:0.00% of 20
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 3

Function 'whoseTurn'
Lines executed:100.00% of 2
No branches
No calls

Function 'fullDeckCount'
Lines executed:0.00% of 9
Branches executed:0.00% of 12
Taken at least once:0.00% of 12
No calls

Function 'supplyCount'
Lines executed:0.00% of 2
No branches
No calls

Function 'handCard'
Lines executed:0.00% of 3
No branches
Calls executed:0.00% of 1

Function 'numHandCards'
Lines executed:0.00% of 2
No branches
Calls executed:0.00% of 1

Function 'buyCard'
Lines executed:0.00% of 13
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 4

Function 'playCard'
Lines executed:0.00% of 14
Branches executed:0.00% of 10
Taken at least once:0.00% of 10
Calls executed:0.00% of 3

Function 'shuffle'
Lines executed:100.00% of 16
Branches executed:100.00% of 8
Taken at least once:100.00% of 8
Calls executed:100.00% of 2

Function 'initializeGame'
Lines executed:83.87% of 62
Branches executed:95.65% of 46
Taken at least once:78.26% of 46
Calls executed:100.00% of 5

Function 'kingdomCards'
Lines executed:0.00% of 13
No branches
No calls

Function 'newGame'
Lines executed:0.00% of 3
No branches
No calls

Function 'compare'
Lines executed:83.33% of 6
Branches executed:100.00% of 4
Taken at least once:75.00% of 4
No calls

File 'dominion.c'
Lines executed:23.83% of 575
Branches executed:24.22% of 417
Taken at least once:16.55% of 417
Calls executed:12.00% of 100
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "dominion_refactorwk2.h"
        -:    4:#include "rngs.h"
        -:    5:#include <stdio.h>
        -:    6:#include <math.h>
        -:    7:#include <stdlib.h>
        -:    8:  
function compare called 31415 returned 100% blocks executed 83%
    31415:    9:int compare(const void* a, const void* b) {
    31415:   10:  if (*(int*)a > *(int*)b)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   11:    return 1;
    31415:   12:  if (*(int*)a < *(int*)b)
branch  0 taken 25% (fallthrough)
branch  1 taken 75%
     8002:   13:    return -1;
    23413:   14:  return 0;
        -:   15:}
        -:   16:
function newGame called 0 returned 0% blocks executed 0%
    #####:   17:struct gameState* newGame() {
    #####:   18:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   19:  return g;
        -:   20:}
        -:   21:
function kingdomCards called 0 returned 0% blocks executed 0%
    #####:   22:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   23:		  int k8, int k9, int k10) {
    #####:   24:  int* k = malloc(10 * sizeof(int));
    #####:   25:  k[0] = k1;
    #####:   26:  k[1] = k2;
    #####:   27:  k[2] = k3;
    #####:   28:  k[3] = k4;
    #####:   29:  k[4] = k5;
    #####:   30:  k[5] = k6;
    #####:   31:  k[6] = k7;
    #####:   32:  k[7] = k8;
    #####:   33:  k[8] = k9;
    #####:   34:  k[9] = k10;
    #####:   35:  return k;
        -:   36:}
        -:   37:
function initializeGame called 1000 returned 100% blocks executed 88%
     1000:   38:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   39:		   struct gameState *state) {
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;			
        -:   43:  //set up random number generator
     1000:   44:  SelectStream(1);
call    0 returned 100%
     1000:   45:  PutSeed((long)randomSeed);
call    0 returned 100%
        -:   46:  
        -:   47:  //check number of players
     1000:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
     1000:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    11000:   57:  for (i = 0; i < 10; i++)
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
        -:   58:    {
   110000:   59:      for (j = 0; j < 10; j++)
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
        -:   60:        {
   100000:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
branch  0 taken 90% (fallthrough)
branch  1 taken 10%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
     1000:   73:  if (numPlayers == 2)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:   74:    {
     1000:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
branch  0 never executed
branch  1 never executed
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
     1000:   87:  if (numPlayers == 2)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:   88:    {
     1000:   89:      state->supplyCount[estate] = 8;
     1000:   90:      state->supplyCount[duchy] = 8;
     1000:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
     1000:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
     1000:  102:  state->supplyCount[silver] = 40;
     1000:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    21000:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
branch  0 taken 95%
branch  1 taken 5% (fallthrough)
        -:  107:  {
   165000:  108:	  for (j = 0; j < 10; j++)           		//loop chosen cards
branch  0 taken 94%
branch  1 taken 6% (fallthrough)
        -:  109:	  {
   155000:  110:		  if (kingdomCards[j] == i) {
branch  0 taken 6% (fallthrough)
branch  1 taken 94%
        -:  111:			  //check if card is a 'Victory' Kingdom card
    10000:  112:			  if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens) {
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 10% (fallthrough)
branch  3 taken 90%
     2000:  113:				  if (numPlayers == 2){
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
     1000:  114:					  state->supplyCount[i] = 8;
        -:  115:				  } else {
    #####:  116:					  state->supplyCount[i] = 12;
        -:  117:				  }
        -:  118:			  } else {
     9000:  119:				  state->supplyCount[i] = 10;
        -:  120:			  }
    10000:  121:			  break;
        -:  122:		  } else {    //card is not in the set choosen for the game
   145000:  123:			  state->supplyCount[i] = -1;
        -:  124:		  }
        -:  125:	  }
        -:  126:  }
        -:  127:  ////////////////////////
        -:  128:  //supply intilization complete
        -:  129:
        -:  130:  //set player decks
     3000:  131:  for (i = 0; i < numPlayers; i++) {
branch  0 taken 67%
branch  1 taken 33% (fallthrough)
     2000:  132:      state->deckCount[i] = 0;
     8000:  133:      for (j = 0; j < 3; j++) {
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
     6000:  134:    	  state->deck[i][j] = estate;
     6000:  135:    	  state->deckCount[i]++;
        -:  136:      }
    16000:  137:      for (j = 3; j < 10; j++) {
branch  0 taken 88%
branch  1 taken 13% (fallthrough)
    14000:  138:    	  state->deck[i][j] = copper;
    14000:  139:    	  state->deckCount[i]++;
        -:  140:      }
        -:  141:   }
        -:  142:
        -:  143:  //shuffle player decks
     3000:  144:  for (i = 0; i < numPlayers; i++) {
branch  0 taken 67%
branch  1 taken 33% (fallthrough)
     2000:  145:      if ( shuffle(i, state) < 0 ) {
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:  146:    	  return -1;
        -:  147:      }
        -:  148:   }
        -:  149:
        -:  150:  //draw player hands
     3000:  151:  for (i = 0; i < numPlayers; i++) {
branch  0 taken 67%
branch  1 taken 33% (fallthrough)
        -:  152:      //initialize hand size to zero
     2000:  153:      state->handCount[i] = 0;
     2000:  154:      state->discardCount[i] = 0;
        -:  155:      //draw 5 cards
        -:  156:      // for (j = 0; j < 5; j++)
        -:  157:      //	{
        -:  158:      //	  drawCard(i, state);
        -:  159:      //	}
        -:  160:   }
        -:  161:  
        -:  162:  //set embargo tokens to 0 for all supply piles
    28000:  163:  for (i = 0; i <= treasure_map; i++) {
branch  0 taken 96%
branch  1 taken 4% (fallthrough)
    27000:  164:      state->embargoTokens[i] = 0;
        -:  165:  }
        -:  166:
        -:  167:  //initialize first player's turn
     1000:  168:  state->outpostPlayed = 0;
     1000:  169:  state->phase = 0;
     1000:  170:  state->numActions = 1;
     1000:  171:  state->numBuys = 1;
     1000:  172:  state->playedCardCount = 0;
     1000:  173:  state->whoseTurn = 0;
     1000:  174:  state->handCount[state->whoseTurn] = 0;
        -:  175:  //int it; move to top
        -:  176:
        -:  177:  //Moved draw cards to here, only drawing at the start of a turn
     6000:  178:  for (it = 0; it < 5; it++){
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
     5000:  179:    drawCard(state->whoseTurn, state);
call    0 returned 100%
        -:  180:  }
        -:  181:
     1000:  182:  updateCoins(state->whoseTurn, state, 0);
call    0 returned 100%
     1000:  183:  return 0;
        -:  184:}
        -:  185:
        -:  186:
function shuffle called 3129 returned 100% blocks executed 100%
     3129:  187:int shuffle(int player, struct gameState *state) {
        -:  188:  int newDeck[MAX_DECK];
     3129:  189:  int newDeckPos = 0;
        -:  190:  int card;
        -:  191:  int i;
        -:  192:
     3129:  193:  if (state->deckCount[player] < 1)
branch  0 taken 18% (fallthrough)
branch  1 taken 82%
      562:  194:    return -1;
     2567:  195:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare); 
call    0 returned 100%
        -:  196:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  197:
    26876:  198:  while (state->deckCount[player] > 0) {
branch  0 taken 89%
branch  1 taken 11% (fallthrough)
    21742:  199:    card = floor(Random() * state->deckCount[player]);
call    0 returned 100%
    21742:  200:    newDeck[newDeckPos] = state->deck[player][card];
    21742:  201:    newDeckPos++;
    71703:  202:    for (i = card; i < state->deckCount[player]-1; i++) {
branch  0 taken 70%
branch  1 taken 30% (fallthrough)
    49961:  203:      state->deck[player][i] = state->deck[player][i+1];
        -:  204:    }
    21742:  205:    state->deckCount[player]--;
        -:  206:  }
    24309:  207:  for (i = 0; i < newDeckPos; i++) {
branch  0 taken 89%
branch  1 taken 11% (fallthrough)
    21742:  208:    state->deck[player][i] = newDeck[i];
    21742:  209:    state->deckCount[player]++;
        -:  210:  }
     2567:  211:  return 0;
        -:  212:}
        -:  213:
        -:  214:
function playCard called 0 returned 0% blocks executed 0%
    #####:  215:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state) 
        -:  216:{	
        -:  217:  int card;
    #####:  218:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  219:
        -:  220:  //check if it is the right phase
    #####:  221:  if (state->phase != 0) {
branch  0 never executed
branch  1 never executed
    #####:  222:      return -1;
        -:  223:  }
        -:  224:	
        -:  225:  //check if player has enough actions
    #####:  226:  if ( state->numActions < 1 ) {
branch  0 never executed
branch  1 never executed
    #####:  227:      return -1;
        -:  228:  }
        -:  229:	
        -:  230:  //get card played
    #####:  231:  card = handCard(handPos, state);
call    0 never executed
        -:  232:	
        -:  233:  //check if selected card is an action
    #####:  234:  if ( card < adventurer || card > treasure_map ) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  235:      return -1;
        -:  236:  }
        -:  237:	
        -:  238:  //play card
    #####:  239:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 ) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  240:      return -1;
        -:  241:  }
        -:  242:	
        -:  243:  //reduce number of actions
    #####:  244:  state->numActions--;
        -:  245:
        -:  246:  //update coins (Treasure cards may be added with card draws)
    #####:  247:  updateCoins(state->whoseTurn, state, coin_bonus);
call    0 never executed
        -:  248:	
    #####:  249:  return 0;
        -:  250:}
        -:  251:
        -:  252:
function buyCard called 0 returned 0% blocks executed 0%
    #####:  253:int buyCard(int supplyPos, struct gameState *state) {
        -:  254:  int who;
        -:  255:  if (DEBUG){ printf("Entering buyCard...\n"); }
        -:  256:
        -:  257:  // I don't know what to do about the phase thing.
        -:  258:
    #####:  259:  who = state->whoseTurn;
        -:  260:
    #####:  261:  if (state->numBuys < 1){
branch  0 never executed
branch  1 never executed
        -:  262:    if (DEBUG)
        -:  263:      printf("You do not have any buys left\n");
    #####:  264:    return -1;
    #####:  265:  } else if (supplyCount(supplyPos, state) <1){
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  266:    if (DEBUG)
        -:  267:      printf("There are not any of that type of card left\n");
    #####:  268:    return -1;
    #####:  269:  } else if (state->coins < getCost(supplyPos)){
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  270:    if (DEBUG) 
        -:  271:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  272:    return -1;
        -:  273:  } else {
    #####:  274:    state->phase=1;
        -:  275:    //state->supplyCount[supplyPos]--;
    #####:  276:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
call    0 never executed
        -:  277:  
    #####:  278:    state->coins = (state->coins) - (getCost(supplyPos));
call    0 never executed
    #####:  279:    state->numBuys--;
        -:  280:    if (DEBUG)
        -:  281:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  282:  }
        -:  283:
        -:  284:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  285:  //state->discardCount[who]++;
        -:  286:    
    #####:  287:  return 0;
        -:  288:}
        -:  289:
function numHandCards called 0 returned 0% blocks executed 0%
    #####:  290:int numHandCards(struct gameState *state) {
    #####:  291:  return state->handCount[ whoseTurn(state) ];
call    0 never executed
        -:  292:}
        -:  293:
function handCard called 0 returned 0% blocks executed 0%
    #####:  294:int handCard(int handPos, struct gameState *state) {
    #####:  295:  int currentPlayer = whoseTurn(state);
call    0 never executed
    #####:  296:  return state->hand[currentPlayer][handPos];
        -:  297:}
        -:  298:
function supplyCount called 0 returned 0% blocks executed 0%
    #####:  299:int supplyCount(int card, struct gameState *state) {
    #####:  300:  return state->supplyCount[card];
        -:  301:}
        -:  302:
function fullDeckCount called 0 returned 0% blocks executed 0%
    #####:  303:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  304:  int i;
    #####:  305:  int count = 0;
        -:  306:
    #####:  307:  for (i = 0; i < state->deckCount[player]; i++) {
branch  0 never executed
branch  1 never executed
    #####:  308:      if (state->deck[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
        -:  309:  }
        -:  310:
    #####:  311:  for (i = 0; i < state->handCount[player]; i++) {
branch  0 never executed
branch  1 never executed
    #####:  312:      if (state->hand[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
        -:  313:  }
        -:  314:
    #####:  315:  for (i = 0; i < state->discardCount[player]; i++) {
branch  0 never executed
branch  1 never executed
    #####:  316:      if (state->discard[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
        -:  317:  }
    #####:  318:  return count;
        -:  319:}
        -:  320:
function whoseTurn called 1000 returned 100% blocks executed 100%
     1000:  321:int whoseTurn(struct gameState *state) {
     1000:  322:  return state->whoseTurn;
        -:  323:}
        -:  324:
function endTurn called 0 returned 0% blocks executed 0%
    #####:  325:int endTurn(struct gameState *state) {
        -:  326:  int k;
        -:  327:  int i;
    #####:  328:  int currentPlayer = whoseTurn(state);
call    0 never executed
        -:  329:  
        -:  330:  //Discard hand
    #####:  331:  for (i = 0; i < state->handCount[currentPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####:  332:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  333:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  334:  }
    #####:  335:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  336:    
        -:  337:  //Code for determining the player
    #####:  338:  if (currentPlayer < (state->numPlayers - 1)){ 
branch  0 never executed
branch  1 never executed
    #####:  339:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  340:  }
        -:  341:  else{
    #####:  342:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  343:  }
        -:  344:
    #####:  345:  state->outpostPlayed = 0;
    #####:  346:  state->phase = 0;
    #####:  347:  state->numActions = 1;
    #####:  348:  state->coins = 0;
    #####:  349:  state->numBuys = 1;
    #####:  350:  state->playedCardCount = 0;
    #####:  351:  state->handCount[state->whoseTurn] = 0;
        -:  352:
        -:  353:  //int k; move to top
        -:  354:  //Next player draws hand
    #####:  355:  for (k = 0; k < 5; k++){
branch  0 never executed
branch  1 never executed
    #####:  356:    drawCard(state->whoseTurn, state);//Draw a card
call    0 never executed
        -:  357:  }
        -:  358:
        -:  359:  //Update money
    #####:  360:  updateCoins(state->whoseTurn, state , 0);
call    0 never executed
        -:  361:
    #####:  362:  return 0;
        -:  363:}
        -:  364:
function isGameOver called 0 returned 0% blocks executed 0%
    #####:  365:int isGameOver(struct gameState *state) {
        -:  366:  int i;
        -:  367:  int j;
        -:  368:	
        -:  369:  //if stack of Province cards is empty, the game ends
    #####:  370:  if (state->supplyCount[province] == 0)
branch  0 never executed
branch  1 never executed
        -:  371:    {
    #####:  372:      return 1;
        -:  373:    }
        -:  374:
        -:  375:  //if three supply pile are at 0, the game ends
    #####:  376:  j = 0;
    #####:  377:  for (i = 0; i < 25; i++)
branch  0 never executed
branch  1 never executed
        -:  378:    {
    #####:  379:      if (state->supplyCount[i] == 0)
branch  0 never executed
branch  1 never executed
        -:  380:	{
    #####:  381:	  j++;
        -:  382:	}
        -:  383:    }
    #####:  384:  if ( j >= 3)
branch  0 never executed
branch  1 never executed
        -:  385:    {
    #####:  386:      return 1;
        -:  387:    }
        -:  388:
    #####:  389:  return 0;
        -:  390:}
        -:  391:
function scoreFor called 0 returned 0% blocks executed 0%
    #####:  392:int scoreFor (int player, struct gameState *state) {
        -:  393:
        -:  394:  int i;
    #####:  395:  int score = 0;
        -:  396:  //score from hand
    #####:  397:  for (i = 0; i < state->handCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  398:    {
    #####:  399:      if (state->hand[player][i] == curse) { score = score - 1; };
branch  0 never executed
branch  1 never executed
    #####:  400:      if (state->hand[player][i] == estate) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  401:      if (state->hand[player][i] == duchy) { score = score + 3; };
branch  0 never executed
branch  1 never executed
    #####:  402:      if (state->hand[player][i] == province) { score = score + 6; };
branch  0 never executed
branch  1 never executed
    #####:  403:      if (state->hand[player][i] == great_hall) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  404:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:  405:      //DEBUG
        -:  406:      //printf ("score = %d\n", score);
        -:  407:    }
        -:  408:
        -:  409:  //score from discard
    #####:  410:  for (i = 0; i < state->discardCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  411:    {
    #####:  412:      if (state->discard[player][i] == curse) { score = score - 1; };
branch  0 never executed
branch  1 never executed
    #####:  413:      if (state->discard[player][i] == estate) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  414:      if (state->discard[player][i] == duchy) { score = score + 3; };
branch  0 never executed
branch  1 never executed
    #####:  415:      if (state->discard[player][i] == province) { score = score + 6; };
branch  0 never executed
branch  1 never executed
    #####:  416:      if (state->discard[player][i] == great_hall) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  417:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:  418:      //printf ("score = %d\n", score);
        -:  419:    }
        -:  420:
        -:  421:  //score from deck
    #####:  422:  for (i = 0; i < state->discardCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  423:    {
    #####:  424:      if (state->deck[player][i] == curse) { score = score - 1; };
branch  0 never executed
branch  1 never executed
    #####:  425:      if (state->deck[player][i] == estate) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  426:      if (state->deck[player][i] == duchy) { score = score + 3; };
branch  0 never executed
branch  1 never executed
    #####:  427:      if (state->deck[player][i] == province) { score = score + 6; };
branch  0 never executed
branch  1 never executed
    #####:  428:      if (state->deck[player][i] == great_hall) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  429:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:  430:      //printf ("score = %d\n", score);
        -:  431:    }
        -:  432:
    #####:  433:  return score;
        -:  434:}
        -:  435:
function getWinners called 0 returned 0% blocks executed 0%
    #####:  436:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  437:  int i;	
        -:  438:  int j;
        -:  439:  int highScore;
        -:  440:  int currentPlayer;
        -:  441:
        -:  442:  //get score for each player
    #####:  443:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  444:    {
        -:  445:      //set unused player scores to -9999
    #####:  446:      if (i >= state->numPlayers)
branch  0 never executed
branch  1 never executed
        -:  447:	{
    #####:  448:	  players[i] = -9999;
        -:  449:	}
        -:  450:      else
        -:  451:	{
    #####:  452:	  players[i] = scoreFor (i, state);
call    0 never executed
        -:  453:	}
        -:  454:    }
        -:  455:
        -:  456:  //find highest score
    #####:  457:  j = 0;
    #####:  458:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  459:    {
    #####:  460:      if (players[i] > players[j])
branch  0 never executed
branch  1 never executed
        -:  461:	{
    #####:  462:	  j = i;
        -:  463:	}
        -:  464:    }
    #####:  465:  highScore = players[j];
        -:  466:
        -:  467:  //add 1 to players who had less turns
    #####:  468:  currentPlayer = whoseTurn(state);
call    0 never executed
    #####:  469:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  470:    {
    #####:  471:      if ( players[i] == highScore && i > currentPlayer )
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  472:	{
    #####:  473:	  players[i]++;
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find new highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  480:    {
    #####:  481:      if ( players[i] > players[j] )
branch  0 never executed
branch  1 never executed
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //set winners in array to 1 and rest to 0
    #####:  489:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  490:    {
    #####:  491:      if ( players[i] == highScore )
branch  0 never executed
branch  1 never executed
        -:  492:	{
    #####:  493:	  players[i] = 1;
        -:  494:	}
        -:  495:      else
        -:  496:	{
    #####:  497:	  players[i] = 0;
        -:  498:	}
        -:  499:    }
        -:  500:
    #####:  501:  return 0;
        -:  502:}
        -:  503:
function drawCard called 9000 returned 100% blocks executed 100%
     9000:  504:int drawCard(int player, struct gameState *state) {
        -:  505:	int count;
        -:  506:	int deckCounter;
     9000:  507:	if (state->deckCount[player] <= 0){//Deck is empty
branch  0 taken 13% (fallthrough)
branch  1 taken 87%
        -:  508:    
        -:  509:		//Step 1 Shuffle the discard pile back into a deck
        -:  510:		int i;
        -:  511:		//Move discard to deck
     2871:  512:		for (i = 0; i < state->discardCount[player];i++){
branch  0 taken 61%
branch  1 taken 39% (fallthrough)
     1742:  513:			state->deck[player][i] = state->discard[player][i];
     1742:  514:			state->discard[player][i] = -1;
        -:  515:		}
        -:  516:
     1129:  517:		state->deckCount[player] = state->discardCount[player];
     1129:  518:		state->discardCount[player] = 0;//Reset discard
        -:  519:
        -:  520:		//Shufffle the deck
     1129:  521:		shuffle(player, state);//Shuffle the deck up and make it so that we can draw
call    0 returned 100%
        -:  522:   
        -:  523:		if (DEBUG){//Debug statements
        -:  524:			printf("Deck count now: %d\n", state->deckCount[player]);
        -:  525:		}
        -:  526:    
     1129:  527:		state->discardCount[player] = 0;
        -:  528:
        -:  529:		//Step 2 Draw Card
     1129:  530:		count = state->handCount[player];//Get current player's hand count
        -:  531:
        -:  532:		if (DEBUG){//Debug statements
        -:  533:		  printf("Current hand count: %d\n", count);
        -:  534:		}
        -:  535:
     1129:  536:		deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  537:
     1129:  538:		if (deckCounter == 0)
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
      562:  539:		  return -1;
        -:  540:
      567:  541:		state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
      567:  542:		state->deckCount[player]--;
      567:  543:		state->handCount[player]++;//Increment hand count
        -:  544:
        -:  545:	} else{
     7871:  546:		int count = state->handCount[player];//Get current hand count for player
        -:  547:		int deckCounter;
        -:  548:		if (DEBUG){//Debug statements
        -:  549:		  printf("Current hand count: %d\n", count);
        -:  550:		}
        -:  551:
     7871:  552:		deckCounter = state->deckCount[player];//Create holder for the deck count
     7871:  553:		state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
     7871:  554:		state->deckCount[player]--;
     7871:  555:		state->handCount[player]++;//Increment hand count
        -:  556:	  }
     8438:  557:  return 0;
        -:  558:}
        -:  559:
function getCost called 0 returned 0% blocks executed 0%
    #####:  560:int getCost(int cardNumber)
        -:  561:{
    #####:  562:  switch( cardNumber ) 
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
branch 18 never executed
branch 19 never executed
branch 20 never executed
branch 21 never executed
branch 22 never executed
branch 23 never executed
branch 24 never executed
branch 25 never executed
branch 26 never executed
branch 27 never executed
        -:  563:    {
        -:  564:    case curse:
    #####:  565:      return 0;
        -:  566:    case estate:
    #####:  567:      return 2;
        -:  568:    case duchy:
    #####:  569:      return 5;
        -:  570:    case province:
    #####:  571:      return 8;
        -:  572:    case copper:
    #####:  573:      return 0;
        -:  574:    case silver:
    #####:  575:      return 3;
        -:  576:    case gold:
    #####:  577:      return 6;
        -:  578:    case adventurer:
    #####:  579:      return 6;
        -:  580:    case council_room:
    #####:  581:      return 5;
        -:  582:    case feast:
    #####:  583:      return 4;
        -:  584:    case gardens:
    #####:  585:      return 4;
        -:  586:    case mine:
    #####:  587:      return 5;
        -:  588:    case remodel:
    #####:  589:      return 4;
        -:  590:    case smithy:
    #####:  591:      return 4;
        -:  592:    case village:
    #####:  593:      return 3;
        -:  594:    case baron:
    #####:  595:      return 4;
        -:  596:    case great_hall:
    #####:  597:      return 3;
        -:  598:    case minion:
    #####:  599:      return 5;
        -:  600:    case steward:
    #####:  601:      return 3;
        -:  602:    case tribute:
    #####:  603:      return 5;
        -:  604:    case ambassador:
    #####:  605:      return 3;
        -:  606:    case cutpurse:
    #####:  607:      return 4;
        -:  608:    case embargo: 
    #####:  609:      return 2;
        -:  610:    case outpost:
    #####:  611:      return 5;
        -:  612:    case salvager:
    #####:  613:      return 4;
        -:  614:    case sea_hag:
    #####:  615:      return 4;
        -:  616:    case treasure_map:
    #####:  617:      return 4;
        -:  618:    }
        -:  619:	
    #####:  620:  return -1;
        -:  621:}
        -:  622:
function cardEffect called 1000 returned 100% blocks executed 4%
     1000:  623:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  624:{
        -:  625:  int i;
        -:  626:  int j;
        -:  627:  int k;
        -:  628:  int x;
        -:  629:  int index;
     1000:  630:  k=0; x=0; index=0; //added this to silence unused var warning
     1000:  631:  int currentPlayer = whoseTurn(state);
call    0 returned 100%
     1000:  632:  int nextPlayer = currentPlayer + 1;
        -:  633:
     1000:  634:  int tributeRevealedCards[2] = {-1, -1};
        -:  635:  int temphand[MAX_HAND];// moved above the if statement
        -:  636:  // int drawntreasure=0; removed due to code refactor wk2
        -:  637:  int cardDrawn;
     1000:  638:  cardDrawn = 0; //added this to silence unused var warning
     1000:  639:  int z = 0; // this is the counter for the temp hand
     1000:  640:  z = 0; // added this to silence warnings
     1000:  641:  if (nextPlayer > (state->numPlayers - 1)){
branch  0 taken 53% (fallthrough)
branch  1 taken 47%
      528:  642:    nextPlayer = 0;
        -:  643:  }
        -:  644:  
        -:  645:	
        -:  646:  //uses switch to select card and perform actions
     1000:  647:  switch( card ) {
branch  0 taken 0%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 0%
branch  9 taken 0%
branch 10 taken 0%
branch 11 taken 0%
branch 12 taken 0%
branch 13 taken 0%
branch 14 taken 0%
branch 15 taken 0%
branch 16 taken 0%
branch 17 taken 0%
branch 18 taken 0%
branch 19 taken 0%
branch 20 taken 0%
        -:  648:
        -:  649:  	  // ***************************
        -:  650:  	  // ******** ADVENTURER *******
        -:  651:  	  // ***************************
        -:  652:  	  case adventurer:
        -:  653:      
        -:  654:  		  // add refactored adventurer action here
    #####:  655:  		  AdventurerAction (currentPlayer, state, handPos);
call    0 never executed
    #####:  656:  		  return 0;
        -:  657:      
        -:  658:/*** Comment out original code before refactor      
        -:  659:      while(drawntreasure<2){
        -:  660:	if (state->deckCount[currentPlayer] <1){//if the deck is empty we need to shuffle discard and add to deck
        -:  661:	  shuffle(currentPlayer, state);
        -:  662:	}
        -:  663:	drawCard(currentPlayer, state);
        -:  664:	cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
        -:  665:	if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
        -:  666:	  drawntreasure++;
        -:  667:	else{
        -:  668:	  temphand[z]=cardDrawn;
        -:  669:	  state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  670:	  z++;
        -:  671:	}
        -:  672:      }
        -:  673:      while(z-1>=0){
        -:  674:	state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
        -:  675:	z=z-1;
        -:  676:      }
        -:  677:***/
        -:  678:
        -:  679:
        -:  680:    // *****************************
        -:  681:		// ******** Council Room *******
        -:  682:		// *****************************
        -:  683:			
        -:  684:    case council_room:
    #####:  685:		  CouncilRoomAction (currentPlayer, state, handPos);
call    0 never executed
    #####:  686:	    return 0;
        -:  687:	
        -:  688:/*** commented out to refactor in separate function
        -:  689:      //+4 Cards
        -:  690:      for (i = 0; i < 4; i++)
        -:  691:	{
        -:  692:	  drawCard(currentPlayer, state);
        -:  693:	}
        -:  694:			
        -:  695:      //+1 Buy
        -:  696:      state->numBuys++;
        -:  697:			
        -:  698:      //Each other player draws a card
        -:  699:      for (i = 0; i < state->numPlayers; i++)
        -:  700:	{
        -:  701:	  if ( i != currentPlayer )
        -:  702:	    {
        -:  703:	      drawCard(i, state);
        -:  704:	    }
        -:  705:	}
        -:  706:			
        -:  707:      //put played card in played card pile
        -:  708:      discardCard(handPos, currentPlayer, state, 0);
        -:  709:***/			
        -:  710:  			
        -:  711:    // ***************************		
        -:  712:	// ******** FEAST  **********
        -:  713:	// ***************************
        -:  714:    case feast:
        -:  715:    	//gain card with cost up to 5
        -:  716:    	//Backup hand
    #####:  717:    	for (i = 0; i <= state->handCount[currentPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####:  718:    		temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  719:    		state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  720:    	}
        -:  721:    	//Backup hand
        -:  722:
        -:  723:    	//Update Coins for Buy
    #####:  724:    	updateCoins(currentPlayer, state, 5);
call    0 never executed
    #####:  725:    	x = 1;//Condition to loop on
    #####:  726:    	while( x == 1) {//Buy one card
branch  0 never executed
branch  1 never executed
    #####:  727:			if (supplyCount(choice1, state) <= 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  728:			  if (DEBUG)
        -:  729:				printf("None of that card left, sorry!\n");
        -:  730:
        -:  731:			  if (DEBUG){
        -:  732:				printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  733:			  }
        -:  734:			}
    #####:  735:			else if (state->coins < getCost(choice1)){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  736:			  printf("That card is too expensive!\n");
call    0 never executed
        -:  737:
        -:  738:			  if (DEBUG){
        -:  739:				printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  740:			  }
        -:  741:			}
        -:  742:			else{
        -:  743:
        -:  744:			  if (DEBUG){
        -:  745:				printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  746:			  }
        -:  747:
    #####:  748:			  gainCard(choice1, state, 0, currentPlayer);//Gain the card
call    0 never executed
    #####:  749:			  x = 0;//No more buying cards
        -:  750:
        -:  751:			  if (DEBUG){
        -:  752:				printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  753:			  }
        -:  754:
        -:  755:			}
        -:  756:    	}
        -:  757:
        -:  758:    	//Reset Hand
    #####:  759:		for (i = 0; i <= state->handCount[currentPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####:  760:			state->hand[currentPlayer][i] = temphand[i];
    #####:  761:			temphand[i] = -1;
        -:  762:		}
        -:  763:		//Reset Hand
    #####:  764:		return 0;
        -:  765:			
        -:  766:    case gardens:
    #####:  767:      return -1;
        -:  768:			
        -:  769:    // ***************************		
        -:  770:		// ******** mine **********
        -:  771:		// ***************************		
        -:  772:    case mine:
    #####:  773:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  774:
    #####:  775:      if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  776:	{
    #####:  777:	  return -1;
        -:  778:	}
        -:  779:		
    #####:  780:      if (choice2 > treasure_map || choice2 < curse)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  781:	{
    #####:  782:	  return -1;
        -:  783:	}
        -:  784:
    #####:  785:      if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) )
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  786:	{
    #####:  787:	  return -1;
        -:  788:	}
        -:  789:
    #####:  790:      gainCard(choice2, state, 2, currentPlayer);
call    0 never executed
        -:  791:
        -:  792:      //discard card from hand
    #####:  793:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  794:
        -:  795:      //discard trashed card
    #####:  796:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -:  797:	{
    #####:  798:	  if (state->hand[currentPlayer][i] == j)
branch  0 never executed
branch  1 never executed
        -:  799:	    {
    #####:  800:	      discardCard(i, currentPlayer, state, 0);			
call    0 never executed
    #####:  801:	      break;
        -:  802:	    }
        -:  803:	}
        -:  804:			
    #####:  805:      return 0;
        -:  806:			
        -:  807:    // ***************************		
        -:  808:		// ******** remodel **********
        -:  809:		// ***************************		
        -:  810:    case remodel:
    #####:  811:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  812:
    #####:  813:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  814:	{
    #####:  815:	  return -1;
        -:  816:	}
        -:  817:
    #####:  818:      gainCard(choice2, state, 0, currentPlayer);
call    0 never executed
        -:  819:
        -:  820:      //discard card from hand
    #####:  821:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  822:
        -:  823:      //discard trashed card
    #####:  824:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -:  825:	{
    #####:  826:	  if (state->hand[currentPlayer][i] == j)
branch  0 never executed
branch  1 never executed
        -:  827:	    {
    #####:  828:	      discardCard(i, currentPlayer, state, 0);			
call    0 never executed
    #####:  829:	      break;
        -:  830:	    }
        -:  831:	}
        -:  832:
        -:  833:
    #####:  834:      return 0;
        -:  835:		
        -:  836:    // ***************************		
        -:  837:		// ******** SMITHY **********
        -:  838:		// ***************************		
        -:  839:    case smithy:
        -:  840:    
        -:  841:      // debug: print number of cards before call    
        -:  842:      //printf ("\nDebug: number cards in hand before: ");
        -:  843:      //printf ("%i\n", state->handCount[currentPlayer]);
        -:  844:      
        -:  845:      // add refactored smithy action here
     1000:  846:      SmithyAction (currentPlayer, state, handPos);
call    0 returned 100%
        -:  847:
        -:  848:      // debug: print number of cards after call
        -:  849:      //printf ("\nDebug: number cards in hand after: ");
        -:  850:      //printf ("%i\n", state->handCount[currentPlayer]);
     1000:  851:      return 0;
        -:  852:
        -:  853: /****     
        -:  854:      //+3 Cards
        -:  855:      for (i = 0; i < 3; i++)
        -:  856:	{
        -:  857:	  drawCard(currentPlayer, state);
        -:  858:	}
        -:  859:			
        -:  860:      //discard card from hand
        -:  861:      discardCard(handPos, currentPlayer, state, 0);
        -:  862:  ***/
        -:  863: 		
        -:  864:    // ***************************		
        -:  865:		// ******** VILLAGE **********
        -:  866:		// ***************************		
        -:  867:    case village:
        -:  868:    
    #####:  869:      VillageAction (currentPlayer, state, handPos);
call    0 never executed
    #####:  870:      return 0;
        -:  871:      
        -:  872:   /****   
        -:  873:      //+1 Card
        -:  874:      drawCard(currentPlayer, state);
        -:  875:			
        -:  876:      //+2 Actions
        -:  877:      state->numActions = state->numActions + 2;
        -:  878:			
        -:  879:      //discard played card from hand
        -:  880:      discardCard(handPos, currentPlayer, state, 0);
        -:  881:    ***/
        -:  882:		
        -:  883:    // ***************************		
        -:  884:		// ********  **********
        -:  885:		// ***************************		
        -:  886:    case baron:
    #####:  887:      state->numBuys++;//Increase buys by 1!
    #####:  888:      if (choice1 > 0){//Boolean true or going to discard an estate
branch  0 never executed
branch  1 never executed
    #####:  889:	int p = 0;//Iterator for hand!
    #####:  890:	int card_not_discarded = 1;//Flag for discard set!
    #####:  891:	while(card_not_discarded){
branch  0 never executed
branch  1 never executed
    #####:  892:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
branch  0 never executed
branch  1 never executed
    #####:  893:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  894:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  895:	    state->discardCount[currentPlayer]++;
    #####:  896:	    for (;p < state->handCount[currentPlayer]; p++){
branch  0 never executed
branch  1 never executed
    #####:  897:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  898:	    }
    #####:  899:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  900:	    state->handCount[currentPlayer]--;
    #####:  901:	    card_not_discarded = 0;//Exit the loop
        -:  902:	  }
    #####:  903:	  else if (p > state->handCount[currentPlayer]){
branch  0 never executed
branch  1 never executed
        -:  904:	    if(DEBUG) {
        -:  905:	      printf("No estate cards in your hand, invalid choice\n");
        -:  906:	      printf("Must gain an estate if there are any\n");
        -:  907:	    }
    #####:  908:	    if (supplyCount(estate, state) > 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  909:	      gainCard(estate, state, 0, currentPlayer);
call    0 never executed
    #####:  910:	      state->supplyCount[estate]--;//Decrement estates
    #####:  911:	      if (supplyCount(estate, state) == 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  912:		isGameOver(state);
call    0 never executed
        -:  913:	      }
        -:  914:	    }
    #####:  915:	    card_not_discarded = 0;//Exit the loop
        -:  916:	  }
        -:  917:			    
        -:  918:	  else{
    #####:  919:	    p++;//Next card
        -:  920:	  }
        -:  921:	}
        -:  922:      }
        -:  923:			    
        -:  924:      else{
    #####:  925:	if (supplyCount(estate, state) > 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  926:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
call    0 never executed
    #####:  927:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  928:	  if (supplyCount(estate, state) == 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  929:	    isGameOver(state);
call    0 never executed
        -:  930:	  }
        -:  931:	}
        -:  932:      }
        -:  933:	    
        -:  934:      
    #####:  935:      return 0;
        -:  936:		
        -:  937:    // ***************************		
        -:  938:		// ********  **********
        -:  939:		// ***************************		
        -:  940:    case great_hall:
        -:  941:      //+1 Card
    #####:  942:      drawCard(currentPlayer, state);
call    0 never executed
        -:  943:			
        -:  944:      //+1 Actions
    #####:  945:      state->numActions++;
        -:  946:			
        -:  947:      //discard card from hand
    #####:  948:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####:  949:      return 0;
        -:  950:		
        -:  951:    // ***************************		
        -:  952:		// ********  **********
        -:  953:		// ***************************		
        -:  954:    case minion:
        -:  955:      //+1 action
    #####:  956:      state->numActions++;
        -:  957:			
        -:  958:      //discard card from hand
    #####:  959:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  960:			
    #####:  961:      if (choice1)		//+2 coins
branch  0 never executed
branch  1 never executed
        -:  962:	{
    #####:  963:	  state->coins = state->coins + 2;
        -:  964:	}
        -:  965:			
    #####:  966:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
branch  0 never executed
branch  1 never executed
        -:  967:	{
        -:  968:	  //discard hand
    #####:  969:	  while(numHandCards(state) > 0)
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  970:	    {
    #####:  971:	      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  972:	    }
        -:  973:				
        -:  974:	  //draw 4
    #####:  975:	  for (i = 0; i < 4; i++)
branch  0 never executed
branch  1 never executed
        -:  976:	    {
    #####:  977:	      drawCard(currentPlayer, state);
call    0 never executed
        -:  978:	    }
        -:  979:				
        -:  980:	  //other players discard hand and redraw if hand size > 4
    #####:  981:	  for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  982:	    {
    #####:  983:	      if (i != currentPlayer)
branch  0 never executed
branch  1 never executed
        -:  984:		{
    #####:  985:		  if ( state->handCount[i] > 4 )
branch  0 never executed
branch  1 never executed
        -:  986:		    {
        -:  987:		      //discard hand
    #####:  988:		      while( state->handCount[i] > 0 )
branch  0 never executed
branch  1 never executed
        -:  989:			{
    #####:  990:			  discardCard(handPos, i, state, 0);
call    0 never executed
        -:  991:			}
        -:  992:							
        -:  993:		      //draw 4
    #####:  994:		      for (j = 0; j < 4; j++)
branch  0 never executed
branch  1 never executed
        -:  995:			{
    #####:  996:			  drawCard(i, state);
call    0 never executed
        -:  997:			}
        -:  998:		    }
        -:  999:		}
        -: 1000:	    }
        -: 1001:				
        -: 1002:	}
    #####: 1003:      return 0;
        -: 1004:		
        -: 1005:		//*********************
        -: 1006:    //*********************
        -: 1007:    //*********************
        -: 1008:    
        -: 1009:    case steward:
    #####: 1010:      if (choice1 == 1)
branch  0 never executed
branch  1 never executed
        -: 1011:	{
        -: 1012:	  //+2 cards
    #####: 1013:	  drawCard(currentPlayer, state);
call    0 never executed
    #####: 1014:	  drawCard(currentPlayer, state);
call    0 never executed
        -: 1015:	}
    #####: 1016:      else if (choice1 == 2)
branch  0 never executed
branch  1 never executed
        -: 1017:	{
        -: 1018:	  //+2 coins
    #####: 1019:	  state->coins = state->coins + 2;
        -: 1020:	}
        -: 1021:      else
        -: 1022:	{
        -: 1023:	  //trash 2 cards in hand
    #####: 1024:	  discardCard(choice2, currentPlayer, state, 1);
call    0 never executed
    #####: 1025:	  discardCard(choice3, currentPlayer, state, 1);
call    0 never executed
        -: 1026:	}
        -: 1027:			
        -: 1028:      //discard card from hand
    #####: 1029:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####: 1030:      return 0;
        -: 1031:		
        -: 1032:    // ***************************		
        -: 1033:		// ********  **********
        -: 1034:		// ***************************		
        -: 1035:    case tribute:
    #####: 1036:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
branch  0 never executed
branch  1 never executed
    #####: 1037:	if (state->deckCount[nextPlayer] > 0){
branch  0 never executed
branch  1 never executed
    #####: 1038:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1039:	  state->deckCount[nextPlayer]--;
        -: 1040:	}
    #####: 1041:	else if (state->discardCount[nextPlayer] > 0){
branch  0 never executed
branch  1 never executed
    #####: 1042:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1043:	  state->discardCount[nextPlayer]--;
        -: 1044:	}
        -: 1045:	else{
        -: 1046:	  //No Card to Reveal
        -: 1047:	  if (DEBUG){
        -: 1048:	    printf("No cards to reveal\n");
        -: 1049:	  }
        -: 1050:	}
        -: 1051:      }
        -: 1052:	    
        -: 1053:      else{
    #####: 1054:	if (state->deckCount[nextPlayer] == 0){
branch  0 never executed
branch  1 never executed
    #####: 1055:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####: 1056:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1057:	    state->deckCount[nextPlayer]++;
    #####: 1058:	    state->discard[nextPlayer][i] = -1;
    #####: 1059:	    state->discardCount[nextPlayer]--;
        -: 1060:	  }
        -: 1061:			    
    #####: 1062:	  shuffle(nextPlayer,state);//Shuffle the deck
call    0 never executed
        -: 1063:	} 
    #####: 1064:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1065:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1066:	state->deckCount[nextPlayer]--;
    #####: 1067:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1068:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1069:	state->deckCount[nextPlayer]--;
        -: 1070:      }    
        -: 1071:		       
    #####: 1072:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one 
branch  0 never executed
branch  1 never executed
    #####: 1073:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1074:	state->playedCardCount++;
    #####: 1075:	tributeRevealedCards[1] = -1;
        -: 1076:      }
        -: 1077:
    #####: 1078:      for (i = 0; i <= 2; i ++){
branch  0 never executed
branch  1 never executed
    #####: 1079:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####: 1080:	  state->coins += 2;
        -: 1081:	}
        -: 1082:		    
    #####: 1083:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
    #####: 1084:	  drawCard(currentPlayer, state);
call    0 never executed
    #####: 1085:	  drawCard(currentPlayer, state);
call    0 never executed
        -: 1086:	}
        -: 1087:	else{//Action Card
    #####: 1088:	  state->numActions = state->numActions + 2;
        -: 1089:	}
        -: 1090:      }
        -: 1091:	    
    #####: 1092:      return 0;
        -: 1093:
        -: 1094:    // ***************************		
        -: 1095:		// ********  **********
        -: 1096:		// ***************************		
        -: 1097:		
        -: 1098:    case ambassador:
    #####: 1099:      j = 0;		//used to check if player has enough cards to discard
        -: 1100:
    #####: 1101:      if (choice2 > 2 || choice2 < 0)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -: 1102:	{
    #####: 1103:	  return -1;				
        -: 1104:	}
        -: 1105:
    #####: 1106:      if (choice1 == handPos)
branch  0 never executed
branch  1 never executed
        -: 1107:	{
    #####: 1108:	  return -1;
        -: 1109:	}
        -: 1110:
    #####: 1111:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1112:	{
    #####: 1113:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
        -: 1114:	    {
    #####: 1115:	      j++;
        -: 1116:	    }
        -: 1117:	}
    #####: 1118:      if (j < choice2)
branch  0 never executed
branch  1 never executed
        -: 1119:	{
    #####: 1120:	  return -1;				
        -: 1121:	}
        -: 1122:
        -: 1123:      if (DEBUG) 
        -: 1124:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1125:
        -: 1126:      //increase supply count for choosen card by amount being discarded
    #####: 1127:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1128:			
        -: 1129:      //each other player gains a copy of revealed card
    #####: 1130:      for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -: 1131:	{
    #####: 1132:	  if (i != currentPlayer)
branch  0 never executed
branch  1 never executed
        -: 1133:	    {
    #####: 1134:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
call    0 never executed
        -: 1135:	    }
        -: 1136:	}
        -: 1137:
        -: 1138:      //discard played card from hand
    #####: 1139:      discardCard(handPos, currentPlayer, state, 0);			
call    0 never executed
        -: 1140:
        -: 1141:      //trash copies of cards returned to supply
    #####: 1142:      for (j = 0; j < choice2; j++)
branch  0 never executed
branch  1 never executed
        -: 1143:	{
    #####: 1144:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1145:	    {
    #####: 1146:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
branch  0 never executed
branch  1 never executed
        -: 1147:		{
    #####: 1148:		  discardCard(i, currentPlayer, state, 1);
call    0 never executed
    #####: 1149:		  break;
        -: 1150:		}
        -: 1151:	    }
        -: 1152:	}			
        -: 1153:
    #####: 1154:      return 0;
        -: 1155:
        -: 1156:    // ***************************		
        -: 1157:		// ******** CUT PURSE **********
        -: 1158:		// ***************************		
        -: 1159:
        -: 1160:    case cutpurse:
        -: 1161:      
        -: 1162:      // Refactored code in separate function
    #####: 1163:      CutPurseAction (currentPlayer, state, handPos);
call    0 never executed
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:/*** commented out and moved code to separate function
        -: 1167:      updateCoins(currentPlayer, state, 2);
        -: 1168:      for (i = 0; i < state->numPlayers; i++)
        -: 1169:	{
        -: 1170:	  if (i != currentPlayer)
        -: 1171:	    {
        -: 1172:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1173:		{
        -: 1174:		  if (state->hand[i][j] == copper)
        -: 1175:		    {
        -: 1176:		      discardCard(j, i, state, 0);
        -: 1177:		      break;
        -: 1178:		    }
        -: 1179:		  if (j == state->handCount[i])
        -: 1180:		    {
        -: 1181:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1182:			{
        -: 1183:			  if (DEBUG)
        -: 1184:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1185:			}	
        -: 1186:		      break;
        -: 1187:		    }		
        -: 1188:		}
        -: 1189:					
        -: 1190:	    }
        -: 1191:				
        -: 1192:	}				
        -: 1193:      //discard played card from hand
        -: 1194:      discardCard(handPos, currentPlayer, state, 0);			
        -: 1195:***/
        -: 1196:
        -: 1197:    // ***************************		
        -: 1198:		// ******** embargo **********
        -: 1199:		// ***************************				
        -: 1200:    case embargo: 
        -: 1201:      //+2 Coins
    #####: 1202:      state->coins = state->coins + 2;
        -: 1203:			
        -: 1204:      //see if selected pile is in play
    #####: 1205:      if ( state->supplyCount[choice1] == -1 )
branch  0 never executed
branch  1 never executed
        -: 1206:	{
    #####: 1207:	  return -1;
        -: 1208:	}
        -: 1209:			
        -: 1210:      //add embargo token to selected supply pile
    #####: 1211:      state->embargoTokens[choice1]++;
        -: 1212:			
        -: 1213:      //trash card
    #####: 1214:      discardCard(handPos, currentPlayer, state, 1);		
call    0 never executed
    #####: 1215:      return 0;
        -: 1216:
        -: 1217:    // ***************************		
        -: 1218:		// ******** Outpost **********
        -: 1219:		// ***************************		
        -: 1220:		
        -: 1221:    case outpost:
        -: 1222:      //set outpost flag
    #####: 1223:      state->outpostPlayed++;
        -: 1224:			
        -: 1225:      //discard card
    #####: 1226:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####: 1227:      return 0;
        -: 1228:
        -: 1229:    // ***************************		
        -: 1230:		// ******** SALVAGER **********
        -: 1231:		// ***************************		
        -: 1232:    case salvager:
        -: 1233:      //+1 buy
    #####: 1234:      state->numBuys++;
        -: 1235:			
    #####: 1236:      if (choice1)
branch  0 never executed
branch  1 never executed
        -: 1237:	{
        -: 1238:	  //gain coins equal to trashed card
    #####: 1239:	  state->coins = state->coins + getCost( handCard(choice1, state) );
call    0 never executed
call    1 never executed
        -: 1240:	  //trash card
    #####: 1241:	  discardCard(choice1, currentPlayer, state, 1);	
call    0 never executed
        -: 1242:	}
        -: 1243:			
        -: 1244:      //discard card
    #####: 1245:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####: 1246:      return 0;
        -: 1247:
        -: 1248:    // ***************************		
        -: 1249:		// ******** SEA HAG **********
        -: 1250:		// ***************************		
        -: 1251:    case sea_hag:
    #####: 1252:      for (i = 0; i < state->numPlayers; i++){
branch  0 never executed
branch  1 never executed
    #####: 1253:    	  if (i != currentPlayer){
branch  0 never executed
branch  1 never executed
    #####: 1254:    		  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1255:    		  state->discardCount[i]++;
    #####: 1256:    		  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1257:    	  }
        -: 1258:      }
    #####: 1259:      return 0;
        -: 1260:
        -: 1261:      // ***************************
        -: 1262:  		// ******** TREASURE MAP **********
        -: 1263:  		// ***************************
        -: 1264:    case treasure_map:
        -: 1265:
        -: 1266:    	//int returnval;
        -: 1267:    	//returnval = TreasureMapAction (currentPlayer, state, handPos);
    #####: 1268:    	return (TreasureMapAction (currentPlayer, state, handPos));
call    0 never executed
        -: 1269:
        -: 1270:    	/** commented out and moved to separate function
        -: 1271:      //search hand for another treasure_map
        -: 1272:      index = -1;
        -: 1273:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1274:      {
        -: 1275:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1276:	    {
        -: 1277:	      index = i;
        -: 1278:	      break;
        -: 1279:	    }
        -: 1280:      }
        -: 1281:      if (index > -1) {
        -: 1282:		  //trash both treasure cards
        -: 1283:		  discardCard(handPos, currentPlayer, state, 1);
        -: 1284:		  discardCard(index, currentPlayer, state, 1);
        -: 1285:
        -: 1286:		  //gain 4 Gold cards
        -: 1287:		  for (i = 0; i < 4; i++) {
        -: 1288:			  gainCard(gold, state, 1, currentPlayer);
        -: 1289:		  }
        -: 1290:				
        -: 1291:		  //return success
        -: 1292:		  return 1;
        -: 1293:      }
        -: 1294:			
        -: 1295:      //no second treasure_map found in hand
        -: 1296:      return -1;
        -: 1297:      */
        -: 1298:    }
        -: 1299:
    #####: 1300:  return -1;
        -: 1301:}
        -: 1302:
function discardCard called 1000 returned 100% blocks executed 100%
     1000: 1303:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1304:{
        -: 1305:  //if card is not trashed, added to Played pile 
     1000: 1306:  if (trashFlag < 1) {
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -: 1307:      //add card to played pile
     1000: 1308:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos]; 
     1000: 1309:      state->playedCardCount++;
        -: 1310:   }
        -: 1311:  //set played card to -1
     1000: 1312:  state->hand[currentPlayer][handPos] = -1;
        -: 1313:	
        -: 1314:  //remove card from player's hand
     1000: 1315:  if ( handPos == (state->handCount[currentPlayer] - 1) ) { //last card in hand array is played
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1316:      //reduce number of cards in hand
       13: 1317:      state->handCount[currentPlayer]--;
      987: 1318:  } else if ( state->handCount[currentPlayer] == 1 ) { //only one card in hand
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        -: 1319:      //reduce number of cards in hand
        9: 1320:      state->handCount[currentPlayer]--;
        -: 1321:  } else {
        -: 1322:      //replace discarded card with last card in hand
      978: 1323:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1324:      //set last card to -1
      978: 1325:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1326:      //reduce number of cards in hand
      978: 1327:      state->handCount[currentPlayer]--;
        -: 1328:   }
     1000: 1329:  return 0;
        -: 1330:}
        -: 1331:
function gainCard called 0 returned 0% blocks executed 0%
    #####: 1332:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1333:{
        -: 1334:  //Note: supplyPos is enum of choosen card
        -: 1335:	
        -: 1336:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1337:  if ( supplyCount(supplyPos, state) < 1 )
call    0 never executed
branch  1 never executed
branch  2 never executed
        -: 1338:    {
    #####: 1339:      return -1;
        -: 1340:    }
        -: 1341:	
        -: 1342:  //added card for [whoseTurn] current player:
        -: 1343:  // toFlag = 0 : add to discard
        -: 1344:  // toFlag = 1 : add to deck
        -: 1345:  // toFlag = 2 : add to hand
        -: 1346:
    #####: 1347:  if (toFlag == 1)
branch  0 never executed
branch  1 never executed
        -: 1348:    {
    #####: 1349:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1350:      state->deckCount[player]++;
        -: 1351:    }
    #####: 1352:  else if (toFlag == 2)
branch  0 never executed
branch  1 never executed
        -: 1353:    {
    #####: 1354:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1355:      state->handCount[player]++;
        -: 1356:    }
        -: 1357:  else
        -: 1358:    {
    #####: 1359:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1360:      state->discardCount[player]++;
        -: 1361:    }
        -: 1362:	
        -: 1363:  //decrease number in supply pile
    #####: 1364:  state->supplyCount[supplyPos]--;
        -: 1365:	 
    #####: 1366:  return 0;
        -: 1367:}
        -: 1368:
function updateCoins called 1000 returned 100% blocks executed 82%
     1000: 1369:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1370:{
        -: 1371:  int i;
        -: 1372:	
        -: 1373:  //reset coin count
     1000: 1374:  state->coins = 0;
        -: 1375:
        -: 1376:  //add coins for each Treasure card in player's hand
     6000: 1377:  for (i = 0; i < state->handCount[player]; i++)
branch  0 taken 83%
branch  1 taken 17% (fallthrough)
        -: 1378:    {
     5000: 1379:      if (state->hand[player][i] == copper)
branch  0 taken 77% (fallthrough)
branch  1 taken 23%
        -: 1380:	{
     3874: 1381:	  state->coins += 1;
        -: 1382:	}
     1126: 1383:      else if (state->hand[player][i] == silver)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -: 1384:	{
    #####: 1385:	  state->coins += 2;
        -: 1386:	}
     1126: 1387:      else if (state->hand[player][i] == gold)
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
        -: 1388:	{
    #####: 1389:	  state->coins += 3;
        -: 1390:	}	
        -: 1391:    }	
        -: 1392:
        -: 1393:  //add bonus
     1000: 1394:  state->coins += bonus;
        -: 1395:
     1000: 1396:  return 0;
        -: 1397:}
        -: 1398:
        -: 1399://***************************************
        -: 1400://***** REFACTORED CODE Week2 ***********
        -: 1401://***************************************
        -: 1402:
function TreasureMapAction called 0 returned 0% blocks executed 0%
    #####: 1403:int TreasureMapAction (int currentPlayer, struct gameState *state, int handPos) {
        -: 1404:	//search hand for another treasure_map
    #####: 1405:	int index = -1;
        -: 1406:	int i;
    #####: 1407:	for (i = 0; i < state->handCount[currentPlayer]; i++) {
branch  0 never executed
branch  1 never executed
    #####: 1408:		if (state->hand[currentPlayer][i] == treasure_map && i != handPos) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####: 1409:			index = i;
    #####: 1410:			break;
        -: 1411:		}
        -: 1412:	}
    #####: 1413:	if (index > -1) {
branch  0 never executed
branch  1 never executed
        -: 1414:		//trash both treasure cards
    #####: 1415:		discardCard(handPos, currentPlayer, state, 1);
call    0 never executed
    #####: 1416:		discardCard(index, currentPlayer, state, 1);
call    0 never executed
        -: 1417:
        -: 1418:		//gain 4 Gold cards
    #####: 1419:		for (i = 0; i < 4; i++) {
branch  0 never executed
branch  1 never executed
    #####: 1420:			gainCard(gold, state, 1, currentPlayer);
call    0 never executed
        -: 1421:		}
        -: 1422:
        -: 1423:		//return success
    #####: 1424:		return 1;
        -: 1425:	}
        -: 1426:
        -: 1427:	//no second treasure_map found in hand
    #####: 1428:	return -1;
        -: 1429:}
        -: 1430:
        -: 1431:// ***********************
        -: 1432:// SMITHY ACTION FUNCTION
        -: 1433:// ***********************
function SmithyAction called 1000 returned 100% blocks executed 100%
     1000: 1434:int SmithyAction (int currentPlayer, struct gameState *state, int handPos) {
        -: 1435:  int i;
        -: 1436:  // printf ("\nDebug: Smithy Action refactor code\n");
        -: 1437:
        -: 1438:/** Original Smithy action without bugs
        -: 1439:  //+3 Cards
        -: 1440:  for (i = 0; i < 3; i++)
        -: 1441:	{
        -: 1442:	  drawCard(currentPlayer, state);
        -: 1443:	}	
        -: 1444:**/ 
        -: 1445:
        -: 1446:  // *** ADDING BUG +4 Cards (instead of +3 cards!!)
     5000: 1447:  for (i = 0; i < 4; i++)
branch  0 taken 80%
branch  1 taken 20% (fallthrough)
        -: 1448:	{
     4000: 1449:	  drawCard(currentPlayer, state);
call    0 returned 100%
        -: 1450:	}	
        -: 1451:	
        -: 1452:  //discard card from hand
     1000: 1453:  discardCard(handPos, currentPlayer, state, 0);
call    0 returned 100%
     1000: 1454:  return 0;
        -: 1455:}
        -: 1456:
        -: 1457:
        -: 1458:// ***********************
        -: 1459:// ADVENTURER ACTION FUNCTION
        -: 1460:// ***********************
function AdventurerAction called 0 returned 0% blocks executed 0%
    #####: 1461:int AdventurerAction (int currentPlayer, struct gameState *state, int handPos) {
    #####: 1462:  int drawntreasure=0;
    #####: 1463:  int z = 0; // for temp hand counter
        -: 1464:  int cardDrawn;
        -: 1465:  int temphand[MAX_HAND];
        -: 1466:  int result; // added to stop crashing
        -: 1467:  
        -: 1468:  //printf ("\nDebug: Adventurer Action refactor code\n");
        -: 1469:
    #####: 1470:  while(drawntreasure<2){
branch  0 never executed
branch  1 never executed
    #####: 1471:	  if (state->deckCount[currentPlayer] <1){//if the deck is empty we need to shuffle discard and add to deck
branch  0 never executed
branch  1 never executed
    #####: 1472:	  shuffle(currentPlayer, state);
call    0 never executed
        -: 1473:	  }
    #####: 1474:	  result = drawCard(currentPlayer, state);
call    0 never executed
        -: 1475:	  // DEBUG
    #####: 1476:	  if (result == -1) {
branch  0 never executed
branch  1 never executed
    #####: 1477:		  printf (" -- Couldn't draw card -- \n");
call    0 never executed
        -: 1478:		  // setting drawntreasure to 3 to get out of while loop
    #####: 1479:		  drawntreasure = 3;
        -: 1480:	  } else {
        -: 1481:		  // end DEBUG
        -: 1482:
        -: 1483:		  //top card of hand is most recently drawn card.
    #####: 1484:		  cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];
        -: 1485:
        -: 1486:/***  Original Adventurer action without bugs
        -: 1487:	  if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
        -: 1488:***/
        -: 1489:    // *** ADDING BUG if statement does not check for gold, just copper and silver
    #####: 1490:		  if (cardDrawn == copper || cardDrawn == silver) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####: 1491:			  drawntreasure++;
    #####: 1492:			  printf ("drawntreasure = %i, cardDrawn = %i -> ", drawntreasure, cardDrawn);
call    0 never executed
        -: 1493:		  } else {
    #####: 1494:			  temphand[z]=cardDrawn;
    #####: 1495:			  state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
    #####: 1496:			  z++;
        -: 1497:		  }
        -: 1498:	  }
        -: 1499:
        -: 1500:  }
    #####: 1501:  while(z-1>=0){
branch  0 never executed
branch  1 never executed
    #####: 1502:	  state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####: 1503:	  z=z-1;
        -: 1504:  }
    #####: 1505:  return 0;
        -: 1506:}
        -: 1507:
        -: 1508:
        -: 1509:
        -: 1510:// ***********************
        -: 1511:// VILLAGE ACTION FUNCTION
        -: 1512:// ***********************
function VillageAction called 0 returned 0% blocks executed 0%
    #####: 1513:int VillageAction (int currentPlayer, struct gameState *state, int handPos) {
        -: 1514:  //printf ("\nDebug: Village Action refactor code\n");
        -: 1515:  //+1 Card
    #####: 1516:  drawCard(currentPlayer, state);
call    0 never executed
        -: 1517:
        -: 1518:/***  Original Village Action action without bugs			
        -: 1519:  //+2 Actions
        -: 1520:  state->numActions = state->numActions + 2;
        -: 1521:***/
        -: 1522:	// *** ADDING BUG adding 3 more actions instead of 2
    #####: 1523:  state->numActions = state->numActions + 3;  
        -: 1524:  
        -: 1525:  //discard played card from hand
    #####: 1526:  discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -: 1527:  
    #####: 1528:  return 0;
        -: 1529:}
        -: 1530:
        -: 1531:
        -: 1532:
        -: 1533:
        -: 1534:
function CouncilRoomAction called 0 returned 0% blocks executed 0%
    #####: 1535:int CouncilRoomAction (int currentPlayer, struct gameState *state, int handPos) {
        -: 1536:  int i;
    #####: 1537:  printf ("\nDebug: Council Room Action refactor code\n");
call    0 never executed
        -: 1538:  //+4 Cards
    #####: 1539:  for (i = 0; i < 4; i++) {
branch  0 never executed
branch  1 never executed
    #####: 1540:	  drawCard(currentPlayer, state);
call    0 never executed
        -: 1541:	}
        -: 1542:	//+1 Buy
    #####: 1543:  state->numBuys++;
        -: 1544:
        -: 1545:/***  Original Council Room action without bugs			
        -: 1546:  //Each other player draws a card
        -: 1547:  for (i = 0; i < state->numPlayers; i++) {
        -: 1548:***/
        -: 1549:  // *** ADDING BUG reducing the other players that need to draw card by 1
    #####: 1550:  for (i = 0; i < (state->numPlayers-1); i++) {
branch  0 never executed
branch  1 never executed
    #####: 1551:	  if ( i != currentPlayer ) {
branch  0 never executed
branch  1 never executed
    #####: 1552:	      drawCard(i, state);
call    0 never executed
        -: 1553:	  }
        -: 1554:	}
        -: 1555:	//put played card in played card pile
    #####: 1556:  discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####: 1557:  return 0;
        -: 1558:}
        -: 1559:
        -: 1560:
        -: 1561:
        -: 1562:
function CutPurseAction called 0 returned 0% blocks executed 0%
    #####: 1563:int CutPurseAction (int currentPlayer, struct gameState *state, int handPos) {
        -: 1564:  int i, j, k;
    #####: 1565:  printf ("\nDebug: Cut Purse Action refactor code\n");
call    0 never executed
        -: 1566:  
    #####: 1567:  updateCoins(currentPlayer, state, 2);
call    0 never executed
    #####: 1568:  for (i = 0; i < state->numPlayers; i++) {
branch  0 never executed
branch  1 never executed
    #####: 1569:	  if (i != currentPlayer) {
branch  0 never executed
branch  1 never executed
    #####: 1570:	    for (j = 0; j < state->handCount[i]; j++) {
branch  0 never executed
branch  1 never executed
        -: 1571:	    
        -: 1572:	    /***  Original Council Room action without bugs		
        -: 1573:		    if (state->hand[i][j] == copper) {
        -: 1574:		  ***/
        -: 1575:        // *** ADDING BUG other players discard silver INSTEAD of copper
    #####: 1576:		    if (state->hand[i][j] == silver) {		    
branch  0 never executed
branch  1 never executed
    #####: 1577:		      discardCard(j, i, state, 0);
call    0 never executed
    #####: 1578:		      break;
        -: 1579:		    }
    #####: 1580:		    if (j == state->handCount[i]) {
branch  0 never executed
branch  1 never executed
    #####: 1581:		      for (k = 0; k < state->handCount[i]; k++) {
branch  0 never executed
branch  1 never executed
        -: 1582:			      if (DEBUG)
        -: 1583:			      printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1584:			    }	
    #####: 1585:		      break;
        -: 1586:		    }		
        -: 1587:		  }		
        -: 1588:	  }		
        -: 1589:	}				
        -: 1590:  //discard played card from hand
    #####: 1591:  discardCard(handPos, currentPlayer, state, 0);			
call    0 never executed
    #####: 1592:  return 0;
        -: 1593:}
        -: 1594:
        -: 1595://end of dominion.c
        -: 1596:
