Starting ramdom test adventurer. clock seed for random number set

*************** ITERATION # 0 ***************  
NOTE Player 1: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 98, supplyTotalPre: 96
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 98
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 0 -> FAILED tests
*************** ITERATION # 1 ***************  
NOTE Player 0: found 113 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 299, supplyTotalPre: 297
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 299
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 1 -> FAILED tests
*************** ITERATION # 2 ***************  
NOTE Player 0: found 66 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 495, supplyTotalPre: 493
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 495
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 2 -> FAILED tests
*************** ITERATION # 3 ***************  
NOTE Player 0: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 50, supplyTotalPre: 48
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 50
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 3 -> FAILED tests
*************** ITERATION # 4 ***************  
NOTE Player 1: did NOT find treasure in player's discard
NOTE Player 1: found 15 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 48, supplyTotalPre: 46
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 48
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 4 -> FAILED tests
*************** ITERATION # 5 ***************  
NOTE Player 0: found 31 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 440, supplyTotalPre: 438
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 440
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 5 -> FAILED tests
*************** ITERATION # 6 ***************  
NOTE Player 0: found 59 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 220, supplyTotalPre: 218
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 220
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 6 -> FAILED tests
*************** ITERATION # 7 ***************  
NOTE Player 1: found 93 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 67, supplyTotalPre: 65
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 67
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 7 -> FAILED tests
*************** ITERATION # 8 ***************  
NOTE Player 0: did NOT find Adventurer in player's hand
NOTE Player 0: found 12 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): ********** no assert performed
Test4 (check deck+discard count): ********** no assert performed
Test5 (check top cards of hand): topHand == 4
Branch-3 FAILED: player #0, check if top card of hand is unchanged
Debug Data: G->hand[topHand-2]: 1553790000, Gpre.hand[topHand-2]): 1553763544
printing POST game state: 

--START PRINTING GAME STATE -------------------
numPlayers = 3
SUPPLY TOTAL=196, supplyCount: #0: 11, #1: 2, #2: 8, #3: 6, #4: 38, #5: 7, #6: 9, #7: 9, #8: 6, #9: 7, #10: 11, #11: 0, #12: 4, #13: 11, #14: 0, #15: 4, #16: 10, #17: 7, #18: 4, #19: 12, #20: 5, #21: 5, #22: 5, #23: -1, #24: -1, #25: 7, #26: 10, 
embargoTokens: #0: 0, #1: 0, #2: 0, #3: 0, #4: 0, #5: 0, #6: 0, #7: 0, #8: 0, #9: 0, #10: 0, #11: 0, #12: 0, #13: 0, #14: 0, #15: 0, #16: 0, #17: 0, #18: 0, #19: 0, #20: 0, #21: 0, #22: 0, #23: 0, #24: 0, #25: 0, #26: 0, 
outpostPlayed = 0, outpostTurn = 387389207, whoseTurn = 0, phase = 0, numActions = 1, coins = 4, numBuys = 1
playedCardCount = 0, playedCards[x]: 
---------------------
PLAYER #0, HANDCOUNT=4, hand[player][hand]: [0][hand:0] = 9, [0][hand:1] = 20, [0][hand:2] = 4, [0][hand:3] = 5, 
PLAYER #0, DECKCOUNT=47, deck[player][hand]: [0][deck:0] = 11, [0][deck:1] = 3, [0][deck:2] = 21, [0][deck:3] = 14, [0][deck:4] = 5, [0][deck:5] = 9, [0][deck:6] = 23, [0][deck:7] = 5, [0][deck:8] = 21, [0][deck:9] = 15, [0][deck:10] = 26, [0][deck:11] = 16, [0][deck:12] = 14, [0][deck:13] = 6, [0][deck:14] = 17, [0][deck:15] = 2, [0][deck:16] = 0, [0][deck:17] = 13, [0][deck:18] = 13, [0][deck:19] = 8, [0][deck:20] = 16, [0][deck:21] = 10, [0][deck:22] = 3, [0][deck:23] = 26, [0][deck:24] = 11, [0][deck:25] = 14, [0][deck:26] = 20, [0][deck:27] = 20, [0][deck:28] = 21, [0][deck:29] = 2, [0][deck:30] = 16, [0][deck:31] = 20, [0][deck:32] = 12, [0][deck:33] = 15, [0][deck:34] = 20, [0][deck:35] = 7, [0][deck:36] = 4, [0][deck:37] = 16, [0][deck:38] = 20, [0][deck:39] = 15, [0][deck:40] = 25, [0][deck:41] = 16, [0][deck:42] = 18, [0][deck:43] = 2, [0][deck:44] = 20, [0][deck:45] = 21, [0][deck:46] = 25, 
PLAYER #0, DISCARDCOUNT=82, discard[player][hand]: [0][discard: 0] = 25, [0][discard: 1] = 13, [0][discard: 2] = 6, [0][discard: 3] = 16, [0][discard: 4] = 0, [0][discard: 5] = 2, [0][discard: 6] = 4, [0][discard: 7] = 8, [0][discard: 8] = 18, [0][discard: 9] = 18, [0][discard: 10] = 17, [0][discard: 11] = 15, [0][discard: 12] = 11, [0][discard: 13] = 26, [0][discard: 14] = 0, [0][discard: 15] = 18, [0][discard: 16] = 20, [0][discard: 17] = 8, [0][discard: 18] = 14, [0][discard: 19] = 25, [0][discard: 20] = 17, [0][discard: 21] = 5, [0][discard: 22] = 21, [0][discard: 23] = 22, [0][discard: 24] = 13, [0][discard: 25] = 3, [0][discard: 26] = 8, [0][discard: 27] = 0, [0][discard: 28] = 20, [0][discard: 29] = 4, [0][discard: 30] = 7, [0][discard: 31] = 20, [0][discard: 32] = 2, [0][discard: 33] = 9, [0][discard: 34] = 0, [0][discard: 35] = 23, [0][discard: 36] = 9, [0][discard: 37] = 22, [0][discard: 38] = 23, [0][discard: 39] = 1, [0][discard: 40] = 17, [0][discard: 41] = 15, [0][discard: 42] = 23, [0][discard: 43] = 17, [0][discard: 44] = 26, [0][discard: 45] = 3, [0][discard: 46] = 22, [0][discard: 47] = 23, [0][discard: 48] = 16, [0][discard: 49] = 12, [0][discard: 50] = 12, [0][discard: 51] = 18, [0][discard: 52] = 7, [0][discard: 53] = 21, [0][discard: 54] = 19, [0][discard: 55] = 24, [0][discard: 56] = 23, [0][discard: 57] = 12, [0][discard: 58] = 14, [0][discard: 59] = 19, [0][discard: 60] = 16, [0][discard: 61] = 21, [0][discard: 62] = 8, [0][discard: 63] = 1, [0][discard: 64] = 25, [0][discard: 65] = 22, [0][discard: 66] = 19, [0][discard: 67] = 6, [0][discard: 68] = 2, [0][discard: 69] = 14, [0][discard: 70] = 22, [0][discard: 71] = 6, [0][discard: 72] = 16, [0][discard: 73] = 25, [0][discard: 74] = 19, [0][discard: 75] = 26, [0][discard: 76] = 21, [0][discard: 77] = 8, [0][discard: 78] = 18, [0][discard: 79] = 26, [0][discard: 80] = 9, [0][discard: 81] = 18, 
---------------------
PLAYER #1, HANDCOUNT=0, hand[player][hand]: 
PLAYER #1, DECKCOUNT=10, deck[player][hand]: [1][deck:0] = 4, [1][deck:1] = 1, [1][deck:2] = 4, [1][deck:3] = 1, [1][deck:4] = 4, [1][deck:5] = 4, [1][deck:6] = 4, [1][deck:7] = 4, [1][deck:8] = 4, [1][deck:9] = 1, 
PLAYER #1, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #2, HANDCOUNT=0, hand[player][hand]: 
PLAYER #2, DECKCOUNT=10, deck[player][hand]: [2][deck:0] = 4, [2][deck:1] = 4, [2][deck:2] = 4, [2][deck:3] = 1, [2][deck:4] = 1, [2][deck:5] = 1, [2][deck:6] = 4, [2][deck:7] = 4, [2][deck:8] = 4, [2][deck:9] = 4, 
PLAYER #2, DISCARDCOUNT=0, discard[player][hand]: 
--END PRINTING GAME STATE -------------------

adventurer test - iteration 8 -> FAILED tests
*************** ITERATION # 9 ***************  
NOTE Player 2: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 64, supplyTotalPre: 62
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 64
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 9 -> FAILED tests
*************** ITERATION # 10 ***************  
NOTE Player 2: found 45 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 244, supplyTotalPre: 242
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 244
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 10 -> FAILED tests
*************** ITERATION # 11 ***************  
NOTE Player 2: found 28 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 392, supplyTotalPre: 390
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 392
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 11 -> FAILED tests
*************** ITERATION # 12 ***************  
NOTE Player 0: found 44 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 447, supplyTotalPre: 445
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 447
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 12 -> FAILED tests
*************** ITERATION # 13 ***************  
NOTE Player 2: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 481, supplyTotalPre: 479
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 481
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 13 -> FAILED tests
*************** ITERATION # 14 ***************  
NOTE Player 0: found 96 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 286, supplyTotalPre: 284
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 286
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 14 -> FAILED tests
*************** ITERATION # 15 ***************  
NOTE Player 2: found 37 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 28, supplyTotalPre: 26
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 28
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 15 -> FAILED tests
*************** ITERATION # 16 ***************  
NOTE Player 0: found 26 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 491, supplyTotalPre: 489
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 491
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 16 -> FAILED tests
*************** ITERATION # 17 ***************  
NOTE Player 2: found 90 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 340, supplyTotalPre: 338
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 340
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 17 -> FAILED tests
*************** ITERATION # 18 ***************  
NOTE Player 0: found 40 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 371, supplyTotalPre: 369
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 371
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 18 -> FAILED tests
*************** ITERATION # 19 ***************  
NOTE Player 1: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 121, supplyTotalPre: 119
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 121
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 19 -> FAILED tests
*************** ITERATION # 20 ***************  
NOTE Player 1: found 63 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 207, supplyTotalPre: 205
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 207
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 20 -> FAILED tests
*************** ITERATION # 21 ***************  
NOTE Player 1: found 16 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 36, supplyTotalPre: 34
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 36
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 21 -> FAILED tests
*************** ITERATION # 22 ***************  
NOTE Player 1: found 89 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 413, supplyTotalPre: 411
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 413
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 22 -> FAILED tests
*************** ITERATION # 23 ***************  
NOTE Player 2: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 205, supplyTotalPre: 203
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 205
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 23 -> FAILED tests
*************** ITERATION # 24 ***************  
NOTE Player 1: did NOT find Adventurer in player's hand
NOTE Player 1: found 122 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): ********** no assert performed
Test4 (check deck+discard count): ********** no assert performed
Test5 (check top cards of hand): topHand == 21
Branch-3 FAILED: player #1, check if top card of hand is unchanged
Debug Data: G->hand[topHand-2]: 1553824000, Gpre.hand[topHand-2]): 1553797544
printing POST game state: 

--START PRINTING GAME STATE -------------------
numPlayers = 3
SUPPLY TOTAL=244, supplyCount: #0: 25, #1: 9, #2: 12, #3: 9, #4: 17, #5: 36, #6: 15, #7: 5, #8: 7, #9: 3, #10: 4, #11: 3, #12: -1, #13: 7, #14: 6, #15: 12, #16: 7, #17: 8, #18: -1, #19: 10, #20: 4, #21: 8, #22: 10, #23: 4, #24: 12, #25: 4, #26: 9, 
embargoTokens: #0: 0, #1: 0, #2: 0, #3: 0, #4: 0, #5: 0, #6: 0, #7: 0, #8: 0, #9: 0, #10: 0, #11: 0, #12: 0, #13: 0, #14: 0, #15: 0, #16: 0, #17: 0, #18: 0, #19: 0, #20: 0, #21: 0, #22: 0, #23: 0, #24: 0, #25: 0, #26: 0, 
outpostPlayed = 0, outpostTurn = 387389207, whoseTurn = 1, phase = 0, numActions = 1, coins = 4, numBuys = 1
playedCardCount = 0, playedCards[x]: 
---------------------
PLAYER #0, HANDCOUNT=5, hand[player][hand]: [0][hand:0] = 1, [0][hand:1] = 4, [0][hand:2] = 4, [0][hand:3] = 4, [0][hand:4] = 4, 
PLAYER #0, DECKCOUNT=5, deck[player][hand]: [0][deck:0] = 1, [0][deck:1] = 4, [0][deck:2] = 4, [0][deck:3] = 1, [0][deck:4] = 4, 
PLAYER #0, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #1, HANDCOUNT=21, hand[player][hand]: [1][hand:0] = 23, [1][hand:1] = 18, [1][hand:2] = 17, [1][hand:3] = 8, [1][hand:4] = 26, [1][hand:5] = 10, [1][hand:6] = 12, [1][hand:7] = 12, [1][hand:8] = 15, [1][hand:9] = 18, [1][hand:10] = 15, [1][hand:11] = 15, [1][hand:12] = 17, [1][hand:13] = 24, [1][hand:14] = 16, [1][hand:15] = 23, [1][hand:16] = 18, [1][hand:17] = 12, [1][hand:18] = 12, [1][hand:19] = 4, [1][hand:20] = 4, 
PLAYER #1, DECKCOUNT=447, deck[player][hand]: [1][deck:0] = 24, [1][deck:1] = 26, [1][deck:2] = 7, [1][deck:3] = 24, [1][deck:4] = 13, [1][deck:5] = 23, [1][deck:6] = 21, [1][deck:7] = 21, [1][deck:8] = 8, [1][deck:9] = 0, [1][deck:10] = 10, [1][deck:11] = 25, [1][deck:12] = 5, [1][deck:13] = 22, [1][deck:14] = 24, [1][deck:15] = 21, [1][deck:16] = 5, [1][deck:17] = 8, [1][deck:18] = 6, [1][deck:19] = 1, [1][deck:20] = 21, [1][deck:21] = 3, [1][deck:22] = 4, [1][deck:23] = 11, [1][deck:24] = 4, [1][deck:25] = 24, [1][deck:26] = 2, [1][deck:27] = 8, [1][deck:28] = 6, [1][deck:29] = 26, [1][deck:30] = 14, [1][deck:31] = 7, [1][deck:32] = 11, [1][deck:33] = 4, [1][deck:34] = 6, [1][deck:35] = 0, [1][deck:36] = 16, [1][deck:37] = 23, [1][deck:38] = 5, [1][deck:39] = 3, [1][deck:40] = 24, [1][deck:41] = 8, [1][deck:42] = 25, [1][deck:43] = 6, [1][deck:44] = 1, [1][deck:45] = 4, [1][deck:46] = 1, [1][deck:47] = 23, [1][deck:48] = 19, [1][deck:49] = 8, [1][deck:50] = 10, [1][deck:51] = 15, [1][deck:52] = 15, [1][deck:53] = 2, [1][deck:54] = 26, [1][deck:55] = 13, [1][deck:56] = 10, [1][deck:57] = 2, [1][deck:58] = 0, [1][deck:59] = 20, [1][deck:60] = 20, [1][deck:61] = 4, [1][deck:62] = 20, [1][deck:63] = 1, [1][deck:64] = 2, [1][deck:65] = 25, [1][deck:66] = 0, [1][deck:67] = 1, [1][deck:68] = 21, [1][deck:69] = 4, [1][deck:70] = 9, [1][deck:71] = 25, [1][deck:72] = 6, [1][deck:73] = 25, [1][deck:74] = 26, [1][deck:75] = 18, [1][deck:76] = 15, [1][deck:77] = 6, [1][deck:78] = 17, [1][deck:79] = 9, [1][deck:80] = 25, [1][deck:81] = 19, [1][deck:82] = 14, [1][deck:83] = 9, [1][deck:84] = 19, [1][deck:85] = 6, [1][deck:86] = 13, [1][deck:87] = 4, [1][deck:88] = 20, [1][deck:89] = 16, [1][deck:90] = 14, [1][deck:91] = 15, [1][deck:92] = 20, [1][deck:93] = 15, [1][deck:94] = 2, [1][deck:95] = 19, [1][deck:96] = 6, [1][deck:97] = 21, [1][deck:98] = 6, [1][deck:99] = 23, [1][deck:100] = 11, [1][deck:101] = 23, [1][deck:102] = 25, [1][deck:103] = 25, [1][deck:104] = 9, [1][deck:105] = 5, [1][deck:106] = 24, [1][deck:107] = 6, [1][deck:108] = 10, [1][deck:109] = 0, [1][deck:110] = 8, [1][deck:111] = 17, [1][deck:112] = 14, [1][deck:113] = 6, [1][deck:114] = 2, [1][deck:115] = 1, [1][deck:116] = 5, [1][deck:117] = 24, [1][deck:118] = 20, [1][deck:119] = 22, [1][deck:120] = 22, [1][deck:121] = 13, [1][deck:122] = 22, [1][deck:123] = 6, [1][deck:124] = 9, [1][deck:125] = 6, [1][deck:126] = 12, [1][deck:127] = 22, [1][deck:128] = 24, [1][deck:129] = 3, [1][deck:130] = 0, [1][deck:131] = 11, [1][deck:132] = 10, [1][deck:133] = 18, [1][deck:134] = 18, [1][deck:135] = 3, [1][deck:136] = 14, [1][deck:137] = 9, [1][deck:138] = 15, [1][deck:139] = 0, [1][deck:140] = 12, [1][deck:141] = 5, [1][deck:142] = 10, [1][deck:143] = 13, [1][deck:144] = 5, [1][deck:145] = 18, [1][deck:146] = 8, [1][deck:147] = 22, [1][deck:148] = 1, [1][deck:149] = 16, [1][deck:150] = 5, [1][deck:151] = 20, [1][deck:152] = 6, [1][deck:153] = 17, [1][deck:154] = 25, [1][deck:155] = 17, [1][deck:156] = 12, [1][deck:157] = 19, [1][deck:158] = 18, [1][deck:159] = 19, [1][deck:160] = 18, [1][deck:161] = 24, [1][deck:162] = 11, [1][deck:163] = 26, [1][deck:164] = 26, [1][deck:165] = 14, [1][deck:166] = 15, [1][deck:167] = 20, [1][deck:168] = 12, [1][deck:169] = 25, [1][deck:170] = 4, [1][deck:171] = 20, [1][deck:172] = 9, [1][deck:173] = 18, [1][deck:174] = 7, [1][deck:175] = 3, [1][deck:176] = 15, [1][deck:177] = 5, [1][deck:178] = 20, [1][deck:179] = 7, [1][deck:180] = 25, [1][deck:181] = 17, [1][deck:182] = 13, [1][deck:183] = 7, [1][deck:184] = 13, [1][deck:185] = 5, [1][deck:186] = 15, [1][deck:187] = 9, [1][deck:188] = 23, [1][deck:189] = 14, [1][deck:190] = 15, [1][deck:191] = 13, [1][deck:192] = 21, [1][deck:193] = 9, [1][deck:194] = 23, [1][deck:195] = 1, [1][deck:196] = 17, [1][deck:197] = 12, [1][deck:198] = 22, [1][deck:199] = 10, [1][deck:200] = 0, [1][deck:201] = 26, [1][deck:202] = 1, [1][deck:203] = 25, [1][deck:204] = 2, [1][deck:205] = 4, [1][deck:206] = 7, [1][deck:207] = 11, [1][deck:208] = 16, [1][deck:209] = 2, [1][deck:210] = 17, [1][deck:211] = 14, [1][deck:212] = 1, [1][deck:213] = 6, [1][deck:214] = 13, [1][deck:215] = 2, [1][deck:216] = 17, [1][deck:217] = 20, [1][deck:218] = 5, [1][deck:219] = 21, [1][deck:220] = 10, [1][deck:221] = 9, [1][deck:222] = 6, [1][deck:223] = 20, [1][deck:224] = 10, [1][deck:225] = 10, [1][deck:226] = 13, [1][deck:227] = 10, [1][deck:228] = 19, [1][deck:229] = 7, [1][deck:230] = 13, [1][deck:231] = 16, [1][deck:232] = 4, [1][deck:233] = 0, [1][deck:234] = 21, [1][deck:235] = 15, [1][deck:236] = 25, [1][deck:237] = 21, [1][deck:238] = 23, [1][deck:239] = 14, [1][deck:240] = 13, [1][deck:241] = 13, [1][deck:242] = 23, [1][deck:243] = 12, [1][deck:244] = 13, [1][deck:245] = 15, [1][deck:246] = 9, [1][deck:247] = 2, [1][deck:248] = 0, [1][deck:249] = 15, [1][deck:250] = 0, [1][deck:251] = 22, [1][deck:252] = 0, [1][deck:253] = 5, [1][deck:254] = 19, [1][deck:255] = 24, [1][deck:256] = 14, [1][deck:257] = 22, [1][deck:258] = 24, [1][deck:259] = 1, [1][deck:260] = 18, [1][deck:261] = 13, [1][deck:262] = 3, [1][deck:263] = 23, [1][deck:264] = 22, [1][deck:265] = 16, [1][deck:266] = 15, [1][deck:267] = 15, [1][deck:268] = 25, [1][deck:269] = 13, [1][deck:270] = 2, [1][deck:271] = 23, [1][deck:272] = 24, [1][deck:273] = 17, [1][deck:274] = 6, [1][deck:275] = 10, [1][deck:276] = 16, [1][deck:277] = 14, [1][deck:278] = 23, [1][deck:279] = 23, [1][deck:280] = 5, [1][deck:281] = 22, [1][deck:282] = 3, [1][deck:283] = 22, [1][deck:284] = 9, [1][deck:285] = 6, [1][deck:286] = 1, [1][deck:287] = 19, [1][deck:288] = 0, [1][deck:289] = 8, [1][deck:290] = 26, [1][deck:291] = 14, [1][deck:292] = 25, [1][deck:293] = 16, [1][deck:294] = 22, [1][deck:295] = 10, [1][deck:296] = 10, [1][deck:297] = 19, [1][deck:298] = 23, [1][deck:299] = 16, [1][deck:300] = 1, [1][deck:301] = 12, [1][deck:302] = 25, [1][deck:303] = 7, [1][deck:304] = 16, [1][deck:305] = 6, [1][deck:306] = 5, [1][deck:307] = 16, [1][deck:308] = 0, [1][deck:309] = 2, [1][deck:310] = 21, [1][deck:311] = 11, [1][deck:312] = 14, [1][deck:313] = 25, [1][deck:314] = 8, [1][deck:315] = 3, [1][deck:316] = 22, [1][deck:317] = 7, [1][deck:318] = 10, [1][deck:319] = 10, [1][deck:320] = 26, [1][deck:321] = 14, [1][deck:322] = 14, [1][deck:323] = 15, [1][deck:324] = 24, [1][deck:325] = 0, [1][deck:326] = 22, [1][deck:327] = 17, [1][deck:328] = 25, [1][deck:329] = 9, [1][deck:330] = 20, [1][deck:331] = 8, [1][deck:332] = 0, [1][deck:333] = 24, [1][deck:334] = 6, [1][deck:335] = 21, [1][deck:336] = 25, [1][deck:337] = 11, [1][deck:338] = 22, [1][deck:339] = 5, [1][deck:340] = 20, [1][deck:341] = 19, [1][deck:342] = 23, [1][deck:343] = 9, [1][deck:344] = 13, [1][deck:345] = 23, [1][deck:346] = 16, [1][deck:347] = 7, [1][deck:348] = 9, [1][deck:349] = 7, [1][deck:350] = 8, [1][deck:351] = 5, [1][deck:352] = 22, [1][deck:353] = 22, [1][deck:354] = 24, [1][deck:355] = 3, [1][deck:356] = 23, [1][deck:357] = 14, [1][deck:358] = 18, [1][deck:359] = 13, [1][deck:360] = 8, [1][deck:361] = 21, [1][deck:362] = 11, [1][deck:363] = 4, [1][deck:364] = 21, [1][deck:365] = 12, [1][deck:366] = 13, [1][deck:367] = 13, [1][deck:368] = 18, [1][deck:369] = 20, [1][deck:370] = 24, [1][deck:371] = 7, [1][deck:372] = 20, [1][deck:373] = 9, [1][deck:374] = 26, [1][deck:375] = 3, [1][deck:376] = 22, [1][deck:377] = 18, [1][deck:378] = 24, [1][deck:379] = 9, [1][deck:380] = 25, [1][deck:381] = 12, [1][deck:382] = 11, [1][deck:383] = 4, [1][deck:384] = 5, [1][deck:385] = 10, [1][deck:386] = 12, [1][deck:387] = 8, [1][deck:388] = 24, [1][deck:389] = 1, [1][deck:390] = 3, [1][deck:391] = 1, [1][deck:392] = 10, [1][deck:393] = 2, [1][deck:394] = 20, [1][deck:395] = 14, [1][deck:396] = 24, [1][deck:397] = 26, [1][deck:398] = 16, [1][deck:399] = 12, [1][deck:400] = 10, [1][deck:401] = 22, [1][deck:402] = 17, [1][deck:403] = 23, [1][deck:404] = 14, [1][deck:405] = 9, [1][deck:406] = 5, [1][deck:407] = 17, [1][deck:408] = 5, [1][deck:409] = 21, [1][deck:410] = 13, [1][deck:411] = 1, [1][deck:412] = 16, [1][deck:413] = 8, [1][deck:414] = 1, [1][deck:415] = 15, [1][deck:416] = 7, [1][deck:417] = 5, [1][deck:418] = 20, [1][deck:419] = 13, [1][deck:420] = 21, [1][deck:421] = 11, [1][deck:422] = 23, [1][deck:423] = 20, [1][deck:424] = 21, [1][deck:425] = 9, [1][deck:426] = 25, [1][deck:427] = 12, [1][deck:428] = 22, [1][deck:429] = 26, [1][deck:430] = 25, [1][deck:431] = 13, [1][deck:432] = 2, [1][deck:433] = 18, [1][deck:434] = 10, [1][deck:435] = 22, [1][deck:436] = 9, [1][deck:437] = 4, [1][deck:438] = 20, [1][deck:439] = 26, [1][deck:440] = 6, [1][deck:441] = 1, [1][deck:442] = 26, [1][deck:443] = 19, [1][deck:444] = 17, [1][deck:445] = 16, [1][deck:446] = 22, 
PLAYER #1, DISCARDCOUNT=519, discard[player][hand]: [1][discard: 0] = 8, [1][discard: 1] = 12, [1][discard: 2] = 6, [1][discard: 3] = 26, [1][discard: 4] = 12, [1][discard: 5] = 7, [1][discard: 6] = 6, [1][discard: 7] = 26, [1][discard: 8] = 2, [1][discard: 9] = 15, [1][discard: 10] = 26, [1][discard: 11] = 18, [1][discard: 12] = 21, [1][discard: 13] = 21, [1][discard: 14] = 25, [1][discard: 15] = 22, [1][discard: 16] = 19, [1][discard: 17] = 2, [1][discard: 18] = 21, [1][discard: 19] = 11, [1][discard: 20] = 1, [1][discard: 21] = 26, [1][discard: 22] = 11, [1][discard: 23] = 22, [1][discard: 24] = 20, [1][discard: 25] = 26, [1][discard: 26] = 5, [1][discard: 27] = 26, [1][discard: 28] = 20, [1][discard: 29] = 11, [1][discard: 30] = 7, [1][discard: 31] = 6, [1][discard: 32] = 17, [1][discard: 33] = 20, [1][discard: 34] = 17, [1][discard: 35] = 21, [1][discard: 36] = 1, [1][discard: 37] = 10, [1][discard: 38] = 3, [1][discard: 39] = 3, [1][discard: 40] = 22, [1][discard: 41] = 2, [1][discard: 42] = 25, [1][discard: 43] = 26, [1][discard: 44] = 0, [1][discard: 45] = 21, [1][discard: 46] = 6, [1][discard: 47] = 10, [1][discard: 48] = 21, [1][discard: 49] = 23, [1][discard: 50] = 17, [1][discard: 51] = 8, [1][discard: 52] = 2, [1][discard: 53] = 2, [1][discard: 54] = 9, [1][discard: 55] = 22, [1][discard: 56] = 26, [1][discard: 57] = 20, [1][discard: 58] = 9, [1][discard: 59] = 22, [1][discard: 60] = 10, [1][discard: 61] = 14, [1][discard: 62] = 4, [1][discard: 63] = 24, [1][discard: 64] = 11, [1][discard: 65] = 11, [1][discard: 66] = 15, [1][discard: 67] = 11, [1][discard: 68] = 23, [1][discard: 69] = 7, [1][discard: 70] = 24, [1][discard: 71] = 23, [1][discard: 72] = 5, [1][discard: 73] = 26, [1][discard: 74] = 26, [1][discard: 75] = 19, [1][discard: 76] = 18, [1][discard: 77] = 5, [1][discard: 78] = 15, [1][discard: 79] = 6, [1][discard: 80] = 18, [1][discard: 81] = 16, [1][discard: 82] = 10, [1][discard: 83] = 13, [1][discard: 84] = 22, [1][discard: 85] = 6, [1][discard: 86] = 9, [1][discard: 87] = 15, [1][discard: 88] = 26, [1][discard: 89] = 3, [1][discard: 90] = 3, [1][discard: 91] = 17, [1][discard: 92] = 22, [1][discard: 93] = 26, [1][discard: 94] = 21, [1][discard: 95] = 3, [1][discard: 96] = 14, [1][discard: 97] = 14, [1][discard: 98] = 18, [1][discard: 99] = 5, [1][discard: 100] = 25, [1][discard: 101] = 17, [1][discard: 102] = 18, [1][discard: 103] = 5, [1][discard: 104] = 22, [1][discard: 105] = 22, [1][discard: 106] = 22, [1][discard: 107] = 16, [1][discard: 108] = 14, [1][discard: 109] = 11, [1][discard: 110] = 9, [1][discard: 111] = 2, [1][discard: 112] = 22, [1][discard: 113] = 14, [1][discard: 114] = 1, [1][discard: 115] = 22, [1][discard: 116] = 26, [1][discard: 117] = 15, [1][discard: 118] = 23, [1][discard: 119] = 25, [1][discard: 120] = 11, [1][discard: 121] = 3, [1][discard: 122] = 8, [1][discard: 123] = 17, [1][discard: 124] = 0, [1][discard: 125] = 25, [1][discard: 126] = 19, [1][discard: 127] = 16, [1][discard: 128] = 16, [1][discard: 129] = 8, [1][discard: 130] = 16, [1][discard: 131] = 20, [1][discard: 132] = 4, [1][discard: 133] = 13, [1][discard: 134] = 3, [1][discard: 135] = 6, [1][discard: 136] = 9, [1][discard: 137] = 17, [1][discard: 138] = 25, [1][discard: 139] = 10, [1][discard: 140] = 22, [1][discard: 141] = 20, [1][discard: 142] = 12, [1][discard: 143] = 24, [1][discard: 144] = 7, [1][discard: 145] = 7, [1][discard: 146] = 1, [1][discard: 147] = 25, [1][discard: 148] = 17, [1][discard: 149] = 22, [1][discard: 150] = 21, [1][discard: 151] = 3, [1][discard: 152] = 26, [1][discard: 153] = 13, [1][discard: 154] = 11, [1][discard: 155] = 8, [1][discard: 156] = 10, [1][discard: 157] = 11, [1][discard: 158] = 9, [1][discard: 159] = 10, [1][discard: 160] = 6, [1][discard: 161] = 14, [1][discard: 162] = 16, [1][discard: 163] = 4, [1][discard: 164] = 18, [1][discard: 165] = 10, [1][discard: 166] = 0, [1][discard: 167] = 8, [1][discard: 168] = 8, [1][discard: 169] = 11, [1][discard: 170] = 0, [1][discard: 171] = 2, [1][discard: 172] = 23, [1][discard: 173] = 3, [1][discard: 174] = 2, [1][discard: 175] = 17, [1][discard: 176] = 23, [1][discard: 177] = 16, [1][discard: 178] = 14, [1][discard: 179] = 13, [1][discard: 180] = 16, [1][discard: 181] = 16, [1][discard: 182] = 26, [1][discard: 183] = 10, [1][discard: 184] = 21, [1][discard: 185] = 13, [1][discard: 186] = 12, [1][discard: 187] = 22, [1][discard: 188] = 11, [1][discard: 189] = 2, [1][discard: 190] = 1, [1][discard: 191] = 18, [1][discard: 192] = 0, [1][discard: 193] = 19, [1][discard: 194] = 2, [1][discard: 195] = 11, [1][discard: 196] = 5, [1][discard: 197] = 25, [1][discard: 198] = 18, [1][discard: 199] = 5, [1][discard: 200] = 21, [1][discard: 201] = 0, [1][discard: 202] = 9, [1][discard: 203] = 10, [1][discard: 204] = 25, [1][discard: 205] = 26, [1][discard: 206] = 12, [1][discard: 207] = 3, [1][discard: 208] = 10, [1][discard: 209] = 12, [1][discard: 210] = 12, [1][discard: 211] = 17, [1][discard: 212] = 24, [1][discard: 213] = 11, [1][discard: 214] = 15, [1][discard: 215] = 17, [1][discard: 216] = 8, [1][discard: 217] = 9, [1][discard: 218] = 0, [1][discard: 219] = 14, [1][discard: 220] = 4, [1][discard: 221] = 13, [1][discard: 222] = 3, [1][discard: 223] = 18, [1][discard: 224] = 9, [1][discard: 225] = 7, [1][discard: 226] = 5, [1][discard: 227] = 21, [1][discard: 228] = 6, [1][discard: 229] = 8, [1][discard: 230] = 10, [1][discard: 231] = 24, [1][discard: 232] = 20, [1][discard: 233] = 14, [1][discard: 234] = 15, [1][discard: 235] = 7, [1][discard: 236] = 10, [1][discard: 237] = 19, [1][discard: 238] = 21, [1][discard: 239] = 11, [1][discard: 240] = 19, [1][discard: 241] = 6, [1][discard: 242] = 22, [1][discard: 243] = 12, [1][discard: 244] = 1, [1][discard: 245] = 7, [1][discard: 246] = 16, [1][discard: 247] = 23, [1][discard: 248] = 6, [1][discard: 249] = 3, [1][discard: 250] = 14, [1][discard: 251] = 22, [1][discard: 252] = 24, [1][discard: 253] = 9, [1][discard: 254] = 6, [1][discard: 255] = 24, [1][discard: 256] = 17, [1][discard: 257] = 10, [1][discard: 258] = 16, [1][discard: 259] = 19, [1][discard: 260] = 0, [1][discard: 261] = 13, [1][discard: 262] = 20, [1][discard: 263] = 5, [1][discard: 264] = 5, [1][discard: 265] = 20, [1][discard: 266] = 4, [1][discard: 267] = 26, [1][discard: 268] = 17, [1][discard: 269] = 18, [1][discard: 270] = 19, [1][discard: 271] = 2, [1][discard: 272] = 15, [1][discard: 273] = 16, [1][discard: 274] = 25, [1][discard: 275] = 6, [1][discard: 276] = 13, [1][discard: 277] = 26, [1][discard: 278] = 16, [1][discard: 279] = 13, [1][discard: 280] = 26, [1][discard: 281] = 1, [1][discard: 282] = 18, [1][discard: 283] = 4, [1][discard: 284] = 14, [1][discard: 285] = 8, [1][discard: 286] = 23, [1][discard: 287] = 22, [1][discard: 288] = 7, [1][discard: 289] = 3, [1][discard: 290] = 16, [1][discard: 291] = 5, [1][discard: 292] = 25, [1][discard: 293] = 16, [1][discard: 294] = 24, [1][discard: 295] = 20, [1][discard: 296] = 0, [1][discard: 297] = 7, [1][discard: 298] = 0, [1][discard: 299] = 13, [1][discard: 300] = 15, [1][discard: 301] = 20, [1][discard: 302] = 11, [1][discard: 303] = 24, [1][discard: 304] = 13, [1][discard: 305] = 13, [1][discard: 306] = 5, [1][discard: 307] = 13, [1][discard: 308] = 10, [1][discard: 309] = 15, [1][discard: 310] = 1, [1][discard: 311] = 25, [1][discard: 312] = 4, [1][discard: 313] = 5, [1][discard: 314] = 24, [1][discard: 315] = 3, [1][discard: 316] = 19, [1][discard: 317] = 22, [1][discard: 318] = 10, [1][discard: 319] = 16, [1][discard: 320] = 25, [1][discard: 321] = 23, [1][discard: 322] = 24, [1][discard: 323] = 23, [1][discard: 324] = 21, [1][discard: 325] = 16, [1][discard: 326] = 21, [1][discard: 327] = 12, [1][discard: 328] = 5, [1][discard: 329] = 23, [1][discard: 330] = 2, [1][discard: 331] = 8, [1][discard: 332] = 22, [1][discard: 333] = 24, [1][discard: 334] = 14, [1][discard: 335] = 8, [1][discard: 336] = 14, [1][discard: 337] = 5, [1][discard: 338] = 4, [1][discard: 339] = 6, [1][discard: 340] = 7, [1][discard: 341] = 6, [1][discard: 342] = 9, [1][discard: 343] = 25, [1][discard: 344] = 10, [1][discard: 345] = 18, [1][discard: 346] = 22, [1][discard: 347] = 18, [1][discard: 348] = 15, [1][discard: 349] = 12, [1][discard: 350] = 6, [1][discard: 351] = 20, [1][discard: 352] = 21, [1][discard: 353] = 13, [1][discard: 354] = 16, [1][discard: 355] = 4, [1][discard: 356] = 5, [1][discard: 357] = 5, [1][discard: 358] = 14, [1][discard: 359] = 8, [1][discard: 360] = 4, [1][discard: 361] = 22, [1][discard: 362] = 22, [1][discard: 363] = 25, [1][discard: 364] = 20, [1][discard: 365] = 25, [1][discard: 366] = 1, [1][discard: 367] = 11, [1][discard: 368] = 5, [1][discard: 369] = 0, [1][discard: 370] = 18, [1][discard: 371] = 21, [1][discard: 372] = 1, [1][discard: 373] = 14, [1][discard: 374] = 20, [1][discard: 375] = 19, [1][discard: 376] = 10, [1][discard: 377] = 18, [1][discard: 378] = 6, [1][discard: 379] = 11, [1][discard: 380] = 1, [1][discard: 381] = 5, [1][discard: 382] = 20, [1][discard: 383] = 17, [1][discard: 384] = 3, [1][discard: 385] = 19, [1][discard: 386] = 23, [1][discard: 387] = 10, [1][discard: 388] = 25, [1][discard: 389] = 5, [1][discard: 390] = 14, [1][discard: 391] = 8, [1][discard: 392] = 20, [1][discard: 393] = 16, [1][discard: 394] = 15, [1][discard: 395] = 17, [1][discard: 396] = 15, [1][discard: 397] = 4, [1][discard: 398] = 14, [1][discard: 399] = 5, [1][discard: 400] = 14, [1][discard: 401] = 1, [1][discard: 402] = 26, [1][discard: 403] = 12, [1][discard: 404] = 22, [1][discard: 405] = 9, [1][discard: 406] = 6, [1][discard: 407] = 4, [1][discard: 408] = 11, [1][discard: 409] = 3, [1][discard: 410] = 13, [1][discard: 411] = 23, [1][discard: 412] = 13, [1][discard: 413] = 9, [1][discard: 414] = 12, [1][discard: 415] = 22, [1][discard: 416] = 16, [1][discard: 417] = 22, [1][discard: 418] = 0, [1][discard: 419] = 18, [1][discard: 420] = 5, [1][discard: 421] = 26, [1][discard: 422] = 15, [1][discard: 423] = 25, [1][discard: 424] = 20, [1][discard: 425] = 8, [1][discard: 426] = 21, [1][discard: 427] = 9, [1][discard: 428] = 14, [1][discard: 429] = 16, [1][discard: 430] = 12, [1][discard: 431] = 5, [1][discard: 432] = 1, [1][discard: 433] = 20, [1][discard: 434] = 4, [1][discard: 435] = 2, [1][discard: 436] = 21, [1][discard: 437] = 22, [1][discard: 438] = 15, [1][discard: 439] = 0, [1][discard: 440] = 8, [1][discard: 441] = 13, [1][discard: 442] = 23, [1][discard: 443] = 3, [1][discard: 444] = 12, [1][discard: 445] = 2, [1][discard: 446] = 5, [1][discard: 447] = 18, [1][discard: 448] = 4, [1][discard: 449] = 14, [1][discard: 450] = 2, [1][discard: 451] = 17, [1][discard: 452] = 23, [1][discard: 453] = 20, [1][discard: 454] = 16, [1][discard: 455] = 18, [1][discard: 456] = 1, [1][discard: 457] = 1, [1][discard: 458] = 24, [1][discard: 459] = 3, [1][discard: 460] = 7, [1][discard: 461] = 20, [1][discard: 462] = 4, [1][discard: 463] = 16, [1][discard: 464] = 25, [1][discard: 465] = 4, [1][discard: 466] = 23, [1][discard: 467] = 6, [1][discard: 468] = 7, [1][discard: 469] = 7, [1][discard: 470] = 19, [1][discard: 471] = 4, [1][discard: 472] = 6, [1][discard: 473] = 19, [1][discard: 474] = 4, [1][discard: 475] = 8, [1][discard: 476] = 21, [1][discard: 477] = 1, [1][discard: 478] = 4, [1][discard: 479] = 5, [1][discard: 480] = 20, [1][discard: 481] = 6, [1][discard: 482] = 20, [1][discard: 483] = 15, [1][discard: 484] = 4, [1][discard: 485] = 10, [1][discard: 486] = 13, [1][discard: 487] = 25, [1][discard: 488] = 23, [1][discard: 489] = 24, [1][discard: 490] = 18, [1][discard: 491] = 14, [1][discard: 492] = 17, [1][discard: 493] = 13, [1][discard: 494] = 17, [1][discard: 495] = 2, [1][discard: 496] = 22, [1][discard: 497] = 17, [1][discard: 498] = 13, [1][discard: 499] = 19, [1][discard: 500] = 1, [1][discard: 501] = 8, [1][discard: 502] = 15, [1][discard: 503] = 24, [1][discard: 504] = 16, [1][discard: 505] = 17, [1][discard: 506] = 1, [1][discard: 507] = 12, [1][discard: 508] = 8, [1][discard: 509] = 9, [1][discard: 510] = 24, [1][discard: 511] = 15, [1][discard: 512] = 23, [1][discard: 513] = 21, [1][discard: 514] = 18, [1][discard: 515] = 24, [1][discard: 516] = 15, [1][discard: 517] = 20, [1][discard: 518] = 7, 
---------------------
PLAYER #2, HANDCOUNT=0, hand[player][hand]: 
PLAYER #2, DECKCOUNT=10, deck[player][hand]: [2][deck:0] = 4, [2][deck:1] = 4, [2][deck:2] = 4, [2][deck:3] = 1, [2][deck:4] = 1, [2][deck:5] = 1, [2][deck:6] = 4, [2][deck:7] = 4, [2][deck:8] = 4, [2][deck:9] = 4, 
PLAYER #2, DISCARDCOUNT=0, discard[player][hand]: 
--END PRINTING GAME STATE -------------------

adventurer test - iteration 24 -> FAILED tests
*************** ITERATION # 25 ***************  
NOTE Player 2: found 57 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 19, supplyTotalPre: 17
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 19
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 25 -> FAILED tests
*************** ITERATION # 26 ***************  
NOTE Player 0: did NOT find treasure in player's deck
NOTE Player 0: found 17 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 160, supplyTotalPre: 158
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 160
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 26 -> FAILED tests
*************** ITERATION # 27 ***************  
NOTE Player 0: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 84, supplyTotalPre: 82
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 84
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 27 -> FAILED tests
*************** ITERATION # 28 ***************  
NOTE Player 0: found 73 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 62, supplyTotalPre: 60
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 62
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 28 -> FAILED tests
*************** ITERATION # 29 ***************  
NOTE Player 1: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 21, supplyTotalPre: 19
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 21
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 29 -> FAILED tests
*************** ITERATION # 30 ***************  
NOTE Player 0: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 144, supplyTotalPre: 142
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 144
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 30 -> FAILED tests
*************** ITERATION # 31 ***************  
NOTE Player 0: found 62 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 379, supplyTotalPre: 377
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 379
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 31 -> FAILED tests
*************** ITERATION # 32 ***************  
NOTE Player 2: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 71, supplyTotalPre: 69
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 71
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 32 -> FAILED tests
*************** ITERATION # 33 ***************  
NOTE Player 0: found 22 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 471, supplyTotalPre: 469
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 471
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 33 -> FAILED tests
*************** ITERATION # 34 ***************  
NOTE Player 2: found 86 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 205, supplyTotalPre: 203
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 205
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 34 -> FAILED tests
*************** ITERATION # 35 ***************  
NOTE Player 1: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 214, supplyTotalPre: 212
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 214
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 35 -> FAILED tests
*************** ITERATION # 36 ***************  
NOTE Player 1: found 33 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 372, supplyTotalPre: 370
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 372
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 36 -> FAILED tests
*************** ITERATION # 37 ***************  
NOTE Player 0: found 59 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 56, supplyTotalPre: 54
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 56
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 37 -> FAILED tests
*************** ITERATION # 38 ***************  
NOTE Player 2: found 31 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 63, supplyTotalPre: 61
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 63
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 38 -> FAILED tests
*************** ITERATION # 39 ***************  
NOTE Player 0: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 232, supplyTotalPre: 230
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 232
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 39 -> FAILED tests
*************** ITERATION # 40 ***************  
NOTE Player 1: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 202, supplyTotalPre: 200
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 202
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 40 -> FAILED tests
*************** ITERATION # 41 ***************  
NOTE Player 0: found 17 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 218, supplyTotalPre: 216
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 218
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 41 -> FAILED tests
*************** ITERATION # 42 ***************  
NOTE Player 2: found 42 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 214, supplyTotalPre: 212
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 214
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 42 -> FAILED tests
*************** ITERATION # 43 ***************  
NOTE Player 0: found 54 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 74, supplyTotalPre: 72
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 74
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 43 -> FAILED tests
*************** ITERATION # 44 ***************  
NOTE Player 0: found 99 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 159, supplyTotalPre: 157
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 159
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 44 -> FAILED tests
*************** ITERATION # 45 ***************  
NOTE Player 0: found 88 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 94, supplyTotalPre: 92
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 94
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 45 -> FAILED tests
*************** ITERATION # 46 ***************  
NOTE Player 2: found 85 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 243, supplyTotalPre: 241
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 243
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 46 -> FAILED tests
*************** ITERATION # 47 ***************  
NOTE Player 1: found 57 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 277, supplyTotalPre: 275
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 277
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 47 -> FAILED tests
*************** ITERATION # 48 ***************  
NOTE Player 1: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 256, supplyTotalPre: 254
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 256
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 48 -> FAILED tests
*************** ITERATION # 49 ***************  
NOTE Player 1: found 98 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 403, supplyTotalPre: 401
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 403
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 49 -> FAILED tests
*************** ITERATION # 50 ***************  
NOTE Player 2: found 103 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 466, supplyTotalPre: 464
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 466
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 50 -> FAILED tests
*************** ITERATION # 51 ***************  
NOTE Player 0: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 332, supplyTotalPre: 330
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 332
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 51 -> FAILED tests
*************** ITERATION # 52 ***************  
NOTE Player 1: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 171, supplyTotalPre: 169
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 171
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 52 -> FAILED tests
*************** ITERATION # 53 ***************  
NOTE Player 0: found 48 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 209, supplyTotalPre: 207
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 209
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 53 -> FAILED tests
*************** ITERATION # 54 ***************  
NOTE Player 0: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 427, supplyTotalPre: 425
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 427
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 54 -> FAILED tests
*************** ITERATION # 55 ***************  
NOTE Player 1: found 72 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 28, supplyTotalPre: 26
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 28
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 55 -> FAILED tests
*************** ITERATION # 56 ***************  
NOTE Player 1: found 12 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 417, supplyTotalPre: 415
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 417
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 56 -> FAILED tests
*************** ITERATION # 57 ***************  
NOTE Player 1: found 38 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 372, supplyTotalPre: 370
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 372
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 57 -> FAILED tests
*************** ITERATION # 58 ***************  
NOTE Player 0: did NOT find treasure in player's discard
NOTE Player 0: found 38 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 291, supplyTotalPre: 289
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 291
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 58 -> FAILED tests
*************** ITERATION # 59 ***************  
NOTE Player 2: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 241, supplyTotalPre: 239
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 241
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 59 -> FAILED tests
*************** ITERATION # 60 ***************  
NOTE Player 0: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 24, supplyTotalPre: 22
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 24
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 60 -> FAILED tests
*************** ITERATION # 61 ***************  
NOTE Player 1: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 269, supplyTotalPre: 267
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 269
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 61 -> FAILED tests
*************** ITERATION # 62 ***************  
NOTE Player 0: found 80 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 431, supplyTotalPre: 429
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 431
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 62 -> FAILED tests
*************** ITERATION # 63 ***************  
NOTE Player 2: found 35 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 335, supplyTotalPre: 333
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 335
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 63 -> FAILED tests
*************** ITERATION # 64 ***************  
NOTE Player 0: found 33 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 271, supplyTotalPre: 269
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 271
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 64 -> FAILED tests
*************** ITERATION # 65 ***************  
NOTE Player 2: found 97 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 34, supplyTotalPre: 32
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 34
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 65 -> FAILED tests
*************** ITERATION # 66 ***************  
NOTE Player 1: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 307, supplyTotalPre: 305
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 307
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 66 -> FAILED tests
*************** ITERATION # 67 ***************  
NOTE Player 0: found 40 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 112, supplyTotalPre: 110
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 112
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 67 -> FAILED tests
*************** ITERATION # 68 ***************  
NOTE Player 1: did NOT find treasure in player's deck
NOTE Player 1: found 3 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 6, supplyTotalPre: 4
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 6
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 68 -> FAILED tests
*************** ITERATION # 69 ***************  
NOTE Player 2: found 78 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 78, supplyTotalPre: 76
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 78
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 69 -> FAILED tests
*************** ITERATION # 70 ***************  
NOTE Player 2: found 34 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 313, supplyTotalPre: 311
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 313
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 70 -> FAILED tests
*************** ITERATION # 71 ***************  
NOTE Player 2: found 47 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 276, supplyTotalPre: 274
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 276
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 71 -> FAILED tests
*************** ITERATION # 72 ***************  
NOTE Player 0: found 93 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 28, supplyTotalPre: 26
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 28
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 72 -> FAILED tests
*************** ITERATION # 73 ***************  
NOTE Player 0: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 461, supplyTotalPre: 459
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 461
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 73 -> FAILED tests
*************** ITERATION # 74 ***************  
NOTE Player 1: found 22 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 312, supplyTotalPre: 310
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 312
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 74 -> FAILED tests
*************** ITERATION # 75 ***************  
NOTE Player 1: found 98 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 280, supplyTotalPre: 278
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 280
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 75 -> FAILED tests
*************** ITERATION # 76 ***************  
NOTE Player 1: found 64 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 12, supplyTotalPre: 10
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 12
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 76 -> FAILED tests
*************** ITERATION # 77 ***************  
NOTE Player 1: found 75 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 106, supplyTotalPre: 104
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 106
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 77 -> FAILED tests
*************** ITERATION # 78 ***************  
NOTE Player 1: found 22 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 174, supplyTotalPre: 172
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 174
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 78 -> FAILED tests
*************** ITERATION # 79 ***************  
NOTE Player 1: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 363, supplyTotalPre: 361
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 363
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 79 -> FAILED tests
*************** ITERATION # 80 ***************  
NOTE Player 0: found 69 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 192, supplyTotalPre: 190
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 192
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 80 -> FAILED tests
*************** ITERATION # 81 ***************  
NOTE Player 0: found 20 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 212, supplyTotalPre: 210
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 212
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 81 -> FAILED tests
*************** ITERATION # 82 ***************  
NOTE Player 0: found 62 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 106, supplyTotalPre: 104
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 106
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 82 -> FAILED tests
*************** ITERATION # 83 ***************  
NOTE Player 1: found 69 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 293, supplyTotalPre: 291
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 293
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 83 -> FAILED tests
*************** ITERATION # 84 ***************  
NOTE Player 1: found 31 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 233, supplyTotalPre: 231
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 233
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 84 -> FAILED tests
*************** ITERATION # 85 ***************  
NOTE Player 2: found 27 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 179, supplyTotalPre: 177
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 179
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 85 -> FAILED tests
*************** ITERATION # 86 ***************  
NOTE Player 1: did NOT find treasure in player's deck
NOTE Player 1: found 35 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 60, supplyTotalPre: 58
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 60
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 86 -> FAILED tests
*************** ITERATION # 87 ***************  
NOTE Player 0: found 73 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 375, supplyTotalPre: 373
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 375
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 87 -> FAILED tests
*************** ITERATION # 88 ***************  
NOTE Player 0: found 72 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 471, supplyTotalPre: 469
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 471
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 88 -> FAILED tests
*************** ITERATION # 89 ***************  
NOTE Player 0: found 59 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 45, supplyTotalPre: 43
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 45
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 89 -> FAILED tests
*************** ITERATION # 90 ***************  
NOTE Player 2: found 47 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 209, supplyTotalPre: 207
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 209
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 90 -> FAILED tests
*************** ITERATION # 91 ***************  
NOTE Player 2: found 69 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 241, supplyTotalPre: 239
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 241
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 91 -> FAILED tests
*************** ITERATION # 92 ***************  
NOTE Player 0: found 82 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 164, supplyTotalPre: 162
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 164
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 92 -> FAILED tests
*************** ITERATION # 93 ***************  
NOTE Player 1: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 464, supplyTotalPre: 462
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 464
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 93 -> FAILED tests
*************** ITERATION # 94 ***************  
NOTE Player 0: found 91 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 390, supplyTotalPre: 388
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 390
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 94 -> FAILED tests
*************** ITERATION # 95 ***************  
NOTE Player 1: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 394, supplyTotalPre: 392
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 394
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 95 -> FAILED tests
*************** ITERATION # 96 ***************  
NOTE Player 1: found 15 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 227, supplyTotalPre: 225
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 227
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 96 -> FAILED tests
*************** ITERATION # 97 ***************  
NOTE Player 0: found 13 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 346, supplyTotalPre: 344
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 346
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 97 -> FAILED tests
*************** ITERATION # 98 ***************  
NOTE Player 2: found 43 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 290, supplyTotalPre: 288
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 290
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 98 -> FAILED tests
*************** ITERATION # 99 ***************  
NOTE Player 2: found 73 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 168, supplyTotalPre: 166
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 168
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 99 -> FAILED tests
*************** ITERATION # 100 ***************  
NOTE Player 1: found 16 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 368, supplyTotalPre: 366
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 368
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 100 -> FAILED tests
*************** ITERATION # 101 ***************  
NOTE Player 2: found 18 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 190, supplyTotalPre: 188
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 190
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 101 -> FAILED tests
*************** ITERATION # 102 ***************  
NOTE Player 1: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 446, supplyTotalPre: 444
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 446
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 102 -> FAILED tests
*************** ITERATION # 103 ***************  
NOTE Player 1: found 79 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 166, supplyTotalPre: 164
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 166
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 103 -> FAILED tests
*************** ITERATION # 104 ***************  
NOTE Player 0: found 23 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 464, supplyTotalPre: 462
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 464
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 104 -> FAILED tests
*************** ITERATION # 105 ***************  
NOTE Player 0: found 16 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 45, supplyTotalPre: 43
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 45
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 105 -> FAILED tests
*************** ITERATION # 106 ***************  
NOTE Player 2: found 101 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 185, supplyTotalPre: 183
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 185
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 106 -> FAILED tests
*************** ITERATION # 107 ***************  
NOTE Player 2: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 293, supplyTotalPre: 291
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 293
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 107 -> FAILED tests
*************** ITERATION # 108 ***************  
NOTE Player 2: found 76 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 209, supplyTotalPre: 207
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 209
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 108 -> FAILED tests
*************** ITERATION # 109 ***************  
NOTE Player 0: found 44 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 207, supplyTotalPre: 205
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 207
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 109 -> FAILED tests
*************** ITERATION # 110 ***************  
NOTE Player 0: found 45 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 488, supplyTotalPre: 486
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 488
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 110 -> FAILED tests
*************** ITERATION # 111 ***************  
NOTE Player 2: found 48 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 357, supplyTotalPre: 355
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 357
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 111 -> FAILED tests
*************** ITERATION # 112 ***************  
NOTE Player 1: found 85 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 111, supplyTotalPre: 109
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 111
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 112 -> FAILED tests
*************** ITERATION # 113 ***************  
NOTE Player 0: found 43 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 314, supplyTotalPre: 312
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 314
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 113 -> FAILED tests
*************** ITERATION # 114 ***************  
NOTE Player 2: found 82 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 456, supplyTotalPre: 454
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 456
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 114 -> FAILED tests
*************** ITERATION # 115 ***************  
NOTE Player 0: found 26 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 32, supplyTotalPre: 30
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 32
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 115 -> FAILED tests
*************** ITERATION # 116 ***************  
NOTE Player 0: found 34 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 218, supplyTotalPre: 216
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 218
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 116 -> FAILED tests
*************** ITERATION # 117 ***************  
NOTE Player 1: found 79 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 181, supplyTotalPre: 179
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 181
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 117 -> FAILED tests
*************** ITERATION # 118 ***************  
NOTE Player 0: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 326, supplyTotalPre: 324
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 326
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 118 -> FAILED tests
*************** ITERATION # 119 ***************  
NOTE Player 1: found 44 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 240, supplyTotalPre: 238
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 240
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 119 -> FAILED tests
*************** ITERATION # 120 ***************  
NOTE Player 1: did NOT find treasure in player's discard
NOTE Player 1: found 35 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 454, supplyTotalPre: 452
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 454
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 120 -> FAILED tests
*************** ITERATION # 121 ***************  
NOTE Player 1: found 45 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 271, supplyTotalPre: 269
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 271
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 121 -> FAILED tests
*************** ITERATION # 122 ***************  
NOTE Player 2: found 23 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 61, supplyTotalPre: 59
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 61
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 122 -> FAILED tests
*************** ITERATION # 123 ***************  
NOTE Player 1: found 78 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 378, supplyTotalPre: 376
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 378
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 123 -> FAILED tests
*************** ITERATION # 124 ***************  
NOTE Player 0: found 27 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 49, supplyTotalPre: 47
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 49
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 124 -> FAILED tests
*************** ITERATION # 125 ***************  
NOTE Player 1: found 54 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 30, supplyTotalPre: 28
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 30
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 125 -> FAILED tests
*************** ITERATION # 126 ***************  
NOTE Player 2: found 71 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 426, supplyTotalPre: 424
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 426
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 126 -> FAILED tests
*************** ITERATION # 127 ***************  
NOTE Player 0: found 79 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 103, supplyTotalPre: 101
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 103
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 127 -> FAILED tests
*************** ITERATION # 128 ***************  
NOTE Player 0: found 103 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 84, supplyTotalPre: 82
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 84
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 128 -> FAILED tests
*************** ITERATION # 129 ***************  
NOTE Player 0: found 47 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 501, supplyTotalPre: 499
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 501
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 129 -> FAILED tests
*************** ITERATION # 130 ***************  
NOTE Player 2: found 42 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 55, supplyTotalPre: 53
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 55
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 130 -> FAILED tests
*************** ITERATION # 131 ***************  
NOTE Player 1: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 42, supplyTotalPre: 40
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 42
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 131 -> FAILED tests
*************** ITERATION # 132 ***************  
NOTE Player 0: found 107 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 195, supplyTotalPre: 193
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 195
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 132 -> FAILED tests
*************** ITERATION # 133 ***************  
NOTE Player 2: found 92 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 297, supplyTotalPre: 295
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 297
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 133 -> FAILED tests
*************** ITERATION # 134 ***************  
NOTE Player 0: did NOT find treasure in player's discard
NOTE Player 0: found 43 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 37, supplyTotalPre: 35
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 37
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 134 -> FAILED tests
*************** ITERATION # 135 ***************  
NOTE Player 0: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 382, supplyTotalPre: 380
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 382
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 135 -> FAILED tests
*************** ITERATION # 136 ***************  
NOTE Player 2: found 28 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 155, supplyTotalPre: 153
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 155
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 136 -> FAILED tests
*************** ITERATION # 137 ***************  
NOTE Player 1: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 189, supplyTotalPre: 187
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 189
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 137 -> FAILED tests
*************** ITERATION # 138 ***************  
NOTE Player 0: found 77 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 227, supplyTotalPre: 225
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 227
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 138 -> FAILED tests
*************** ITERATION # 139 ***************  
NOTE Player 2: found 75 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 73, supplyTotalPre: 71
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 73
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 139 -> FAILED tests
*************** ITERATION # 140 ***************  
NOTE Player 1: found 52 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 287, supplyTotalPre: 285
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 287
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 140 -> FAILED tests
*************** ITERATION # 141 ***************  
NOTE Player 2: found 87 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 64, supplyTotalPre: 62
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 64
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 141 -> FAILED tests
*************** ITERATION # 142 ***************  
NOTE Player 0: found 112 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 157, supplyTotalPre: 155
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 157
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 142 -> FAILED tests
*************** ITERATION # 143 ***************  
NOTE Player 2: found 37 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 368, supplyTotalPre: 366
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 368
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 143 -> FAILED tests
*************** ITERATION # 144 ***************  
NOTE Player 2: found 108 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 20, supplyTotalPre: 18
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 20
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 144 -> FAILED tests
*************** ITERATION # 145 ***************  
NOTE Player 1: found 52 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 167, supplyTotalPre: 165
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 167
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 145 -> FAILED tests
*************** ITERATION # 146 ***************  
NOTE Player 2: found 85 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 434, supplyTotalPre: 432
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 434
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 146 -> FAILED tests
*************** ITERATION # 147 ***************  
NOTE Player 2: found 48 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 62, supplyTotalPre: 60
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 62
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 147 -> FAILED tests
*************** ITERATION # 148 ***************  
NOTE Player 2: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 185, supplyTotalPre: 183
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 185
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 148 -> FAILED tests
*************** ITERATION # 149 ***************  
NOTE Player 1: found 77 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 271, supplyTotalPre: 269
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 271
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 149 -> FAILED tests
*************** ITERATION # 150 ***************  
NOTE Player 2: found 64 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 167, supplyTotalPre: 165
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 167
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 150 -> FAILED tests
*************** ITERATION # 151 ***************  
NOTE Player 1: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 13, supplyTotalPre: 11
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 13
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 151 -> FAILED tests
*************** ITERATION # 152 ***************  
NOTE Player 2: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 469, supplyTotalPre: 467
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 469
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 152 -> FAILED tests
*************** ITERATION # 153 ***************  
NOTE Player 0: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 421, supplyTotalPre: 419
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 421
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 153 -> FAILED tests
*************** ITERATION # 154 ***************  
NOTE Player 0: found 29 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 77, supplyTotalPre: 75
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 77
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 154 -> FAILED tests
*************** ITERATION # 155 ***************  
NOTE Player 2: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 478, supplyTotalPre: 476
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 478
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 155 -> FAILED tests
*************** ITERATION # 156 ***************  
NOTE Player 1: found 86 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 490, supplyTotalPre: 488
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 490
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 156 -> FAILED tests
*************** ITERATION # 157 ***************  
NOTE Player 0: found 73 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 350, supplyTotalPre: 348
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 350
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 157 -> FAILED tests
*************** ITERATION # 158 ***************  
NOTE Player 1: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 479, supplyTotalPre: 477
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 479
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 158 -> FAILED tests
*************** ITERATION # 159 ***************  
NOTE Player 0: found 48 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 208, supplyTotalPre: 206
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 208
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 159 -> FAILED tests
*************** ITERATION # 160 ***************  
NOTE Player 1: found 10 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 169, supplyTotalPre: 167
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 169
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 160 -> FAILED tests
*************** ITERATION # 161 ***************  
NOTE Player 0: found 44 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 290, supplyTotalPre: 288
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 290
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 161 -> FAILED tests
*************** ITERATION # 162 ***************  
NOTE Player 0: found 49 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 95, supplyTotalPre: 93
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 95
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 162 -> FAILED tests
*************** ITERATION # 163 ***************  
NOTE Player 0: found 36 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 244, supplyTotalPre: 242
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 244
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 163 -> FAILED tests
*************** ITERATION # 164 ***************  
NOTE Player 0: did NOT find treasure in player's deck
NOTE Player 0: found 44 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 319, supplyTotalPre: 317
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 319
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 164 -> FAILED tests
*************** ITERATION # 165 ***************  
NOTE Player 0: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 464, supplyTotalPre: 462
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 464
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 165 -> FAILED tests
*************** ITERATION # 166 ***************  
NOTE Player 0: found 84 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 55, supplyTotalPre: 53
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 55
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 166 -> FAILED tests
*************** ITERATION # 167 ***************  
NOTE Player 0: found 56 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 472, supplyTotalPre: 470
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 472
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 167 -> FAILED tests
*************** ITERATION # 168 ***************  
NOTE Player 1: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 111, supplyTotalPre: 109
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 111
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 168 -> FAILED tests
*************** ITERATION # 169 ***************  
NOTE Player 1: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 157, supplyTotalPre: 155
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 157
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 169 -> FAILED tests
*************** ITERATION # 170 ***************  
NOTE Player 0: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 312, supplyTotalPre: 310
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 312
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 170 -> FAILED tests
*************** ITERATION # 171 ***************  
NOTE Player 2: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 48, supplyTotalPre: 46
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 48
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 171 -> FAILED tests
*************** ITERATION # 172 ***************  
NOTE Player 1: found 60 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 348, supplyTotalPre: 346
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 348
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 172 -> FAILED tests
*************** ITERATION # 173 ***************  
NOTE Player 1: found 26 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 172, supplyTotalPre: 170
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 172
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 173 -> FAILED tests
*************** ITERATION # 174 ***************  
NOTE Player 2: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 342, supplyTotalPre: 340
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 342
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 174 -> FAILED tests
*************** ITERATION # 175 ***************  
NOTE Player 2: found 36 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 490, supplyTotalPre: 488
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 490
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 175 -> FAILED tests
*************** ITERATION # 176 ***************  
NOTE Player 2: found 63 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 381, supplyTotalPre: 379
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 381
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 176 -> FAILED tests
*************** ITERATION # 177 ***************  
NOTE Player 2: found 48 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 323, supplyTotalPre: 321
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 323
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 177 -> FAILED tests
*************** ITERATION # 178 ***************  
NOTE Player 2: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 235, supplyTotalPre: 233
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 235
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 178 -> FAILED tests
*************** ITERATION # 179 ***************  
NOTE Player 1: found 73 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 124, supplyTotalPre: 122
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 124
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 179 -> FAILED tests
*************** ITERATION # 180 ***************  
NOTE Player 2: found 28 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 51, supplyTotalPre: 49
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 51
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 180 -> FAILED tests
*************** ITERATION # 181 ***************  
NOTE Player 0: did NOT find treasure in player's discard
NOTE Player 0: found 15 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 226, supplyTotalPre: 224
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 226
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 181 -> FAILED tests
*************** ITERATION # 182 ***************  
NOTE Player 1: found 20 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 284, supplyTotalPre: 282
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 284
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 182 -> FAILED tests
*************** ITERATION # 183 ***************  
NOTE Player 1: found 21 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 151, supplyTotalPre: 149
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 151
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 183 -> FAILED tests
*************** ITERATION # 184 ***************  
NOTE Player 2: found 13 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 476, supplyTotalPre: 474
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 476
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 184 -> FAILED tests
*************** ITERATION # 185 ***************  
NOTE Player 1: found 43 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 321, supplyTotalPre: 319
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 321
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 185 -> FAILED tests
*************** ITERATION # 186 ***************  
NOTE Player 2: found 36 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 422, supplyTotalPre: 420
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 422
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 186 -> FAILED tests
*************** ITERATION # 187 ***************  
NOTE Player 0: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 317, supplyTotalPre: 315
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 317
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 187 -> FAILED tests
*************** ITERATION # 188 ***************  
NOTE Player 1: found 114 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 96, supplyTotalPre: 94
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 96
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 188 -> FAILED tests
*************** ITERATION # 189 ***************  
NOTE Player 1: found 77 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 63, supplyTotalPre: 61
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 63
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 189 -> FAILED tests
*************** ITERATION # 190 ***************  
NOTE Player 0: found 95 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 365, supplyTotalPre: 363
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 365
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 190 -> FAILED tests
*************** ITERATION # 191 ***************  
NOTE Player 2: found 11 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 252, supplyTotalPre: 250
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 252
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 191 -> FAILED tests
*************** ITERATION # 192 ***************  
NOTE Player 2: found 21 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 390, supplyTotalPre: 388
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 390
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 192 -> FAILED tests
*************** ITERATION # 193 ***************  
NOTE Player 1: found 57 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 353, supplyTotalPre: 351
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 353
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 193 -> FAILED tests
*************** ITERATION # 194 ***************  
NOTE Player 2: found 37 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 159, supplyTotalPre: 157
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 159
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 194 -> FAILED tests
*************** ITERATION # 195 ***************  
NOTE Player 1: found 47 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 410, supplyTotalPre: 408
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 410
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 195 -> FAILED tests
*************** ITERATION # 196 ***************  
NOTE Player 2: found 67 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 327, supplyTotalPre: 325
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 327
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 196 -> FAILED tests
*************** ITERATION # 197 ***************  
NOTE Player 2: found 52 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 316, supplyTotalPre: 314
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 316
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 197 -> FAILED tests
*************** ITERATION # 198 ***************  
NOTE Player 1: found 24 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 5, supplyTotalPre: 3
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 5
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 198 -> FAILED tests
*************** ITERATION # 199 ***************  
NOTE Player 0: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 186, supplyTotalPre: 184
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 186
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 199 -> FAILED tests
*************** ITERATION # 200 ***************  
NOTE Player 0: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 492, supplyTotalPre: 490
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 492
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 200 -> FAILED tests
*************** ITERATION # 201 ***************  
NOTE Player 0: found 101 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 275, supplyTotalPre: 273
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 275
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 201 -> FAILED tests
*************** ITERATION # 202 ***************  
NOTE Player 1: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 197, supplyTotalPre: 195
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 197
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 202 -> FAILED tests
*************** ITERATION # 203 ***************  
NOTE Player 2: found 57 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 450, supplyTotalPre: 448
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 450
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 203 -> FAILED tests
*************** ITERATION # 204 ***************  
NOTE Player 0: found 78 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 246, supplyTotalPre: 244
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 246
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 204 -> FAILED tests
*************** ITERATION # 205 ***************  
NOTE Player 1: did NOT find treasure in player's deck
NOTE Player 1: found 6 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 282, supplyTotalPre: 280
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 282
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 205 -> FAILED tests
*************** ITERATION # 206 ***************  
NOTE Player 2: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 213, supplyTotalPre: 211
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 213
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 206 -> FAILED tests
*************** ITERATION # 207 ***************  
NOTE Player 2: found 76 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 230, supplyTotalPre: 228
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 230
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 207 -> FAILED tests
*************** ITERATION # 208 ***************  
NOTE Player 1: found 28 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 85, supplyTotalPre: 83
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 85
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 208 -> FAILED tests
*************** ITERATION # 209 ***************  
NOTE Player 0: found 57 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 116, supplyTotalPre: 114
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 116
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 209 -> FAILED tests
*************** ITERATION # 210 ***************  
NOTE Player 1: found 23 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 98, supplyTotalPre: 96
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 98
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 210 -> FAILED tests
*************** ITERATION # 211 ***************  
NOTE Player 0: found 54 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 304, supplyTotalPre: 302
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 304
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 211 -> FAILED tests
*************** ITERATION # 212 ***************  
NOTE Player 0: found 17 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 351, supplyTotalPre: 349
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 351
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 212 -> FAILED tests
*************** ITERATION # 213 ***************  
NOTE Player 1: found 123 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 393, supplyTotalPre: 391
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 393
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 213 -> FAILED tests
*************** ITERATION # 214 ***************  
NOTE Player 0: found 66 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 166, supplyTotalPre: 164
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 166
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 214 -> FAILED tests
*************** ITERATION # 215 ***************  
NOTE Player 1: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 100, supplyTotalPre: 98
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 100
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 215 -> FAILED tests
*************** ITERATION # 216 ***************  
NOTE Player 0: found 65 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 133, supplyTotalPre: 131
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 133
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 216 -> FAILED tests
*************** ITERATION # 217 ***************  
NOTE Player 1: found 93 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 22, supplyTotalPre: 20
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 22
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 217 -> FAILED tests
*************** ITERATION # 218 ***************  
NOTE Player 0: found 99 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 278, supplyTotalPre: 276
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 278
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 218 -> FAILED tests
*************** ITERATION # 219 ***************  
NOTE Player 1: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 463, supplyTotalPre: 461
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 463
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 219 -> FAILED tests
*************** ITERATION # 220 ***************  
NOTE Player 1: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 414, supplyTotalPre: 412
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 414
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 220 -> FAILED tests
*************** ITERATION # 221 ***************  
NOTE Player 0: did NOT find treasure in player's deck
NOTE Player 0: found 22 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 332, supplyTotalPre: 330
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 332
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 221 -> FAILED tests
*************** ITERATION # 222 ***************  
NOTE Player 2: found 38 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 223, supplyTotalPre: 221
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 223
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 222 -> FAILED tests
*************** ITERATION # 223 ***************  
NOTE Player 1: found 76 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 435, supplyTotalPre: 433
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 435
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 223 -> FAILED tests
*************** ITERATION # 224 ***************  
NOTE Player 1: found 54 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 278, supplyTotalPre: 276
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 278
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 224 -> FAILED tests
*************** ITERATION # 225 ***************  
NOTE Player 0: found 36 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 323, supplyTotalPre: 321
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 323
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 225 -> FAILED tests
*************** ITERATION # 226 ***************  
NOTE Player 2: found 54 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 467, supplyTotalPre: 465
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 467
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 226 -> FAILED tests
*************** ITERATION # 227 ***************  
NOTE Player 2: found 60 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 402, supplyTotalPre: 400
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 402
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 227 -> FAILED tests
*************** ITERATION # 228 ***************  
NOTE Player 0: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 92, supplyTotalPre: 90
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 92
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 228 -> FAILED tests
*************** ITERATION # 229 ***************  
NOTE Player 1: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 252, supplyTotalPre: 250
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 252
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 229 -> FAILED tests
*************** ITERATION # 230 ***************  
NOTE Player 0: did NOT find Adventurer in player's hand
NOTE Player 0: found 60 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): ********** no assert performed
Test4 (check deck+discard count): ********** no assert performed
Test5 (check top cards of hand): topHand == 22
Branch-3 FAILED: player #0, check if top card of hand is unchanged
Debug Data: G->hand[topHand-2]: 1553826000, Gpre.hand[topHand-2]): 1553799544
printing POST game state: 

--START PRINTING GAME STATE -------------------
numPlayers = 3
SUPPLY TOTAL=251, supplyCount: #0: 29, #1: 4, #2: 11, #3: 10, #4: 46, #5: 8, #6: 21, #7: 7, #8: 11, #9: 2, #10: 12, #11: 0, #12: 12, #13: 12, #14: -1, #15: -1, #16: 11, #17: 4, #18: 3, #19: 7, #20: 9, #21: 1, #22: 10, #23: 6, #24: 1, #25: 8, #26: 8, 
embargoTokens: #0: 0, #1: 0, #2: 0, #3: 0, #4: 0, #5: 0, #6: 0, #7: 0, #8: 0, #9: 0, #10: 0, #11: 0, #12: 0, #13: 0, #14: 0, #15: 0, #16: 0, #17: 0, #18: 0, #19: 0, #20: 0, #21: 0, #22: 0, #23: 0, #24: 0, #25: 0, #26: 0, 
outpostPlayed = 0, outpostTurn = 387389207, whoseTurn = 0, phase = 0, numActions = 1, coins = 4, numBuys = 1
playedCardCount = 0, playedCards[x]: 
---------------------
PLAYER #0, HANDCOUNT=22, hand[player][hand]: [0][hand:0] = 21, [0][hand:1] = 17, [0][hand:2] = 24, [0][hand:3] = 12, [0][hand:4] = 18, [0][hand:5] = 10, [0][hand:6] = 2, [0][hand:7] = 2, [0][hand:8] = 2, [0][hand:9] = 0, [0][hand:10] = 4, [0][hand:11] = 25, [0][hand:12] = 15, [0][hand:13] = 13, [0][hand:14] = 0, [0][hand:15] = 11, [0][hand:16] = 17, [0][hand:17] = 14, [0][hand:18] = 4, [0][hand:19] = 13, [0][hand:20] = 5, [0][hand:21] = 5, 
PLAYER #0, DECKCOUNT=103, deck[player][hand]: [0][deck:0] = 18, [0][deck:1] = 1, [0][deck:2] = 12, [0][deck:3] = 8, [0][deck:4] = 17, [0][deck:5] = 21, [0][deck:6] = 4, [0][deck:7] = 14, [0][deck:8] = 2, [0][deck:9] = 23, [0][deck:10] = 19, [0][deck:11] = 18, [0][deck:12] = 15, [0][deck:13] = 26, [0][deck:14] = 3, [0][deck:15] = 7, [0][deck:16] = 12, [0][deck:17] = 9, [0][deck:18] = 4, [0][deck:19] = 16, [0][deck:20] = 7, [0][deck:21] = 20, [0][deck:22] = 1, [0][deck:23] = 14, [0][deck:24] = 12, [0][deck:25] = 1, [0][deck:26] = 23, [0][deck:27] = 5, [0][deck:28] = 18, [0][deck:29] = 13, [0][deck:30] = 19, [0][deck:31] = 20, [0][deck:32] = 23, [0][deck:33] = 25, [0][deck:34] = 11, [0][deck:35] = 5, [0][deck:36] = 7, [0][deck:37] = 17, [0][deck:38] = 3, [0][deck:39] = 10, [0][deck:40] = 10, [0][deck:41] = 1, [0][deck:42] = 2, [0][deck:43] = 12, [0][deck:44] = 20, [0][deck:45] = 17, [0][deck:46] = 19, [0][deck:47] = 26, [0][deck:48] = 18, [0][deck:49] = 7, [0][deck:50] = 7, [0][deck:51] = 0, [0][deck:52] = 16, [0][deck:53] = 15, [0][deck:54] = 19, [0][deck:55] = 16, [0][deck:56] = 8, [0][deck:57] = 3, [0][deck:58] = 13, [0][deck:59] = 25, [0][deck:60] = 3, [0][deck:61] = 11, [0][deck:62] = 18, [0][deck:63] = 17, [0][deck:64] = 25, [0][deck:65] = 13, [0][deck:66] = 14, [0][deck:67] = 7, [0][deck:68] = 26, [0][deck:69] = 6, [0][deck:70] = 6, [0][deck:71] = 1, [0][deck:72] = 5, [0][deck:73] = 14, [0][deck:74] = 11, [0][deck:75] = 25, [0][deck:76] = 1, [0][deck:77] = 2, [0][deck:78] = 12, [0][deck:79] = 18, [0][deck:80] = 18, [0][deck:81] = 25, [0][deck:82] = 15, [0][deck:83] = 21, [0][deck:84] = 15, [0][deck:85] = 26, [0][deck:86] = 4, [0][deck:87] = 26, [0][deck:88] = 20, [0][deck:89] = 1, [0][deck:90] = 26, [0][deck:91] = 5, [0][deck:92] = 10, [0][deck:93] = 14, [0][deck:94] = 13, [0][deck:95] = 4, [0][deck:96] = 25, [0][deck:97] = 9, [0][deck:98] = 13, [0][deck:99] = 12, [0][deck:100] = 2, [0][deck:101] = 19, [0][deck:102] = 0, 
PLAYER #0, DISCARDCOUNT=421, discard[player][hand]: [0][discard: 0] = 12, [0][discard: 1] = 25, [0][discard: 2] = 12, [0][discard: 3] = 19, [0][discard: 4] = 12, [0][discard: 5] = 7, [0][discard: 6] = 4, [0][discard: 7] = 11, [0][discard: 8] = 18, [0][discard: 9] = 23, [0][discard: 10] = 21, [0][discard: 11] = 7, [0][discard: 12] = 6, [0][discard: 13] = 13, [0][discard: 14] = 21, [0][discard: 15] = 24, [0][discard: 16] = 16, [0][discard: 17] = 3, [0][discard: 18] = 13, [0][discard: 19] = 4, [0][discard: 20] = 18, [0][discard: 21] = 9, [0][discard: 22] = 18, [0][discard: 23] = 21, [0][discard: 24] = 9, [0][discard: 25] = 11, [0][discard: 26] = 8, [0][discard: 27] = 18, [0][discard: 28] = 15, [0][discard: 29] = 5, [0][discard: 30] = 0, [0][discard: 31] = 26, [0][discard: 32] = 1, [0][discard: 33] = 19, [0][discard: 34] = 23, [0][discard: 35] = 13, [0][discard: 36] = 1, [0][discard: 37] = 23, [0][discard: 38] = 23, [0][discard: 39] = 23, [0][discard: 40] = 20, [0][discard: 41] = 3, [0][discard: 42] = 16, [0][discard: 43] = 2, [0][discard: 44] = 0, [0][discard: 45] = 23, [0][discard: 46] = 19, [0][discard: 47] = 18, [0][discard: 48] = 10, [0][discard: 49] = 9, [0][discard: 50] = 7, [0][discard: 51] = 5, [0][discard: 52] = 23, [0][discard: 53] = 21, [0][discard: 54] = 3, [0][discard: 55] = 9, [0][discard: 56] = 15, [0][discard: 57] = 2, [0][discard: 58] = 8, [0][discard: 59] = 3, [0][discard: 60] = 12, [0][discard: 61] = 5, [0][discard: 62] = 14, [0][discard: 63] = 8, [0][discard: 64] = 5, [0][discard: 65] = 1, [0][discard: 66] = 18, [0][discard: 67] = 12, [0][discard: 68] = 9, [0][discard: 69] = 13, [0][discard: 70] = 2, [0][discard: 71] = 13, [0][discard: 72] = 10, [0][discard: 73] = 11, [0][discard: 74] = 26, [0][discard: 75] = 14, [0][discard: 76] = 20, [0][discard: 77] = 16, [0][discard: 78] = 6, [0][discard: 79] = 0, [0][discard: 80] = 3, [0][discard: 81] = 26, [0][discard: 82] = 11, [0][discard: 83] = 23, [0][discard: 84] = 5, [0][discard: 85] = 19, [0][discard: 86] = 25, [0][discard: 87] = 14, [0][discard: 88] = 25, [0][discard: 89] = 20, [0][discard: 90] = 17, [0][discard: 91] = 1, [0][discard: 92] = 6, [0][discard: 93] = 17, [0][discard: 94] = 24, [0][discard: 95] = 6, [0][discard: 96] = 2, [0][discard: 97] = 12, [0][discard: 98] = 18, [0][discard: 99] = 26, [0][discard: 100] = 6, [0][discard: 101] = 13, [0][discard: 102] = 7, [0][discard: 103] = 8, [0][discard: 104] = 14, [0][discard: 105] = 11, [0][discard: 106] = 26, [0][discard: 107] = 20, [0][discard: 108] = 2, [0][discard: 109] = 11, [0][discard: 110] = 4, [0][discard: 111] = 16, [0][discard: 112] = 7, [0][discard: 113] = 2, [0][discard: 114] = 1, [0][discard: 115] = 6, [0][discard: 116] = 13, [0][discard: 117] = 3, [0][discard: 118] = 16, [0][discard: 119] = 15, [0][discard: 120] = 2, [0][discard: 121] = 23, [0][discard: 122] = 8, [0][discard: 123] = 6, [0][discard: 124] = 7, [0][discard: 125] = 15, [0][discard: 126] = 16, [0][discard: 127] = 6, [0][discard: 128] = 24, [0][discard: 129] = 9, [0][discard: 130] = 20, [0][discard: 131] = 4, [0][discard: 132] = 14, [0][discard: 133] = 17, [0][discard: 134] = 13, [0][discard: 135] = 16, [0][discard: 136] = 1, [0][discard: 137] = 12, [0][discard: 138] = 21, [0][discard: 139] = 21, [0][discard: 140] = 4, [0][discard: 141] = 25, [0][discard: 142] = 9, [0][discard: 143] = 15, [0][discard: 144] = 11, [0][discard: 145] = 16, [0][discard: 146] = 3, [0][discard: 147] = 19, [0][discard: 148] = 1, [0][discard: 149] = 15, [0][discard: 150] = 25, [0][discard: 151] = 4, [0][discard: 152] = 15, [0][discard: 153] = 14, [0][discard: 154] = 19, [0][discard: 155] = 0, [0][discard: 156] = 17, [0][discard: 157] = 20, [0][discard: 158] = 21, [0][discard: 159] = 25, [0][discard: 160] = 21, [0][discard: 161] = 4, [0][discard: 162] = 14, [0][discard: 163] = 7, [0][discard: 164] = 15, [0][discard: 165] = 13, [0][discard: 166] = 15, [0][discard: 167] = 17, [0][discard: 168] = 23, [0][discard: 169] = 4, [0][discard: 170] = 1, [0][discard: 171] = 10, [0][discard: 172] = 12, [0][discard: 173] = 21, [0][discard: 174] = 26, [0][discard: 175] = 3, [0][discard: 176] = 17, [0][discard: 177] = 5, [0][discard: 178] = 16, [0][discard: 179] = 7, [0][discard: 180] = 2, [0][discard: 181] = 16, [0][discard: 182] = 11, [0][discard: 183] = 3, [0][discard: 184] = 9, [0][discard: 185] = 7, [0][discard: 186] = 7, [0][discard: 187] = 7, [0][discard: 188] = 20, [0][discard: 189] = 20, [0][discard: 190] = 7, [0][discard: 191] = 19, [0][discard: 192] = 0, [0][discard: 193] = 21, [0][discard: 194] = 5, [0][discard: 195] = 1, [0][discard: 196] = 6, [0][discard: 197] = 15, [0][discard: 198] = 18, [0][discard: 199] = 20, [0][discard: 200] = 16, [0][discard: 201] = 10, [0][discard: 202] = 0, [0][discard: 203] = 1, [0][discard: 204] = 0, [0][discard: 205] = 0, [0][discard: 206] = 24, [0][discard: 207] = 26, [0][discard: 208] = 6, [0][discard: 209] = 7, [0][discard: 210] = 26, [0][discard: 211] = 16, [0][discard: 212] = 22, [0][discard: 213] = 18, [0][discard: 214] = 21, [0][discard: 215] = 10, [0][discard: 216] = 6, [0][discard: 217] = 23, [0][discard: 218] = 5, [0][discard: 219] = 7, [0][discard: 220] = 9, [0][discard: 221] = 21, [0][discard: 222] = 12, [0][discard: 223] = 14, [0][discard: 224] = 20, [0][discard: 225] = 26, [0][discard: 226] = 14, [0][discard: 227] = 20, [0][discard: 228] = 2, [0][discard: 229] = 11, [0][discard: 230] = 17, [0][discard: 231] = 15, [0][discard: 232] = 26, [0][discard: 233] = 6, [0][discard: 234] = 9, [0][discard: 235] = 15, [0][discard: 236] = 13, [0][discard: 237] = 11, [0][discard: 238] = 8, [0][discard: 239] = 19, [0][discard: 240] = 16, [0][discard: 241] = 0, [0][discard: 242] = 19, [0][discard: 243] = 15, [0][discard: 244] = 24, [0][discard: 245] = 26, [0][discard: 246] = 3, [0][discard: 247] = 24, [0][discard: 248] = 25, [0][discard: 249] = 21, [0][discard: 250] = 12, [0][discard: 251] = 26, [0][discard: 252] = 9, [0][discard: 253] = 23, [0][discard: 254] = 1, [0][discard: 255] = 22, [0][discard: 256] = 6, [0][discard: 257] = 0, [0][discard: 258] = 2, [0][discard: 259] = 23, [0][discard: 260] = 23, [0][discard: 261] = 1, [0][discard: 262] = 8, [0][discard: 263] = 4, [0][discard: 264] = 12, [0][discard: 265] = 5, [0][discard: 266] = 8, [0][discard: 267] = 8, [0][discard: 268] = 10, [0][discard: 269] = 8, [0][discard: 270] = 9, [0][discard: 271] = 12, [0][discard: 272] = 9, [0][discard: 273] = 2, [0][discard: 274] = 13, [0][discard: 275] = 23, [0][discard: 276] = 9, [0][discard: 277] = 6, [0][discard: 278] = 18, [0][discard: 279] = 1, [0][discard: 280] = 1, [0][discard: 281] = 18, [0][discard: 282] = 12, [0][discard: 283] = 6, [0][discard: 284] = 18, [0][discard: 285] = 16, [0][discard: 286] = 7, [0][discard: 287] = 16, [0][discard: 288] = 8, [0][discard: 289] = 4, [0][discard: 290] = 0, [0][discard: 291] = 5, [0][discard: 292] = 3, [0][discard: 293] = 7, [0][discard: 294] = 18, [0][discard: 295] = 5, [0][discard: 296] = 0, [0][discard: 297] = 4, [0][discard: 298] = 8, [0][discard: 299] = 10, [0][discard: 300] = 15, [0][discard: 301] = 20, [0][discard: 302] = 4, [0][discard: 303] = 5, [0][discard: 304] = 19, [0][discard: 305] = 3, [0][discard: 306] = 21, [0][discard: 307] = 20, [0][discard: 308] = 3, [0][discard: 309] = 13, [0][discard: 310] = 26, [0][discard: 311] = 25, [0][discard: 312] = 5, [0][discard: 313] = 9, [0][discard: 314] = 0, [0][discard: 315] = 9, [0][discard: 316] = 21, [0][discard: 317] = 8, [0][discard: 318] = 14, [0][discard: 319] = 14, [0][discard: 320] = 18, [0][discard: 321] = 14, [0][discard: 322] = 16, [0][discard: 323] = 19, [0][discard: 324] = 7, [0][discard: 325] = 25, [0][discard: 326] = 5, [0][discard: 327] = 0, [0][discard: 328] = 10, [0][discard: 329] = 10, [0][discard: 330] = 7, [0][discard: 331] = 3, [0][discard: 332] = 23, [0][discard: 333] = 20, [0][discard: 334] = 4, [0][discard: 335] = 26, [0][discard: 336] = 25, [0][discard: 337] = 8, [0][discard: 338] = 14, [0][discard: 339] = 12, [0][discard: 340] = 3, [0][discard: 341] = 11, [0][discard: 342] = 4, [0][discard: 343] = 15, [0][discard: 344] = 1, [0][discard: 345] = 12, [0][discard: 346] = 15, [0][discard: 347] = 7, [0][discard: 348] = 19, [0][discard: 349] = 13, [0][discard: 350] = 13, [0][discard: 351] = 1, [0][discard: 352] = 15, [0][discard: 353] = 23, [0][discard: 354] = 10, [0][discard: 355] = 9, [0][discard: 356] = 25, [0][discard: 357] = 22, [0][discard: 358] = 20, [0][discard: 359] = 17, [0][discard: 360] = 24, [0][discard: 361] = 21, [0][discard: 362] = 2, [0][discard: 363] = 3, [0][discard: 364] = 2, [0][discard: 365] = 18, [0][discard: 366] = 15, [0][discard: 367] = 13, [0][discard: 368] = 10, [0][discard: 369] = 18, [0][discard: 370] = 26, [0][discard: 371] = 9, [0][discard: 372] = 12, [0][discard: 373] = 7, [0][discard: 374] = 9, [0][discard: 375] = 21, [0][discard: 376] = 17, [0][discard: 377] = 19, [0][discard: 378] = 14, [0][discard: 379] = 20, [0][discard: 380] = 15, [0][discard: 381] = 17, [0][discard: 382] = 25, [0][discard: 383] = 2, [0][discard: 384] = 2, [0][discard: 385] = 20, [0][discard: 386] = 13, [0][discard: 387] = 24, [0][discard: 388] = 23, [0][discard: 389] = 6, [0][discard: 390] = 13, [0][discard: 391] = 13, [0][discard: 392] = 1, [0][discard: 393] = 25, [0][discard: 394] = 18, [0][discard: 395] = 22, [0][discard: 396] = 0, [0][discard: 397] = 3, [0][discard: 398] = 17, [0][discard: 399] = 21, [0][discard: 400] = 24, [0][discard: 401] = 4, [0][discard: 402] = 12, [0][discard: 403] = 10, [0][discard: 404] = 13, [0][discard: 405] = 18, [0][discard: 406] = 6, [0][discard: 407] = 22, [0][discard: 408] = 0, [0][discard: 409] = 4, [0][discard: 410] = 17, [0][discard: 411] = 22, [0][discard: 412] = 1, [0][discard: 413] = 22, [0][discard: 414] = 18, [0][discard: 415] = 6, [0][discard: 416] = 16, [0][discard: 417] = 19, [0][discard: 418] = 23, [0][discard: 419] = 12, [0][discard: 420] = 3, 
---------------------
PLAYER #1, HANDCOUNT=0, hand[player][hand]: 
PLAYER #1, DECKCOUNT=10, deck[player][hand]: [1][deck:0] = 4, [1][deck:1] = 1, [1][deck:2] = 4, [1][deck:3] = 1, [1][deck:4] = 4, [1][deck:5] = 4, [1][deck:6] = 4, [1][deck:7] = 4, [1][deck:8] = 4, [1][deck:9] = 1, 
PLAYER #1, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #2, HANDCOUNT=0, hand[player][hand]: 
PLAYER #2, DECKCOUNT=10, deck[player][hand]: [2][deck:0] = 4, [2][deck:1] = 4, [2][deck:2] = 4, [2][deck:3] = 1, [2][deck:4] = 1, [2][deck:5] = 1, [2][deck:6] = 4, [2][deck:7] = 4, [2][deck:8] = 4, [2][deck:9] = 4, 
PLAYER #2, DISCARDCOUNT=0, discard[player][hand]: 
--END PRINTING GAME STATE -------------------

adventurer test - iteration 230 -> FAILED tests
*************** ITERATION # 231 ***************  
NOTE Player 0: did NOT find Adventurer in player's hand
NOTE Player 0: found 93 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): ********** no assert performed
Test4 (check deck+discard count): ********** no assert performed
Test5 (check top cards of hand): topHand == 55
Branch-3 FAILED: player #0, check if top card of hand is unchanged
Debug Data: G->hand[topHand-2]: 1553892000, Gpre.hand[topHand-2]): 1553865544
printing POST game state: 

--START PRINTING GAME STATE -------------------
numPlayers = 3
SUPPLY TOTAL=193, supplyCount: #0: 7, #1: 9, #2: 4, #3: 0, #4: 39, #5: 18, #6: 26, #7: 5, #8: 7, #9: 10, #10: 4, #11: 11, #12: 2, #13: 2, #14: 3, #15: 1, #16: 6, #17: 9, #18: 7, #19: 0, #20: -1, #21: 5, #22: 1, #23: 0, #24: 7, #25: 6, #26: 5, 
embargoTokens: #0: 0, #1: 0, #2: 0, #3: 0, #4: 0, #5: 0, #6: 0, #7: 0, #8: 0, #9: 0, #10: 0, #11: 0, #12: 0, #13: 0, #14: 0, #15: 0, #16: 0, #17: 0, #18: 0, #19: 0, #20: 0, #21: 0, #22: 0, #23: 0, #24: 0, #25: 0, #26: 0, 
outpostPlayed = 0, outpostTurn = 387389207, whoseTurn = 0, phase = 0, numActions = 1, coins = 4, numBuys = 1
playedCardCount = 0, playedCards[x]: 
---------------------
PLAYER #0, HANDCOUNT=55, hand[player][hand]: [0][hand:0] = 4, [0][hand:1] = 2, [0][hand:2] = 26, [0][hand:3] = 15, [0][hand:4] = 23, [0][hand:5] = 2, [0][hand:6] = 3, [0][hand:7] = 19, [0][hand:8] = 21, [0][hand:9] = 17, [0][hand:10] = 22, [0][hand:11] = 16, [0][hand:12] = 12, [0][hand:13] = 5, [0][hand:14] = 26, [0][hand:15] = 15, [0][hand:16] = 6, [0][hand:17] = 20, [0][hand:18] = 25, [0][hand:19] = 0, [0][hand:20] = 18, [0][hand:21] = 8, [0][hand:22] = 24, [0][hand:23] = 4, [0][hand:24] = 22, [0][hand:25] = 14, [0][hand:26] = 9, [0][hand:27] = 17, [0][hand:28] = 2, [0][hand:29] = 8, [0][hand:30] = 12, [0][hand:31] = 22, [0][hand:32] = 6, [0][hand:33] = 0, [0][hand:34] = 15, [0][hand:35] = 13, [0][hand:36] = 2, [0][hand:37] = 14, [0][hand:38] = 23, [0][hand:39] = 12, [0][hand:40] = 14, [0][hand:41] = 22, [0][hand:42] = 25, [0][hand:43] = 10, [0][hand:44] = 0, [0][hand:45] = 2, [0][hand:46] = 26, [0][hand:47] = 9, [0][hand:48] = 23, [0][hand:49] = 2, [0][hand:50] = 11, [0][hand:51] = 2, [0][hand:52] = 20, [0][hand:53] = 5, [0][hand:54] = 5, 
PLAYER #0, DECKCOUNT=412, deck[player][hand]: [0][deck:0] = 17, [0][deck:1] = 6, [0][deck:2] = 6, [0][deck:3] = 1, [0][deck:4] = 14, [0][deck:5] = 23, [0][deck:6] = 6, [0][deck:7] = 8, [0][deck:8] = 24, [0][deck:9] = 20, [0][deck:10] = 3, [0][deck:11] = 21, [0][deck:12] = 12, [0][deck:13] = 9, [0][deck:14] = 19, [0][deck:15] = 16, [0][deck:16] = 6, [0][deck:17] = 5, [0][deck:18] = 3, [0][deck:19] = 20, [0][deck:20] = 25, [0][deck:21] = 5, [0][deck:22] = 4, [0][deck:23] = 23, [0][deck:24] = 12, [0][deck:25] = 17, [0][deck:26] = 9, [0][deck:27] = 22, [0][deck:28] = 5, [0][deck:29] = 1, [0][deck:30] = 12, [0][deck:31] = 3, [0][deck:32] = 0, [0][deck:33] = 10, [0][deck:34] = 23, [0][deck:35] = 6, [0][deck:36] = 5, [0][deck:37] = 1, [0][deck:38] = 0, [0][deck:39] = 2, [0][deck:40] = 16, [0][deck:41] = 18, [0][deck:42] = 13, [0][deck:43] = 10, [0][deck:44] = 4, [0][deck:45] = 10, [0][deck:46] = 20, [0][deck:47] = 25, [0][deck:48] = 20, [0][deck:49] = 1, [0][deck:50] = 19, [0][deck:51] = 7, [0][deck:52] = 7, [0][deck:53] = 18, [0][deck:54] = 22, [0][deck:55] = 23, [0][deck:56] = 9, [0][deck:57] = 18, [0][deck:58] = 8, [0][deck:59] = 24, [0][deck:60] = 7, [0][deck:61] = 26, [0][deck:62] = 24, [0][deck:63] = 15, [0][deck:64] = 26, [0][deck:65] = 23, [0][deck:66] = 21, [0][deck:67] = 22, [0][deck:68] = 3, [0][deck:69] = 13, [0][deck:70] = 19, [0][deck:71] = 23, [0][deck:72] = 19, [0][deck:73] = 26, [0][deck:74] = 15, [0][deck:75] = 13, [0][deck:76] = 8, [0][deck:77] = 13, [0][deck:78] = 8, [0][deck:79] = 24, [0][deck:80] = 9, [0][deck:81] = 16, [0][deck:82] = 4, [0][deck:83] = 11, [0][deck:84] = 12, [0][deck:85] = 2, [0][deck:86] = 16, [0][deck:87] = 10, [0][deck:88] = 0, [0][deck:89] = 5, [0][deck:90] = 23, [0][deck:91] = 2, [0][deck:92] = 14, [0][deck:93] = 7, [0][deck:94] = 7, [0][deck:95] = 16, [0][deck:96] = 22, [0][deck:97] = 6, [0][deck:98] = 7, [0][deck:99] = 14, [0][deck:100] = 21, [0][deck:101] = 24, [0][deck:102] = 14, [0][deck:103] = 6, [0][deck:104] = 5, [0][deck:105] = 14, [0][deck:106] = 11, [0][deck:107] = 0, [0][deck:108] = 11, [0][deck:109] = 24, [0][deck:110] = 0, [0][deck:111] = 17, [0][deck:112] = 13, [0][deck:113] = 14, [0][deck:114] = 0, [0][deck:115] = 21, [0][deck:116] = 23, [0][deck:117] = 3, [0][deck:118] = 3, [0][deck:119] = 12, [0][deck:120] = 16, [0][deck:121] = 0, [0][deck:122] = 3, [0][deck:123] = 20, [0][deck:124] = 21, [0][deck:125] = 9, [0][deck:126] = 0, [0][deck:127] = 16, [0][deck:128] = 6, [0][deck:129] = 15, [0][deck:130] = 24, [0][deck:131] = 12, [0][deck:132] = 19, [0][deck:133] = 25, [0][deck:134] = 15, [0][deck:135] = 20, [0][deck:136] = 10, [0][deck:137] = 24, [0][deck:138] = 7, [0][deck:139] = 16, [0][deck:140] = 2, [0][deck:141] = 26, [0][deck:142] = 7, [0][deck:143] = 18, [0][deck:144] = 15, [0][deck:145] = 20, [0][deck:146] = 1, [0][deck:147] = 25, [0][deck:148] = 12, [0][deck:149] = 10, [0][deck:150] = 8, [0][deck:151] = 6, [0][deck:152] = 23, [0][deck:153] = 14, [0][deck:154] = 5, [0][deck:155] = 10, [0][deck:156] = 14, [0][deck:157] = 12, [0][deck:158] = 11, [0][deck:159] = 24, [0][deck:160] = 19, [0][deck:161] = 13, [0][deck:162] = 6, [0][deck:163] = 22, [0][deck:164] = 19, [0][deck:165] = 22, [0][deck:166] = 18, [0][deck:167] = 3, [0][deck:168] = 15, [0][deck:169] = 22, [0][deck:170] = 9, [0][deck:171] = 23, [0][deck:172] = 20, [0][deck:173] = 8, [0][deck:174] = 23, [0][deck:175] = 25, [0][deck:176] = 17, [0][deck:177] = 21, [0][deck:178] = 1, [0][deck:179] = 23, [0][deck:180] = 4, [0][deck:181] = 10, [0][deck:182] = 23, [0][deck:183] = 0, [0][deck:184] = 21, [0][deck:185] = 19, [0][deck:186] = 19, [0][deck:187] = 20, [0][deck:188] = 0, [0][deck:189] = 12, [0][deck:190] = 9, [0][deck:191] = 4, [0][deck:192] = 7, [0][deck:193] = 10, [0][deck:194] = 13, [0][deck:195] = 24, [0][deck:196] = 9, [0][deck:197] = 11, [0][deck:198] = 8, [0][deck:199] = 15, [0][deck:200] = 6, [0][deck:201] = 16, [0][deck:202] = 21, [0][deck:203] = 3, [0][deck:204] = 15, [0][deck:205] = 7, [0][deck:206] = 22, [0][deck:207] = 17, [0][deck:208] = 26, [0][deck:209] = 26, [0][deck:210] = 25, [0][deck:211] = 25, [0][deck:212] = 17, [0][deck:213] = 19, [0][deck:214] = 16, [0][deck:215] = 19, [0][deck:216] = 24, [0][deck:217] = 4, [0][deck:218] = 12, [0][deck:219] = 0, [0][deck:220] = 8, [0][deck:221] = 25, [0][deck:222] = 16, [0][deck:223] = 0, [0][deck:224] = 12, [0][deck:225] = 1, [0][deck:226] = 14, [0][deck:227] = 17, [0][deck:228] = 11, [0][deck:229] = 25, [0][deck:230] = 7, [0][deck:231] = 15, [0][deck:232] = 4, [0][deck:233] = 5, [0][deck:234] = 8, [0][deck:235] = 14, [0][deck:236] = 17, [0][deck:237] = 21, [0][deck:238] = 25, [0][deck:239] = 23, [0][deck:240] = 6, [0][deck:241] = 11, [0][deck:242] = 15, [0][deck:243] = 8, [0][deck:244] = 9, [0][deck:245] = 8, [0][deck:246] = 9, [0][deck:247] = 13, [0][deck:248] = 2, [0][deck:249] = 8, [0][deck:250] = 2, [0][deck:251] = 4, [0][deck:252] = 11, [0][deck:253] = 7, [0][deck:254] = 26, [0][deck:255] = 26, [0][deck:256] = 16, [0][deck:257] = 5, [0][deck:258] = 7, [0][deck:259] = 2, [0][deck:260] = 6, [0][deck:261] = 15, [0][deck:262] = 18, [0][deck:263] = 4, [0][deck:264] = 6, [0][deck:265] = 4, [0][deck:266] = 9, [0][deck:267] = 6, [0][deck:268] = 15, [0][deck:269] = 25, [0][deck:270] = 6, [0][deck:271] = 18, [0][deck:272] = 4, [0][deck:273] = 18, [0][deck:274] = 0, [0][deck:275] = 22, [0][deck:276] = 25, [0][deck:277] = 5, [0][deck:278] = 9, [0][deck:279] = 23, [0][deck:280] = 8, [0][deck:281] = 2, [0][deck:282] = 23, [0][deck:283] = 17, [0][deck:284] = 20, [0][deck:285] = 26, [0][deck:286] = 7, [0][deck:287] = 23, [0][deck:288] = 2, [0][deck:289] = 1, [0][deck:290] = 26, [0][deck:291] = 7, [0][deck:292] = 24, [0][deck:293] = 11, [0][deck:294] = 13, [0][deck:295] = 5, [0][deck:296] = 25, [0][deck:297] = 5, [0][deck:298] = 4, [0][deck:299] = 20, [0][deck:300] = 19, [0][deck:301] = 18, [0][deck:302] = 18, [0][deck:303] = 25, [0][deck:304] = 26, [0][deck:305] = 10, [0][deck:306] = 23, [0][deck:307] = 3, [0][deck:308] = 25, [0][deck:309] = 9, [0][deck:310] = 0, [0][deck:311] = 25, [0][deck:312] = 8, [0][deck:313] = 20, [0][deck:314] = 10, [0][deck:315] = 9, [0][deck:316] = 0, [0][deck:317] = 23, [0][deck:318] = 20, [0][deck:319] = 12, [0][deck:320] = 3, [0][deck:321] = 20, [0][deck:322] = 19, [0][deck:323] = 3, [0][deck:324] = 21, [0][deck:325] = 17, [0][deck:326] = 9, [0][deck:327] = 4, [0][deck:328] = 18, [0][deck:329] = 13, [0][deck:330] = 9, [0][deck:331] = 0, [0][deck:332] = 4, [0][deck:333] = 14, [0][deck:334] = 17, [0][deck:335] = 10, [0][deck:336] = 8, [0][deck:337] = 11, [0][deck:338] = 12, [0][deck:339] = 20, [0][deck:340] = 10, [0][deck:341] = 8, [0][deck:342] = 21, [0][deck:343] = 4, [0][deck:344] = 9, [0][deck:345] = 6, [0][deck:346] = 7, [0][deck:347] = 18, [0][deck:348] = 15, [0][deck:349] = 0, [0][deck:350] = 1, [0][deck:351] = 21, [0][deck:352] = 10, [0][deck:353] = 20, [0][deck:354] = 1, [0][deck:355] = 3, [0][deck:356] = 20, [0][deck:357] = 14, [0][deck:358] = 22, [0][deck:359] = 2, [0][deck:360] = 16, [0][deck:361] = 5, [0][deck:362] = 4, [0][deck:363] = 18, [0][deck:364] = 15, [0][deck:365] = 5, [0][deck:366] = 25, [0][deck:367] = 13, [0][deck:368] = 13, [0][deck:369] = 4, [0][deck:370] = 16, [0][deck:371] = 16, [0][deck:372] = 24, [0][deck:373] = 25, [0][deck:374] = 26, [0][deck:375] = 0, [0][deck:376] = 4, [0][deck:377] = 13, [0][deck:378] = 3, [0][deck:379] = 21, [0][deck:380] = 8, [0][deck:381] = 20, [0][deck:382] = 1, [0][deck:383] = 14, [0][deck:384] = 6, [0][deck:385] = 22, [0][deck:386] = 10, [0][deck:387] = 17, [0][deck:388] = 14, [0][deck:389] = 17, [0][deck:390] = 9, [0][deck:391] = 20, [0][deck:392] = 6, [0][deck:393] = 22, [0][deck:394] = 23, [0][deck:395] = 20, [0][deck:396] = 11, [0][deck:397] = 16, [0][deck:398] = 9, [0][deck:399] = 12, [0][deck:400] = 10, [0][deck:401] = 18, [0][deck:402] = 14, [0][deck:403] = 5, [0][deck:404] = 26, [0][deck:405] = 3, [0][deck:406] = 14, [0][deck:407] = 25, [0][deck:408] = 23, [0][deck:409] = 7, [0][deck:410] = 13, [0][deck:411] = 11, 
PLAYER #0, DISCARDCOUNT=377, discard[player][hand]: [0][discard: 0] = 19, [0][discard: 1] = 2, [0][discard: 2] = 8, [0][discard: 3] = 19, [0][discard: 4] = 15, [0][discard: 5] = 7, [0][discard: 6] = 7, [0][discard: 7] = 18, [0][discard: 8] = 12, [0][discard: 9] = 2, [0][discard: 10] = 16, [0][discard: 11] = 11, [0][discard: 12] = 23, [0][discard: 13] = 14, [0][discard: 14] = 16, [0][discard: 15] = 10, [0][discard: 16] = 4, [0][discard: 17] = 14, [0][discard: 18] = 13, [0][discard: 19] = 11, [0][discard: 20] = 26, [0][discard: 21] = 24, [0][discard: 22] = 25, [0][discard: 23] = 15, [0][discard: 24] = 19, [0][discard: 25] = 16, [0][discard: 26] = 11, [0][discard: 27] = 3, [0][discard: 28] = 15, [0][discard: 29] = 23, [0][discard: 30] = 1, [0][discard: 31] = 20, [0][discard: 32] = 4, [0][discard: 33] = 21, [0][discard: 34] = 11, [0][discard: 35] = 10, [0][discard: 36] = 26, [0][discard: 37] = 3, [0][discard: 38] = 13, [0][discard: 39] = 16, [0][discard: 40] = 12, [0][discard: 41] = 22, [0][discard: 42] = 20, [0][discard: 43] = 1, [0][discard: 44] = 22, [0][discard: 45] = 23, [0][discard: 46] = 5, [0][discard: 47] = 4, [0][discard: 48] = 2, [0][discard: 49] = 9, [0][discard: 50] = 10, [0][discard: 51] = 26, [0][discard: 52] = 9, [0][discard: 53] = 2, [0][discard: 54] = 1, [0][discard: 55] = 10, [0][discard: 56] = 12, [0][discard: 57] = 10, [0][discard: 58] = 3, [0][discard: 59] = 13, [0][discard: 60] = 5, [0][discard: 61] = 15, [0][discard: 62] = 10, [0][discard: 63] = 25, [0][discard: 64] = 19, [0][discard: 65] = 12, [0][discard: 66] = 18, [0][discard: 67] = 7, [0][discard: 68] = 15, [0][discard: 69] = 4, [0][discard: 70] = 9, [0][discard: 71] = 5, [0][discard: 72] = 22, [0][discard: 73] = 17, [0][discard: 74] = 23, [0][discard: 75] = 17, [0][discard: 76] = 20, [0][discard: 77] = 5, [0][discard: 78] = 2, [0][discard: 79] = 17, [0][discard: 80] = 16, [0][discard: 81] = 12, [0][discard: 82] = 25, [0][discard: 83] = 11, [0][discard: 84] = 26, [0][discard: 85] = 16, [0][discard: 86] = 8, [0][discard: 87] = 2, [0][discard: 88] = 14, [0][discard: 89] = 19, [0][discard: 90] = 8, [0][discard: 91] = 9, [0][discard: 92] = 6, [0][discard: 93] = 1, [0][discard: 94] = 1, [0][discard: 95] = 13, [0][discard: 96] = 1, [0][discard: 97] = 11, [0][discard: 98] = 14, [0][discard: 99] = 13, [0][discard: 100] = 25, [0][discard: 101] = 9, [0][discard: 102] = 6, [0][discard: 103] = 5, [0][discard: 104] = 18, [0][discard: 105] = 24, [0][discard: 106] = 6, [0][discard: 107] = 7, [0][discard: 108] = 16, [0][discard: 109] = 9, [0][discard: 110] = 18, [0][discard: 111] = 12, [0][discard: 112] = 26, [0][discard: 113] = 16, [0][discard: 114] = 17, [0][discard: 115] = 12, [0][discard: 116] = 15, [0][discard: 117] = 17, [0][discard: 118] = 13, [0][discard: 119] = 20, [0][discard: 120] = 21, [0][discard: 121] = 1, [0][discard: 122] = 20, [0][discard: 123] = 12, [0][discard: 124] = 24, [0][discard: 125] = 21, [0][discard: 126] = 13, [0][discard: 127] = 17, [0][discard: 128] = 13, [0][discard: 129] = 16, [0][discard: 130] = 14, [0][discard: 131] = 13, [0][discard: 132] = 20, [0][discard: 133] = 11, [0][discard: 134] = 16, [0][discard: 135] = 1, [0][discard: 136] = 14, [0][discard: 137] = 14, [0][discard: 138] = 20, [0][discard: 139] = 3, [0][discard: 140] = 5, [0][discard: 141] = 22, [0][discard: 142] = 7, [0][discard: 143] = 19, [0][discard: 144] = 17, [0][discard: 145] = 23, [0][discard: 146] = 5, [0][discard: 147] = 11, [0][discard: 148] = 19, [0][discard: 149] = 6, [0][discard: 150] = 9, [0][discard: 151] = 11, [0][discard: 152] = 2, [0][discard: 153] = 4, [0][discard: 154] = 21, [0][discard: 155] = 10, [0][discard: 156] = 5, [0][discard: 157] = 16, [0][discard: 158] = 8, [0][discard: 159] = 18, [0][discard: 160] = 0, [0][discard: 161] = 1, [0][discard: 162] = 7, [0][discard: 163] = 15, [0][discard: 164] = 6, [0][discard: 165] = 11, [0][discard: 166] = 10, [0][discard: 167] = 8, [0][discard: 168] = 6, [0][discard: 169] = 3, [0][discard: 170] = 1, [0][discard: 171] = 23, [0][discard: 172] = 3, [0][discard: 173] = 12, [0][discard: 174] = 7, [0][discard: 175] = 12, [0][discard: 176] = 9, [0][discard: 177] = 19, [0][discard: 178] = 20, [0][discard: 179] = 22, [0][discard: 180] = 7, [0][discard: 181] = 3, [0][discard: 182] = 16, [0][discard: 183] = 8, [0][discard: 184] = 19, [0][discard: 185] = 14, [0][discard: 186] = 18, [0][discard: 187] = 8, [0][discard: 188] = 7, [0][discard: 189] = 16, [0][discard: 190] = 11, [0][discard: 191] = 20, [0][discard: 192] = 0, [0][discard: 193] = 21, [0][discard: 194] = 10, [0][discard: 195] = 23, [0][discard: 196] = 6, [0][discard: 197] = 1, [0][discard: 198] = 7, [0][discard: 199] = 18, [0][discard: 200] = 12, [0][discard: 201] = 4, [0][discard: 202] = 13, [0][discard: 203] = 0, [0][discard: 204] = 26, [0][discard: 205] = 24, [0][discard: 206] = 19, [0][discard: 207] = 5, [0][discard: 208] = 10, [0][discard: 209] = 21, [0][discard: 210] = 12, [0][discard: 211] = 9, [0][discard: 212] = 4, [0][discard: 213] = 20, [0][discard: 214] = 2, [0][discard: 215] = 15, [0][discard: 216] = 11, [0][discard: 217] = 25, [0][discard: 218] = 13, [0][discard: 219] = 13, [0][discard: 220] = 2, [0][discard: 221] = 24, [0][discard: 222] = 5, [0][discard: 223] = 14, [0][discard: 224] = 20, [0][discard: 225] = 0, [0][discard: 226] = 15, [0][discard: 227] = 16, [0][discard: 228] = 26, [0][discard: 229] = 22, [0][discard: 230] = 20, [0][discard: 231] = 9, [0][discard: 232] = 11, [0][discard: 233] = 10, [0][discard: 234] = 6, [0][discard: 235] = 23, [0][discard: 236] = 12, [0][discard: 237] = 5, [0][discard: 238] = 17, [0][discard: 239] = 19, [0][discard: 240] = 4, [0][discard: 241] = 5, [0][discard: 242] = 1, [0][discard: 243] = 19, [0][discard: 244] = 10, [0][discard: 245] = 14, [0][discard: 246] = 1, [0][discard: 247] = 8, [0][discard: 248] = 2, [0][discard: 249] = 15, [0][discard: 250] = 9, [0][discard: 251] = 17, [0][discard: 252] = 1, [0][discard: 253] = 3, [0][discard: 254] = 2, [0][discard: 255] = 14, [0][discard: 256] = 18, [0][discard: 257] = 17, [0][discard: 258] = 21, [0][discard: 259] = 11, [0][discard: 260] = 21, [0][discard: 261] = 17, [0][discard: 262] = 21, [0][discard: 263] = 7, [0][discard: 264] = 1, [0][discard: 265] = 4, [0][discard: 266] = 13, [0][discard: 267] = 3, [0][discard: 268] = 0, [0][discard: 269] = 8, [0][discard: 270] = 15, [0][discard: 271] = 5, [0][discard: 272] = 18, [0][discard: 273] = 1, [0][discard: 274] = 0, [0][discard: 275] = 8, [0][discard: 276] = 16, [0][discard: 277] = 21, [0][discard: 278] = 25, [0][discard: 279] = 25, [0][discard: 280] = 9, [0][discard: 281] = 12, [0][discard: 282] = 17, [0][discard: 283] = 5, [0][discard: 284] = 7, [0][discard: 285] = 22, [0][discard: 286] = 0, [0][discard: 287] = 23, [0][discard: 288] = 0, [0][discard: 289] = 17, [0][discard: 290] = 24, [0][discard: 291] = 5, [0][discard: 292] = 15, [0][discard: 293] = 19, [0][discard: 294] = 12, [0][discard: 295] = 1, [0][discard: 296] = 8, [0][discard: 297] = 19, [0][discard: 298] = 22, [0][discard: 299] = 16, [0][discard: 300] = 14, [0][discard: 301] = 6, [0][discard: 302] = 10, [0][discard: 303] = 6, [0][discard: 304] = 25, [0][discard: 305] = 20, [0][discard: 306] = 16, [0][discard: 307] = 10, [0][discard: 308] = 19, [0][discard: 309] = 22, [0][discard: 310] = 15, [0][discard: 311] = 9, [0][discard: 312] = 16, [0][discard: 313] = 12, [0][discard: 314] = 18, [0][discard: 315] = 20, [0][discard: 316] = 23, [0][discard: 317] = 2, [0][discard: 318] = 22, [0][discard: 319] = 14, [0][discard: 320] = 17, [0][discard: 321] = 18, [0][discard: 322] = 15, [0][discard: 323] = 25, [0][discard: 324] = 17, [0][discard: 325] = 7, [0][discard: 326] = 9, [0][discard: 327] = 3, [0][discard: 328] = 23, [0][discard: 329] = 12, [0][discard: 330] = 12, [0][discard: 331] = 11, [0][discard: 332] = 3, [0][discard: 333] = 15, [0][discard: 334] = 7, [0][discard: 335] = 19, [0][discard: 336] = 26, [0][discard: 337] = 17, [0][discard: 338] = 24, [0][discard: 339] = 11, [0][discard: 340] = 14, [0][discard: 341] = 16, [0][discard: 342] = 9, [0][discard: 343] = 0, [0][discard: 344] = 20, [0][discard: 345] = 25, [0][discard: 346] = 24, [0][discard: 347] = 13, [0][discard: 348] = 13, [0][discard: 349] = 18, [0][discard: 350] = 1, [0][discard: 351] = 25, [0][discard: 352] = 3, [0][discard: 353] = 18, [0][discard: 354] = 13, [0][discard: 355] = 6, [0][discard: 356] = 6, [0][discard: 357] = 19, [0][discard: 358] = 25, [0][discard: 359] = 13, [0][discard: 360] = 6, [0][discard: 361] = 17, [0][discard: 362] = 2, [0][discard: 363] = 16, [0][discard: 364] = 7, [0][discard: 365] = 21, [0][discard: 366] = 24, [0][discard: 367] = 20, [0][discard: 368] = 19, [0][discard: 369] = 13, [0][discard: 370] = 18, [0][discard: 371] = 13, [0][discard: 372] = 6, [0][discard: 373] = 6, [0][discard: 374] = 7, [0][discard: 375] = 26, [0][discard: 376] = 18, 
---------------------
PLAYER #1, HANDCOUNT=0, hand[player][hand]: 
PLAYER #1, DECKCOUNT=10, deck[player][hand]: [1][deck:0] = 4, [1][deck:1] = 1, [1][deck:2] = 4, [1][deck:3] = 1, [1][deck:4] = 4, [1][deck:5] = 4, [1][deck:6] = 4, [1][deck:7] = 4, [1][deck:8] = 4, [1][deck:9] = 1, 
PLAYER #1, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #2, HANDCOUNT=0, hand[player][hand]: 
PLAYER #2, DECKCOUNT=10, deck[player][hand]: [2][deck:0] = 4, [2][deck:1] = 4, [2][deck:2] = 4, [2][deck:3] = 1, [2][deck:4] = 1, [2][deck:5] = 1, [2][deck:6] = 4, [2][deck:7] = 4, [2][deck:8] = 4, [2][deck:9] = 4, 
PLAYER #2, DISCARDCOUNT=0, discard[player][hand]: 
--END PRINTING GAME STATE -------------------

adventurer test - iteration 231 -> FAILED tests
*************** ITERATION # 232 ***************  
NOTE Player 1: found 57 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 215, supplyTotalPre: 213
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 215
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 232 -> FAILED tests
*************** ITERATION # 233 ***************  
NOTE Player 0: found 18 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 358, supplyTotalPre: 356
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 358
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 233 -> FAILED tests
*************** ITERATION # 234 ***************  
NOTE Player 0: found 22 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 136, supplyTotalPre: 134
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 136
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 234 -> FAILED tests
*************** ITERATION # 235 ***************  
NOTE Player 1: found 69 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 380, supplyTotalPre: 378
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 380
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 235 -> FAILED tests
*************** ITERATION # 236 ***************  
NOTE Player 0: did NOT find Adventurer in player's hand
NOTE Player 0: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): ********** no assert performed
Test4 (check deck+discard count): ********** no assert performed
Test5 (check top cards of hand): topHand == 30
Branch-3 FAILED: player #0, check if top card of hand is unchanged
Debug Data: G->hand[topHand-2]: 1553842000, Gpre.hand[topHand-2]): 1553815544
printing POST game state: 

--START PRINTING GAME STATE -------------------
numPlayers = 3
SUPPLY TOTAL=173, supplyCount: #0: 1, #1: 7, #2: 4, #3: 2, #4: 17, #5: 20, #6: 20, #7: 5, #8: 1, #9: 5, #10: -1, #11: 12, #12: 5, #13: 8, #14: 2, #15: 11, #16: -1, #17: 12, #18: 1, #19: 2, #20: 9, #21: 8, #22: 4, #23: 12, #24: 1, #25: 3, #26: 3, 
embargoTokens: #0: 0, #1: 0, #2: 0, #3: 0, #4: 0, #5: 0, #6: 0, #7: 0, #8: 0, #9: 0, #10: 0, #11: 0, #12: 0, #13: 0, #14: 0, #15: 0, #16: 0, #17: 0, #18: 0, #19: 0, #20: 0, #21: 0, #22: 0, #23: 0, #24: 0, #25: 0, #26: 0, 
outpostPlayed = 0, outpostTurn = 387389207, whoseTurn = 0, phase = 0, numActions = 1, coins = 4, numBuys = 1
playedCardCount = 0, playedCards[x]: 
---------------------
PLAYER #0, HANDCOUNT=30, hand[player][hand]: [0][hand:0] = 6, [0][hand:1] = 24, [0][hand:2] = 15, [0][hand:3] = 23, [0][hand:4] = 21, [0][hand:5] = 23, [0][hand:6] = 20, [0][hand:7] = 20, [0][hand:8] = 19, [0][hand:9] = 0, [0][hand:10] = 3, [0][hand:11] = 9, [0][hand:12] = 2, [0][hand:13] = 25, [0][hand:14] = 11, [0][hand:15] = 5, [0][hand:16] = 13, [0][hand:17] = 22, [0][hand:18] = 16, [0][hand:19] = 25, [0][hand:20] = 22, [0][hand:21] = 19, [0][hand:22] = 23, [0][hand:23] = 8, [0][hand:24] = 1, [0][hand:25] = 15, [0][hand:26] = 2, [0][hand:27] = 11, [0][hand:28] = 5, [0][hand:29] = 4, 
PLAYER #0, DECKCOUNT=162, deck[player][hand]: [0][deck:0] = 6, [0][deck:1] = 3, [0][deck:2] = 19, [0][deck:3] = 21, [0][deck:4] = 10, [0][deck:5] = 21, [0][deck:6] = 7, [0][deck:7] = 22, [0][deck:8] = 21, [0][deck:9] = 7, [0][deck:10] = 15, [0][deck:11] = 12, [0][deck:12] = 24, [0][deck:13] = 12, [0][deck:14] = 5, [0][deck:15] = 5, [0][deck:16] = 0, [0][deck:17] = 21, [0][deck:18] = 24, [0][deck:19] = 23, [0][deck:20] = 2, [0][deck:21] = 6, [0][deck:22] = 26, [0][deck:23] = 18, [0][deck:24] = 10, [0][deck:25] = 0, [0][deck:26] = 3, [0][deck:27] = 23, [0][deck:28] = 17, [0][deck:29] = 5, [0][deck:30] = 26, [0][deck:31] = 12, [0][deck:32] = 2, [0][deck:33] = 1, [0][deck:34] = 7, [0][deck:35] = 26, [0][deck:36] = 18, [0][deck:37] = 5, [0][deck:38] = 2, [0][deck:39] = 22, [0][deck:40] = 26, [0][deck:41] = 24, [0][deck:42] = 24, [0][deck:43] = 7, [0][deck:44] = 1, [0][deck:45] = 1, [0][deck:46] = 24, [0][deck:47] = 18, [0][deck:48] = 26, [0][deck:49] = 24, [0][deck:50] = 15, [0][deck:51] = 7, [0][deck:52] = 21, [0][deck:53] = 17, [0][deck:54] = 12, [0][deck:55] = 15, [0][deck:56] = 21, [0][deck:57] = 24, [0][deck:58] = 26, [0][deck:59] = 3, [0][deck:60] = 24, [0][deck:61] = 23, [0][deck:62] = 20, [0][deck:63] = 11, [0][deck:64] = 10, [0][deck:65] = 6, [0][deck:66] = 4, [0][deck:67] = 6, [0][deck:68] = 12, [0][deck:69] = 12, [0][deck:70] = 15, [0][deck:71] = 15, [0][deck:72] = 7, [0][deck:73] = 14, [0][deck:74] = 8, [0][deck:75] = 11, [0][deck:76] = 10, [0][deck:77] = 9, [0][deck:78] = 12, [0][deck:79] = 14, [0][deck:80] = 26, [0][deck:81] = 6, [0][deck:82] = 23, [0][deck:83] = 10, [0][deck:84] = 4, [0][deck:85] = 23, [0][deck:86] = 2, [0][deck:87] = 2, [0][deck:88] = 10, [0][deck:89] = 21, [0][deck:90] = 26, [0][deck:91] = 26, [0][deck:92] = 18, [0][deck:93] = 16, [0][deck:94] = 13, [0][deck:95] = 5, [0][deck:96] = 0, [0][deck:97] = 12, [0][deck:98] = 25, [0][deck:99] = 2, [0][deck:100] = 5, [0][deck:101] = 17, [0][deck:102] = 1, [0][deck:103] = 17, [0][deck:104] = 1, [0][deck:105] = 11, [0][deck:106] = 15, [0][deck:107] = 17, [0][deck:108] = 26, [0][deck:109] = 11, [0][deck:110] = 19, [0][deck:111] = 20, [0][deck:112] = 13, [0][deck:113] = 16, [0][deck:114] = 0, [0][deck:115] = 9, [0][deck:116] = 14, [0][deck:117] = 8, [0][deck:118] = 14, [0][deck:119] = 4, [0][deck:120] = 7, [0][deck:121] = 15, [0][deck:122] = 5, [0][deck:123] = 21, [0][deck:124] = 8, [0][deck:125] = 11, [0][deck:126] = 25, [0][deck:127] = 21, [0][deck:128] = 4, [0][deck:129] = 25, [0][deck:130] = 21, [0][deck:131] = 22, [0][deck:132] = 4, [0][deck:133] = 7, [0][deck:134] = 6, [0][deck:135] = 18, [0][deck:136] = 7, [0][deck:137] = 20, [0][deck:138] = 15, [0][deck:139] = 14, [0][deck:140] = 19, [0][deck:141] = 24, [0][deck:142] = 20, [0][deck:143] = 16, [0][deck:144] = 22, [0][deck:145] = 6, [0][deck:146] = 8, [0][deck:147] = 0, [0][deck:148] = 24, [0][deck:149] = 19, [0][deck:150] = 25, [0][deck:151] = 25, [0][deck:152] = 25, [0][deck:153] = 10, [0][deck:154] = 8, [0][deck:155] = 22, [0][deck:156] = 23, [0][deck:157] = 23, [0][deck:158] = 12, [0][deck:159] = 6, [0][deck:160] = 22, [0][deck:161] = 23, 
PLAYER #0, DISCARDCOUNT=156, discard[player][hand]: [0][discard: 0] = 18, [0][discard: 1] = 26, [0][discard: 2] = 21, [0][discard: 3] = 13, [0][discard: 4] = 20, [0][discard: 5] = 9, [0][discard: 6] = 26, [0][discard: 7] = 21, [0][discard: 8] = 24, [0][discard: 9] = 5, [0][discard: 10] = 18, [0][discard: 11] = 12, [0][discard: 12] = 0, [0][discard: 13] = 5, [0][discard: 14] = 10, [0][discard: 15] = 13, [0][discard: 16] = 20, [0][discard: 17] = 17, [0][discard: 18] = 10, [0][discard: 19] = 9, [0][discard: 20] = 18, [0][discard: 21] = 2, [0][discard: 22] = 12, [0][discard: 23] = 1, [0][discard: 24] = 0, [0][discard: 25] = 18, [0][discard: 26] = 9, [0][discard: 27] = 1, [0][discard: 28] = 21, [0][discard: 29] = 14, [0][discard: 30] = 8, [0][discard: 31] = 22, [0][discard: 32] = 2, [0][discard: 33] = 26, [0][discard: 34] = 25, [0][discard: 35] = 6, [0][discard: 36] = 5, [0][discard: 37] = 0, [0][discard: 38] = 14, [0][discard: 39] = 8, [0][discard: 40] = 0, [0][discard: 41] = 14, [0][discard: 42] = 3, [0][discard: 43] = 9, [0][discard: 44] = 6, [0][discard: 45] = 14, [0][discard: 46] = 5, [0][discard: 47] = 6, [0][discard: 48] = 20, [0][discard: 49] = 3, [0][discard: 50] = 19, [0][discard: 51] = 5, [0][discard: 52] = 2, [0][discard: 53] = 14, [0][discard: 54] = 23, [0][discard: 55] = 10, [0][discard: 56] = 6, [0][discard: 57] = 26, [0][discard: 58] = 16, [0][discard: 59] = 15, [0][discard: 60] = 12, [0][discard: 61] = 15, [0][discard: 62] = 11, [0][discard: 63] = 12, [0][discard: 64] = 25, [0][discard: 65] = 26, [0][discard: 66] = 1, [0][discard: 67] = 7, [0][discard: 68] = 24, [0][discard: 69] = 21, [0][discard: 70] = 26, [0][discard: 71] = 3, [0][discard: 72] = 6, [0][discard: 73] = 22, [0][discard: 74] = 9, [0][discard: 75] = 4, [0][discard: 76] = 22, [0][discard: 77] = 12, [0][discard: 78] = 17, [0][discard: 79] = 12, [0][discard: 80] = 5, [0][discard: 81] = 9, [0][discard: 82] = 7, [0][discard: 83] = 10, [0][discard: 84] = 21, [0][discard: 85] = 18, [0][discard: 86] = 17, [0][discard: 87] = 11, [0][discard: 88] = 22, [0][discard: 89] = 22, [0][discard: 90] = 14, [0][discard: 91] = 6, [0][discard: 92] = 26, [0][discard: 93] = 0, [0][discard: 94] = 10, [0][discard: 95] = 20, [0][discard: 96] = 5, [0][discard: 97] = 0, [0][discard: 98] = 18, [0][discard: 99] = 20, [0][discard: 100] = 12, [0][discard: 101] = 13, [0][discard: 102] = 22, [0][discard: 103] = 25, [0][discard: 104] = 5, [0][discard: 105] = 10, [0][discard: 106] = 18, [0][discard: 107] = 1, [0][discard: 108] = 15, [0][discard: 109] = 6, [0][discard: 110] = 25, [0][discard: 111] = 10, [0][discard: 112] = 13, [0][discard: 113] = 15, [0][discard: 114] = 8, [0][discard: 115] = 16, [0][discard: 116] = 0, [0][discard: 117] = 7, [0][discard: 118] = 14, [0][discard: 119] = 13, [0][discard: 120] = 19, [0][discard: 121] = 1, [0][discard: 122] = 11, [0][discard: 123] = 8, [0][discard: 124] = 22, [0][discard: 125] = 10, [0][discard: 126] = 2, [0][discard: 127] = 17, [0][discard: 128] = 7, [0][discard: 129] = 5, [0][discard: 130] = 4, [0][discard: 131] = 17, [0][discard: 132] = 8, [0][discard: 133] = 9, [0][discard: 134] = 17, [0][discard: 135] = 11, [0][discard: 136] = 9, [0][discard: 137] = 0, [0][discard: 138] = 23, [0][discard: 139] = 20, [0][discard: 140] = 7, [0][discard: 141] = 17, [0][discard: 142] = 15, [0][discard: 143] = 24, [0][discard: 144] = 18, [0][discard: 145] = 17, [0][discard: 146] = 2, [0][discard: 147] = 0, [0][discard: 148] = 21, [0][discard: 149] = 24, [0][discard: 150] = 1, [0][discard: 151] = 6, [0][discard: 152] = 26, [0][discard: 153] = 18, [0][discard: 154] = 8, [0][discard: 155] = 13, 
---------------------
PLAYER #1, HANDCOUNT=0, hand[player][hand]: 
PLAYER #1, DECKCOUNT=10, deck[player][hand]: [1][deck:0] = 4, [1][deck:1] = 1, [1][deck:2] = 4, [1][deck:3] = 1, [1][deck:4] = 4, [1][deck:5] = 4, [1][deck:6] = 4, [1][deck:7] = 4, [1][deck:8] = 4, [1][deck:9] = 1, 
PLAYER #1, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #2, HANDCOUNT=0, hand[player][hand]: 
PLAYER #2, DECKCOUNT=10, deck[player][hand]: [2][deck:0] = 4, [2][deck:1] = 4, [2][deck:2] = 4, [2][deck:3] = 1, [2][deck:4] = 1, [2][deck:5] = 1, [2][deck:6] = 4, [2][deck:7] = 4, [2][deck:8] = 4, [2][deck:9] = 4, 
PLAYER #2, DISCARDCOUNT=0, discard[player][hand]: 
--END PRINTING GAME STATE -------------------

adventurer test - iteration 236 -> FAILED tests
*************** ITERATION # 237 ***************  
NOTE Player 1: found 54 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 246, supplyTotalPre: 244
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 246
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 237 -> FAILED tests
*************** ITERATION # 238 ***************  
NOTE Player 1: did NOT find treasure in player's discard
NOTE Player 1: found 25 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 131, supplyTotalPre: 129
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 131
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 238 -> FAILED tests
*************** ITERATION # 239 ***************  
NOTE Player 2: found 59 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 324, supplyTotalPre: 322
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 324
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 239 -> FAILED tests
*************** ITERATION # 240 ***************  
NOTE Player 0: found 75 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 161, supplyTotalPre: 159
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 161
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 240 -> FAILED tests
*************** ITERATION # 241 ***************  
NOTE Player 1: found 38 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 79, supplyTotalPre: 77
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 79
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 241 -> FAILED tests
*************** ITERATION # 242 ***************  
NOTE Player 2: found 28 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 311, supplyTotalPre: 309
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 311
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 242 -> FAILED tests
*************** ITERATION # 243 ***************  
NOTE Player 1: found 38 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 338, supplyTotalPre: 336
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 338
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 243 -> FAILED tests
*************** ITERATION # 244 ***************  
NOTE Player 0: found 56 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 76, supplyTotalPre: 74
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 76
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 244 -> FAILED tests
*************** ITERATION # 245 ***************  
NOTE Player 1: found 12 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 428, supplyTotalPre: 426
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 428
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 245 -> FAILED tests
*************** ITERATION # 246 ***************  
NOTE Player 0: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 418, supplyTotalPre: 416
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 418
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 246 -> FAILED tests
*************** ITERATION # 247 ***************  
NOTE Player 1: found 14 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 78, supplyTotalPre: 76
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 78
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 247 -> FAILED tests
*************** ITERATION # 248 ***************  
NOTE Player 0: found 83 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 383, supplyTotalPre: 381
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 383
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 248 -> FAILED tests
*************** ITERATION # 249 ***************  
NOTE Player 2: found 49 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 165, supplyTotalPre: 163
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 165
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 249 -> FAILED tests
*************** ITERATION # 250 ***************  
NOTE Player 0: found 23 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 245, supplyTotalPre: 243
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 245
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 250 -> FAILED tests
*************** ITERATION # 251 ***************  
NOTE Player 1: found 33 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 239, supplyTotalPre: 237
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 239
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 251 -> FAILED tests
*************** ITERATION # 252 ***************  
NOTE Player 2: found 83 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 501, supplyTotalPre: 499
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 501
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 252 -> FAILED tests
*************** ITERATION # 253 ***************  
NOTE Player 1: found 90 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 95, supplyTotalPre: 93
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 95
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 253 -> FAILED tests
*************** ITERATION # 254 ***************  
NOTE Player 1: found 68 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 176, supplyTotalPre: 174
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 176
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 254 -> FAILED tests
*************** ITERATION # 255 ***************  
NOTE Player 1: found 67 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 273, supplyTotalPre: 271
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 273
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 255 -> FAILED tests
*************** ITERATION # 256 ***************  
NOTE Player 1: found 87 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 63, supplyTotalPre: 61
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 63
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 256 -> FAILED tests
*************** ITERATION # 257 ***************  
NOTE Player 1: found 72 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 86, supplyTotalPre: 84
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 86
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 257 -> FAILED tests
*************** ITERATION # 258 ***************  
NOTE Player 2: found 82 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 490, supplyTotalPre: 488
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 490
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 258 -> FAILED tests
*************** ITERATION # 259 ***************  
NOTE Player 0: found 59 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 5, supplyTotalPre: 3
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 5
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 259 -> FAILED tests
*************** ITERATION # 260 ***************  
NOTE Player 1: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 431, supplyTotalPre: 429
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 431
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 260 -> FAILED tests
*************** ITERATION # 261 ***************  
NOTE Player 1: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 84, supplyTotalPre: 82
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 84
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 261 -> FAILED tests
*************** ITERATION # 262 ***************  
NOTE Player 1: found 52 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 215, supplyTotalPre: 213
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 215
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 262 -> FAILED tests
*************** ITERATION # 263 ***************  
NOTE Player 1: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 458, supplyTotalPre: 456
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 458
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 263 -> FAILED tests
*************** ITERATION # 264 ***************  
NOTE Player 1: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 501, supplyTotalPre: 499
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 501
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 264 -> FAILED tests
*************** ITERATION # 265 ***************  
NOTE Player 0: found 40 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 456, supplyTotalPre: 454
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 456
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 265 -> FAILED tests
*************** ITERATION # 266 ***************  
NOTE Player 2: found 29 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 88, supplyTotalPre: 86
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 88
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 266 -> FAILED tests
*************** ITERATION # 267 ***************  
NOTE Player 1: found 66 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 492, supplyTotalPre: 490
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 492
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 267 -> FAILED tests
*************** ITERATION # 268 ***************  
NOTE Player 1: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 478, supplyTotalPre: 476
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 478
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 268 -> FAILED tests
*************** ITERATION # 269 ***************  
NOTE Player 2: found 8 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 479, supplyTotalPre: 477
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 479
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 269 -> FAILED tests
*************** ITERATION # 270 ***************  
NOTE Player 1: found 36 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 325, supplyTotalPre: 323
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 325
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 270 -> FAILED tests
*************** ITERATION # 271 ***************  
NOTE Player 1: found 64 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 297, supplyTotalPre: 295
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 297
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 271 -> FAILED tests
*************** ITERATION # 272 ***************  
NOTE Player 1: did NOT find treasure in player's discard
NOTE Player 1: found 19 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 465, supplyTotalPre: 463
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 465
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 272 -> FAILED tests
*************** ITERATION # 273 ***************  
NOTE Player 2: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 96, supplyTotalPre: 94
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 96
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 273 -> FAILED tests
*************** ITERATION # 274 ***************  
NOTE Player 2: found 43 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 49, supplyTotalPre: 47
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 49
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 274 -> FAILED tests
*************** ITERATION # 275 ***************  
NOTE Player 0: found 57 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 175, supplyTotalPre: 173
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 175
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 275 -> FAILED tests
*************** ITERATION # 276 ***************  
NOTE Player 0: found 35 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 411, supplyTotalPre: 409
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 411
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 276 -> FAILED tests
*************** ITERATION # 277 ***************  
NOTE Player 1: found 8 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 439, supplyTotalPre: 437
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 439
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 277 -> FAILED tests
*************** ITERATION # 278 ***************  
NOTE Player 1: found 132 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 300, supplyTotalPre: 298
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 300
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 278 -> FAILED tests
*************** ITERATION # 279 ***************  
NOTE Player 1: found 42 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 115, supplyTotalPre: 113
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 115
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 279 -> FAILED tests
*************** ITERATION # 280 ***************  
NOTE Player 2: found 44 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 367, supplyTotalPre: 365
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 367
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 280 -> FAILED tests
*************** ITERATION # 281 ***************  
NOTE Player 2: found 35 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 221, supplyTotalPre: 219
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 221
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 281 -> FAILED tests
*************** ITERATION # 282 ***************  
NOTE Player 0: found 66 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 88, supplyTotalPre: 86
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 88
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 282 -> FAILED tests
*************** ITERATION # 283 ***************  
NOTE Player 0: found 36 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 124, supplyTotalPre: 122
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 124
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 283 -> FAILED tests
*************** ITERATION # 284 ***************  
NOTE Player 0: found 67 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 396, supplyTotalPre: 394
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 396
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 284 -> FAILED tests
*************** ITERATION # 285 ***************  
NOTE Player 1: found 110 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 373, supplyTotalPre: 371
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 373
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 285 -> FAILED tests
*************** ITERATION # 286 ***************  
NOTE Player 2: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 179, supplyTotalPre: 177
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 179
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 286 -> FAILED tests
*************** ITERATION # 287 ***************  
NOTE Player 2: found 75 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 489, supplyTotalPre: 487
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 489
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 287 -> FAILED tests
*************** ITERATION # 288 ***************  
NOTE Player 1: found 49 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 217, supplyTotalPre: 215
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 217
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 288 -> FAILED tests
*************** ITERATION # 289 ***************  
NOTE Player 0: found 49 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 488, supplyTotalPre: 486
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 488
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 289 -> FAILED tests
*************** ITERATION # 290 ***************  
NOTE Player 2: found 84 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 300, supplyTotalPre: 298
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 300
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 290 -> FAILED tests
*************** ITERATION # 291 ***************  
NOTE Player 2: found 52 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 270, supplyTotalPre: 268
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 270
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 291 -> FAILED tests
*************** ITERATION # 292 ***************  
NOTE Player 1: found 68 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 442, supplyTotalPre: 440
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 442
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 292 -> FAILED tests
*************** ITERATION # 293 ***************  
NOTE Player 1: found 65 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 418, supplyTotalPre: 416
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 418
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 293 -> FAILED tests
*************** ITERATION # 294 ***************  
NOTE Player 2: found 78 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 296, supplyTotalPre: 294
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 296
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 294 -> FAILED tests
*************** ITERATION # 295 ***************  
NOTE Player 1: found 47 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 210, supplyTotalPre: 208
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 210
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 295 -> FAILED tests
*************** ITERATION # 296 ***************  
NOTE Player 1: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 237, supplyTotalPre: 235
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 237
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 296 -> FAILED tests
*************** ITERATION # 297 ***************  
NOTE Player 0: found 106 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 296, supplyTotalPre: 294
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 296
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 297 -> FAILED tests
*************** ITERATION # 298 ***************  
NOTE Player 1: found 84 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 470, supplyTotalPre: 468
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 470
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 298 -> FAILED tests
*************** ITERATION # 299 ***************  
NOTE Player 1: found 26 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 88, supplyTotalPre: 86
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 88
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 299 -> FAILED tests
*************** ITERATION # 300 ***************  
NOTE Player 0: found 49 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 282, supplyTotalPre: 280
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 282
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 300 -> FAILED tests
*************** ITERATION # 301 ***************  
NOTE Player 1: found 32 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 319, supplyTotalPre: 317
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 319
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 301 -> FAILED tests
*************** ITERATION # 302 ***************  
NOTE Player 0: found 66 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 242, supplyTotalPre: 240
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 242
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 302 -> FAILED tests
*************** ITERATION # 303 ***************  
NOTE Player 0: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 448, supplyTotalPre: 446
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 448
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 303 -> FAILED tests
*************** ITERATION # 304 ***************  
NOTE Player 2: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 329, supplyTotalPre: 327
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 329
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 304 -> FAILED tests
*************** ITERATION # 305 ***************  
NOTE Player 0: did NOT find treasure in player's deck
NOTE Player 0: found 5 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 363, supplyTotalPre: 361
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 363
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 305 -> FAILED tests
*************** ITERATION # 306 ***************  
NOTE Player 2: found 63 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 482, supplyTotalPre: 480
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 482
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 306 -> FAILED tests
*************** ITERATION # 307 ***************  
NOTE Player 2: did NOT find Adventurer in player's hand
NOTE Player 2: found 32 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): SUCCESS: player #2, check if played card has increased by 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): ********** no assert performed
Test4 (check deck+discard count): ********** no assert performed
Test5 (check top cards of hand): topHand == 2
Branch-3 FAILED: player #2, check if top card of hand is unchanged
Debug Data: G->hand[topHand-2]: 1553786000, Gpre.hand[topHand-2]): 1553759544
printing POST game state: 

--START PRINTING GAME STATE -------------------
numPlayers = 3
SUPPLY TOTAL=212, supplyCount: #0: 10, #1: 2, #2: 1, #3: 8, #4: 16, #5: 32, #6: 14, #7: 11, #8: 1, #9: 10, #10: 11, #11: 3, #12: 3, #13: 6, #14: 2, #15: 0, #16: 11, #17: 10, #18: 5, #19: 7, #20: 8, #21: 2, #22: 9, #23: 9, #24: 11, #25: 6, #26: 4, 
embargoTokens: #0: 0, #1: 0, #2: 0, #3: 0, #4: 0, #5: 0, #6: 0, #7: 0, #8: 0, #9: 0, #10: 0, #11: 0, #12: 0, #13: 0, #14: 0, #15: 0, #16: 0, #17: 0, #18: 0, #19: 0, #20: 0, #21: 0, #22: 0, #23: 0, #24: 0, #25: 0, #26: 0, 
outpostPlayed = 0, outpostTurn = 387389207, whoseTurn = 2, phase = 0, numActions = 1, coins = 4, numBuys = 1
playedCardCount = 0, playedCards[x]: 
---------------------
PLAYER #0, HANDCOUNT=5, hand[player][hand]: [0][hand:0] = 1, [0][hand:1] = 4, [0][hand:2] = 4, [0][hand:3] = 4, [0][hand:4] = 4, 
PLAYER #0, DECKCOUNT=5, deck[player][hand]: [0][deck:0] = 1, [0][deck:1] = 4, [0][deck:2] = 4, [0][deck:3] = 1, [0][deck:4] = 4, 
PLAYER #0, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #1, HANDCOUNT=0, hand[player][hand]: 
PLAYER #1, DECKCOUNT=10, deck[player][hand]: [1][deck:0] = 4, [1][deck:1] = 1, [1][deck:2] = 4, [1][deck:3] = 1, [1][deck:4] = 4, [1][deck:5] = 4, [1][deck:6] = 4, [1][deck:7] = 4, [1][deck:8] = 4, [1][deck:9] = 1, 
PLAYER #1, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #2, HANDCOUNT=2, hand[player][hand]: [2][hand:0] = 4, [2][hand:1] = 4, 
PLAYER #2, DECKCOUNT=81, deck[player][hand]: [2][deck:0] = 25, [2][deck:1] = 14, [2][deck:2] = 15, [2][deck:3] = 9, [2][deck:4] = 13, [2][deck:5] = 18, [2][deck:6] = 25, [2][deck:7] = 25, [2][deck:8] = 21, [2][deck:9] = 5, [2][deck:10] = 8, [2][deck:11] = 23, [2][deck:12] = 8, [2][deck:13] = 6, [2][deck:14] = 9, [2][deck:15] = 23, [2][deck:16] = 26, [2][deck:17] = 19, [2][deck:18] = 16, [2][deck:19] = 12, [2][deck:20] = 9, [2][deck:21] = 18, [2][deck:22] = 4, [2][deck:23] = 3, [2][deck:24] = 15, [2][deck:25] = 15, [2][deck:26] = 4, [2][deck:27] = 25, [2][deck:28] = 20, [2][deck:29] = 15, [2][deck:30] = 19, [2][deck:31] = 3, [2][deck:32] = 26, [2][deck:33] = 5, [2][deck:34] = 10, [2][deck:35] = 4, [2][deck:36] = 18, [2][deck:37] = 11, [2][deck:38] = 12, [2][deck:39] = 1, [2][deck:40] = 2, [2][deck:41] = 19, [2][deck:42] = 22, [2][deck:43] = 20, [2][deck:44] = 12, [2][deck:45] = 1, [2][deck:46] = 9, [2][deck:47] = 6, [2][deck:48] = 26, [2][deck:49] = 19, [2][deck:50] = 26, [2][deck:51] = 10, [2][deck:52] = 15, [2][deck:53] = 26, [2][deck:54] = 24, [2][deck:55] = 7, [2][deck:56] = 16, [2][deck:57] = 11, [2][deck:58] = 1, [2][deck:59] = 3, [2][deck:60] = 17, [2][deck:61] = 24, [2][deck:62] = 19, [2][deck:63] = 25, [2][deck:64] = 15, [2][deck:65] = 15, [2][deck:66] = 2, [2][deck:67] = 11, [2][deck:68] = 20, [2][deck:69] = 1, [2][deck:70] = 16, [2][deck:71] = 13, [2][deck:72] = 2, [2][deck:73] = 8, [2][deck:74] = 13, [2][deck:75] = 9, [2][deck:76] = 7, [2][deck:77] = 13, [2][deck:78] = 3, [2][deck:79] = 7, [2][deck:80] = 13, 
PLAYER #2, DISCARDCOUNT=176, discard[player][hand]: [2][discard: 0] = 6, [2][discard: 1] = 10, [2][discard: 2] = 4, [2][discard: 3] = 9, [2][discard: 4] = 20, [2][discard: 5] = 25, [2][discard: 6] = 7, [2][discard: 7] = 4, [2][discard: 8] = 10, [2][discard: 9] = 4, [2][discard: 10] = 23, [2][discard: 11] = 14, [2][discard: 12] = 7, [2][discard: 13] = 0, [2][discard: 14] = 2, [2][discard: 15] = 2, [2][discard: 16] = 14, [2][discard: 17] = 11, [2][discard: 18] = 17, [2][discard: 19] = 8, [2][discard: 20] = 5, [2][discard: 21] = 8, [2][discard: 22] = 4, [2][discard: 23] = 5, [2][discard: 24] = 18, [2][discard: 25] = 15, [2][discard: 26] = 13, [2][discard: 27] = 18, [2][discard: 28] = 1, [2][discard: 29] = 4, [2][discard: 30] = 5, [2][discard: 31] = 21, [2][discard: 32] = 5, [2][discard: 33] = 12, [2][discard: 34] = 7, [2][discard: 35] = 13, [2][discard: 36] = 22, [2][discard: 37] = 20, [2][discard: 38] = 20, [2][discard: 39] = 26, [2][discard: 40] = 25, [2][discard: 41] = 12, [2][discard: 42] = 9, [2][discard: 43] = 8, [2][discard: 44] = 19, [2][discard: 45] = 8, [2][discard: 46] = 10, [2][discard: 47] = 20, [2][discard: 48] = 10, [2][discard: 49] = 25, [2][discard: 50] = 10, [2][discard: 51] = 25, [2][discard: 52] = 2, [2][discard: 53] = 20, [2][discard: 54] = 14, [2][discard: 55] = 5, [2][discard: 56] = 19, [2][discard: 57] = 18, [2][discard: 58] = 2, [2][discard: 59] = 15, [2][discard: 60] = 19, [2][discard: 61] = 24, [2][discard: 62] = 21, [2][discard: 63] = 12, [2][discard: 64] = 23, [2][discard: 65] = 14, [2][discard: 66] = 18, [2][discard: 67] = 0, [2][discard: 68] = 25, [2][discard: 69] = 7, [2][discard: 70] = 3, [2][discard: 71] = 2, [2][discard: 72] = 8, [2][discard: 73] = 12, [2][discard: 74] = 7, [2][discard: 75] = 24, [2][discard: 76] = 3, [2][discard: 77] = 4, [2][discard: 78] = 6, [2][discard: 79] = 7, [2][discard: 80] = 20, [2][discard: 81] = 24, [2][discard: 82] = 5, [2][discard: 83] = 9, [2][discard: 84] = 7, [2][discard: 85] = 26, [2][discard: 86] = 5, [2][discard: 87] = 20, [2][discard: 88] = 19, [2][discard: 89] = 26, [2][discard: 90] = 9, [2][discard: 91] = 15, [2][discard: 92] = 18, [2][discard: 93] = 13, [2][discard: 94] = 15, [2][discard: 95] = 24, [2][discard: 96] = 18, [2][discard: 97] = 7, [2][discard: 98] = 26, [2][discard: 99] = 16, [2][discard: 100] = 24, [2][discard: 101] = 16, [2][discard: 102] = 15, [2][discard: 103] = 13, [2][discard: 104] = 21, [2][discard: 105] = 10, [2][discard: 106] = 9, [2][discard: 107] = 0, [2][discard: 108] = 2, [2][discard: 109] = 9, [2][discard: 110] = 14, [2][discard: 111] = 5, [2][discard: 112] = 7, [2][discard: 113] = 23, [2][discard: 114] = 8, [2][discard: 115] = 18, [2][discard: 116] = 9, [2][discard: 117] = 5, [2][discard: 118] = 13, [2][discard: 119] = 16, [2][discard: 120] = 20, [2][discard: 121] = 6, [2][discard: 122] = 24, [2][discard: 123] = 26, [2][discard: 124] = 16, [2][discard: 125] = 10, [2][discard: 126] = 15, [2][discard: 127] = 17, [2][discard: 128] = 14, [2][discard: 129] = 7, [2][discard: 130] = 17, [2][discard: 131] = 25, [2][discard: 132] = 24, [2][discard: 133] = 1, [2][discard: 134] = 22, [2][discard: 135] = 2, [2][discard: 136] = 9, [2][discard: 137] = 4, [2][discard: 138] = 25, [2][discard: 139] = 13, [2][discard: 140] = 7, [2][discard: 141] = 3, [2][discard: 142] = 24, [2][discard: 143] = 19, [2][discard: 144] = 7, [2][discard: 145] = 4, [2][discard: 146] = 5, [2][discard: 147] = 7, [2][discard: 148] = 14, [2][discard: 149] = 5, [2][discard: 150] = 23, [2][discard: 151] = 19, [2][discard: 152] = 21, [2][discard: 153] = 16, [2][discard: 154] = 17, [2][discard: 155] = 16, [2][discard: 156] = 9, [2][discard: 157] = 26, [2][discard: 158] = 0, [2][discard: 159] = 21, [2][discard: 160] = 21, [2][discard: 161] = 6, [2][discard: 162] = 1, [2][discard: 163] = 20, [2][discard: 164] = 15, [2][discard: 165] = 25, [2][discard: 166] = 25, [2][discard: 167] = 20, [2][discard: 168] = 12, [2][discard: 169] = 11, [2][discard: 170] = 24, [2][discard: 171] = 10, [2][discard: 172] = 11, [2][discard: 173] = 7, [2][discard: 174] = 24, [2][discard: 175] = 2, 
--END PRINTING GAME STATE -------------------

adventurer test - iteration 307 -> FAILED tests
*************** ITERATION # 308 ***************  
NOTE Player 1: found 85 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 311, supplyTotalPre: 309
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 311
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 308 -> FAILED tests
*************** ITERATION # 309 ***************  
NOTE Player 2: found 76 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 230, supplyTotalPre: 228
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 230
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 309 -> FAILED tests
*************** ITERATION # 310 ***************  
NOTE Player 1: found 96 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 260, supplyTotalPre: 258
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 260
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 310 -> FAILED tests
*************** ITERATION # 311 ***************  
NOTE Player 2: found 54 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 65, supplyTotalPre: 63
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 65
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 311 -> FAILED tests
*************** ITERATION # 312 ***************  
NOTE Player 1: found 28 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 210, supplyTotalPre: 208
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 210
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 312 -> FAILED tests
*************** ITERATION # 313 ***************  
NOTE Player 0: found 22 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 92, supplyTotalPre: 90
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 92
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 313 -> FAILED tests
*************** ITERATION # 314 ***************  
NOTE Player 2: found 56 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 75, supplyTotalPre: 73
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 75
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 314 -> FAILED tests
*************** ITERATION # 315 ***************  
NOTE Player 0: found 67 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 339, supplyTotalPre: 337
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 339
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 315 -> FAILED tests
*************** ITERATION # 316 ***************  
NOTE Player 1: found 65 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 297, supplyTotalPre: 295
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 297
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 316 -> FAILED tests
*************** ITERATION # 317 ***************  
NOTE Player 1: did NOT find treasure in player's deck
NOTE Player 1: found 2 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 ->  -- Couldn't draw card -- 
Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): SUCCESS: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Test4 (check deck+discard count): branch-1 FAILED: player #1, ccheck deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 454
Branch-1 FAILED: player #1, check if top 2 cards of hand are treasure cards
Debug Data: G->hand[topHand-2]: 1554690000, Gpre.hand[topHand-2]): 1554663544
adventurer test - iteration 317 -> FAILED tests
*************** ITERATION # 318 ***************  
NOTE Player 0: found 106 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 492, supplyTotalPre: 490
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 492
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 318 -> FAILED tests
*************** ITERATION # 319 ***************  
NOTE Player 2: found 72 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 360, supplyTotalPre: 358
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 360
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 319 -> FAILED tests
*************** ITERATION # 320 ***************  
NOTE Player 2: found 42 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 369, supplyTotalPre: 367
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 369
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 320 -> FAILED tests
*************** ITERATION # 321 ***************  
NOTE Player 0: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 438, supplyTotalPre: 436
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 438
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 321 -> FAILED tests
*************** ITERATION # 322 ***************  
NOTE Player 2: found 84 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 390, supplyTotalPre: 388
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 390
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 322 -> FAILED tests
*************** ITERATION # 323 ***************  
NOTE Player 0: found 19 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 381, supplyTotalPre: 379
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 381
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 323 -> FAILED tests
*************** ITERATION # 324 ***************  
NOTE Player 0: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 450, supplyTotalPre: 448
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 450
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 324 -> FAILED tests
*************** ITERATION # 325 ***************  
NOTE Player 2: found 28 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 188, supplyTotalPre: 186
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 188
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 325 -> FAILED tests
*************** ITERATION # 326 ***************  
NOTE Player 1: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 334, supplyTotalPre: 332
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 334
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 326 -> FAILED tests
*************** ITERATION # 327 ***************  
NOTE Player 1: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 399, supplyTotalPre: 397
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 399
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 327 -> FAILED tests
*************** ITERATION # 328 ***************  
NOTE Player 2: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 243, supplyTotalPre: 241
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 243
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 328 -> FAILED tests
*************** ITERATION # 329 ***************  
NOTE Player 1: found 33 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 114, supplyTotalPre: 112
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 114
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 329 -> FAILED tests
*************** ITERATION # 330 ***************  
NOTE Player 1: found 57 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 385, supplyTotalPre: 383
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 385
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 330 -> FAILED tests
*************** ITERATION # 331 ***************  
NOTE Player 0: found 54 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 36, supplyTotalPre: 34
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 36
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 331 -> FAILED tests
*************** ITERATION # 332 ***************  
NOTE Player 0: found 86 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 120, supplyTotalPre: 118
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 120
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 332 -> FAILED tests
*************** ITERATION # 333 ***************  
NOTE Player 0: found 40 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 336, supplyTotalPre: 334
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 336
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 333 -> FAILED tests
*************** ITERATION # 334 ***************  
NOTE Player 0: did NOT find treasure in player's discard
NOTE Player 0: found 21 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 132, supplyTotalPre: 130
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 132
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 334 -> FAILED tests
*************** ITERATION # 335 ***************  
NOTE Player 0: found 66 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 479, supplyTotalPre: 477
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 479
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 335 -> FAILED tests
*************** ITERATION # 336 ***************  
NOTE Player 2: found 67 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 462, supplyTotalPre: 460
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 462
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 336 -> FAILED tests
*************** ITERATION # 337 ***************  
NOTE Player 0: found 13 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 159, supplyTotalPre: 157
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 159
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 337 -> FAILED tests
*************** ITERATION # 338 ***************  
NOTE Player 0: found 33 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 445, supplyTotalPre: 443
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 445
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 338 -> FAILED tests
*************** ITERATION # 339 ***************  
NOTE Player 0: found 62 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 435, supplyTotalPre: 433
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 435
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 339 -> FAILED tests
*************** ITERATION # 340 ***************  
NOTE Player 1: found 59 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 153, supplyTotalPre: 151
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 153
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 340 -> FAILED tests
*************** ITERATION # 341 ***************  
NOTE Player 2: found 69 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 379, supplyTotalPre: 377
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 379
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 341 -> FAILED tests
*************** ITERATION # 342 ***************  
NOTE Player 1: found 48 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 42, supplyTotalPre: 40
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 42
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 342 -> FAILED tests
*************** ITERATION # 343 ***************  
NOTE Player 2: found 38 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 386, supplyTotalPre: 384
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 386
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 343 -> FAILED tests
*************** ITERATION # 344 ***************  
NOTE Player 2: found 110 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 177, supplyTotalPre: 175
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 177
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 344 -> FAILED tests
*************** ITERATION # 345 ***************  
NOTE Player 1: found 82 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 192, supplyTotalPre: 190
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 192
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 345 -> FAILED tests
*************** ITERATION # 346 ***************  
NOTE Player 0: found 4 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 12, supplyTotalPre: 10
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 12
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 346 -> FAILED tests
*************** ITERATION # 347 ***************  
NOTE Player 2: did NOT find treasure in player's deck
NOTE Player 2: found 31 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 325, supplyTotalPre: 323
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 325
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 347 -> FAILED tests
*************** ITERATION # 348 ***************  
NOTE Player 0: did NOT find treasure in player's discard
NOTE Player 0: found 32 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 208, supplyTotalPre: 206
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 208
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 348 -> FAILED tests
*************** ITERATION # 349 ***************  
NOTE Player 1: did NOT find treasure in player's deck
NOTE Player 1: found 23 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 298, supplyTotalPre: 296
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 298
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 349 -> FAILED tests
*************** ITERATION # 350 ***************  
NOTE Player 1: found 110 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 25, supplyTotalPre: 23
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 25
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 350 -> FAILED tests
*************** ITERATION # 351 ***************  
NOTE Player 1: found 48 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 184, supplyTotalPre: 182
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 184
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 351 -> FAILED tests
*************** ITERATION # 352 ***************  
NOTE Player 0: found 69 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 118, supplyTotalPre: 116
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 118
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 352 -> FAILED tests
*************** ITERATION # 353 ***************  
NOTE Player 0: found 72 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 326, supplyTotalPre: 324
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 326
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 353 -> FAILED tests
*************** ITERATION # 354 ***************  
NOTE Player 1: found 94 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 456, supplyTotalPre: 454
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 456
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 354 -> FAILED tests
*************** ITERATION # 355 ***************  
NOTE Player 1: found 31 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 496, supplyTotalPre: 494
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 496
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 355 -> FAILED tests
*************** ITERATION # 356 ***************  
NOTE Player 0: found 79 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 389, supplyTotalPre: 387
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 389
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 356 -> FAILED tests
*************** ITERATION # 357 ***************  
NOTE Player 2: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 223, supplyTotalPre: 221
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 223
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 357 -> FAILED tests
*************** ITERATION # 358 ***************  
NOTE Player 2: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 449, supplyTotalPre: 447
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 449
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 358 -> FAILED tests
*************** ITERATION # 359 ***************  
NOTE Player 1: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 339, supplyTotalPre: 337
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 339
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 359 -> FAILED tests
*************** ITERATION # 360 ***************  
NOTE Player 1: found 24 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 207, supplyTotalPre: 205
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 207
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 360 -> FAILED tests
*************** ITERATION # 361 ***************  
NOTE Player 2: found 57 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 17, supplyTotalPre: 15
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 17
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 361 -> FAILED tests
*************** ITERATION # 362 ***************  
NOTE Player 2: found 67 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 337, supplyTotalPre: 335
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 337
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 362 -> FAILED tests
*************** ITERATION # 363 ***************  
NOTE Player 2: found 42 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 107, supplyTotalPre: 105
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 107
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 363 -> FAILED tests
*************** ITERATION # 364 ***************  
NOTE Player 0: found 42 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 121, supplyTotalPre: 119
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 121
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 364 -> FAILED tests
*************** ITERATION # 365 ***************  
NOTE Player 2: found 56 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 490, supplyTotalPre: 488
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 490
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 365 -> FAILED tests
*************** ITERATION # 366 ***************  
NOTE Player 0: found 36 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 292, supplyTotalPre: 290
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 292
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 366 -> FAILED tests
*************** ITERATION # 367 ***************  
NOTE Player 2: found 69 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 428, supplyTotalPre: 426
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 428
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 367 -> FAILED tests
*************** ITERATION # 368 ***************  
NOTE Player 2: found 80 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 412, supplyTotalPre: 410
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 412
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 368 -> FAILED tests
*************** ITERATION # 369 ***************  
NOTE Player 1: found 44 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 400, supplyTotalPre: 398
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 400
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 369 -> FAILED tests
*************** ITERATION # 370 ***************  
NOTE Player 1: found 23 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 320, supplyTotalPre: 318
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 320
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 370 -> FAILED tests
*************** ITERATION # 371 ***************  
NOTE Player 0: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 447, supplyTotalPre: 445
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 447
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 371 -> FAILED tests
*************** ITERATION # 372 ***************  
NOTE Player 2: found 26 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 246, supplyTotalPre: 244
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 246
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 372 -> FAILED tests
*************** ITERATION # 373 ***************  
NOTE Player 0: found 45 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 200, supplyTotalPre: 198
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 200
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 373 -> FAILED tests
*************** ITERATION # 374 ***************  
NOTE Player 1: found 98 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 229, supplyTotalPre: 227
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 229
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 374 -> FAILED tests
*************** ITERATION # 375 ***************  
NOTE Player 2: did NOT find Adventurer in player's hand
NOTE Player 2: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): SUCCESS: player #2, check if played card has increased by 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): ********** no assert performed
Test4 (check deck+discard count): ********** no assert performed
Test5 (check top cards of hand): topHand == 14
Branch-3 FAILED: player #2, check if top card of hand is unchanged
Debug Data: G->hand[topHand-2]: 1553810000, Gpre.hand[topHand-2]): 1553783544
printing POST game state: 

--START PRINTING GAME STATE -------------------
numPlayers = 3
SUPPLY TOTAL=169, supplyCount: #0: 4, #1: 5, #2: 0, #3: 12, #4: 15, #5: 17, #6: 26, #7: 1, #8: 0, #9: 5, #10: 3, #11: 0, #12: 12, #13: 11, #14: 8, #15: 5, #16: 4, #17: 3, #18: 0, #19: 3, #20: 3, #21: 8, #22: 4, #23: 11, #24: 4, #25: 2, #26: 3, 
embargoTokens: #0: 0, #1: 0, #2: 0, #3: 0, #4: 0, #5: 0, #6: 0, #7: 0, #8: 0, #9: 0, #10: 0, #11: 0, #12: 0, #13: 0, #14: 0, #15: 0, #16: 0, #17: 0, #18: 0, #19: 0, #20: 0, #21: 0, #22: 0, #23: 0, #24: 0, #25: 0, #26: 0, 
outpostPlayed = 0, outpostTurn = 387389207, whoseTurn = 2, phase = 0, numActions = 1, coins = 4, numBuys = 1
playedCardCount = 0, playedCards[x]: 
---------------------
PLAYER #0, HANDCOUNT=5, hand[player][hand]: [0][hand:0] = 1, [0][hand:1] = 4, [0][hand:2] = 4, [0][hand:3] = 4, [0][hand:4] = 4, 
PLAYER #0, DECKCOUNT=5, deck[player][hand]: [0][deck:0] = 1, [0][deck:1] = 4, [0][deck:2] = 4, [0][deck:3] = 1, [0][deck:4] = 4, 
PLAYER #0, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #1, HANDCOUNT=0, hand[player][hand]: 
PLAYER #1, DECKCOUNT=10, deck[player][hand]: [1][deck:0] = 4, [1][deck:1] = 1, [1][deck:2] = 4, [1][deck:3] = 1, [1][deck:4] = 4, [1][deck:5] = 4, [1][deck:6] = 4, [1][deck:7] = 4, [1][deck:8] = 4, [1][deck:9] = 1, 
PLAYER #1, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #2, HANDCOUNT=14, hand[player][hand]: [2][hand:0] = 0, [2][hand:1] = 13, [2][hand:2] = 0, [2][hand:3] = 6, [2][hand:4] = 10, [2][hand:5] = 2, [2][hand:6] = 5, [2][hand:7] = 20, [2][hand:8] = 20, [2][hand:9] = 9, [2][hand:10] = 10, [2][hand:11] = 8, [2][hand:12] = 5, [2][hand:13] = 4, 
PLAYER #2, DECKCOUNT=287, deck[player][hand]: [2][deck:0] = 18, [2][deck:1] = 1, [2][deck:2] = 18, [2][deck:3] = 23, [2][deck:4] = 3, [2][deck:5] = 4, [2][deck:6] = 2, [2][deck:7] = 5, [2][deck:8] = 1, [2][deck:9] = 18, [2][deck:10] = 17, [2][deck:11] = 20, [2][deck:12] = 16, [2][deck:13] = 2, [2][deck:14] = 4, [2][deck:15] = 8, [2][deck:16] = 9, [2][deck:17] = 25, [2][deck:18] = 13, [2][deck:19] = 26, [2][deck:20] = 21, [2][deck:21] = 23, [2][deck:22] = 2, [2][deck:23] = 0, [2][deck:24] = 19, [2][deck:25] = 12, [2][deck:26] = 17, [2][deck:27] = 7, [2][deck:28] = 8, [2][deck:29] = 0, [2][deck:30] = 9, [2][deck:31] = 4, [2][deck:32] = 20, [2][deck:33] = 23, [2][deck:34] = 22, [2][deck:35] = 8, [2][deck:36] = 3, [2][deck:37] = 5, [2][deck:38] = 7, [2][deck:39] = 6, [2][deck:40] = 8, [2][deck:41] = 19, [2][deck:42] = 5, [2][deck:43] = 18, [2][deck:44] = 26, [2][deck:45] = 19, [2][deck:46] = 19, [2][deck:47] = 1, [2][deck:48] = 6, [2][deck:49] = 13, [2][deck:50] = 9, [2][deck:51] = 2, [2][deck:52] = 17, [2][deck:53] = 6, [2][deck:54] = 8, [2][deck:55] = 23, [2][deck:56] = 17, [2][deck:57] = 13, [2][deck:58] = 14, [2][deck:59] = 20, [2][deck:60] = 10, [2][deck:61] = 0, [2][deck:62] = 0, [2][deck:63] = 20, [2][deck:64] = 22, [2][deck:65] = 21, [2][deck:66] = 9, [2][deck:67] = 26, [2][deck:68] = 18, [2][deck:69] = 8, [2][deck:70] = 0, [2][deck:71] = 19, [2][deck:72] = 7, [2][deck:73] = 19, [2][deck:74] = 4, [2][deck:75] = 8, [2][deck:76] = 15, [2][deck:77] = 7, [2][deck:78] = 7, [2][deck:79] = 3, [2][deck:80] = 6, [2][deck:81] = 26, [2][deck:82] = 12, [2][deck:83] = 1, [2][deck:84] = 7, [2][deck:85] = 11, [2][deck:86] = 23, [2][deck:87] = 0, [2][deck:88] = 14, [2][deck:89] = 23, [2][deck:90] = 17, [2][deck:91] = 10, [2][deck:92] = 17, [2][deck:93] = 0, [2][deck:94] = 16, [2][deck:95] = 24, [2][deck:96] = 18, [2][deck:97] = 5, [2][deck:98] = 0, [2][deck:99] = 14, [2][deck:100] = 24, [2][deck:101] = 19, [2][deck:102] = 13, [2][deck:103] = 1, [2][deck:104] = 17, [2][deck:105] = 21, [2][deck:106] = 15, [2][deck:107] = 23, [2][deck:108] = 0, [2][deck:109] = 4, [2][deck:110] = 17, [2][deck:111] = 5, [2][deck:112] = 0, [2][deck:113] = 15, [2][deck:114] = 2, [2][deck:115] = 23, [2][deck:116] = 16, [2][deck:117] = 2, [2][deck:118] = 23, [2][deck:119] = 8, [2][deck:120] = 24, [2][deck:121] = 23, [2][deck:122] = 2, [2][deck:123] = 8, [2][deck:124] = 6, [2][deck:125] = 13, [2][deck:126] = 10, [2][deck:127] = 2, [2][deck:128] = 1, [2][deck:129] = 1, [2][deck:130] = 24, [2][deck:131] = 5, [2][deck:132] = 15, [2][deck:133] = 6, [2][deck:134] = 8, [2][deck:135] = 20, [2][deck:136] = 26, [2][deck:137] = 17, [2][deck:138] = 23, [2][deck:139] = 12, [2][deck:140] = 12, [2][deck:141] = 3, [2][deck:142] = 18, [2][deck:143] = 6, [2][deck:144] = 9, [2][deck:145] = 4, [2][deck:146] = 0, [2][deck:147] = 25, [2][deck:148] = 2, [2][deck:149] = 0, [2][deck:150] = 16, [2][deck:151] = 6, [2][deck:152] = 18, [2][deck:153] = 22, [2][deck:154] = 12, [2][deck:155] = 16, [2][deck:156] = 22, [2][deck:157] = 24, [2][deck:158] = 18, [2][deck:159] = 21, [2][deck:160] = 10, [2][deck:161] = 2, [2][deck:162] = 16, [2][deck:163] = 20, [2][deck:164] = 17, [2][deck:165] = 14, [2][deck:166] = 2, [2][deck:167] = 18, [2][deck:168] = 25, [2][deck:169] = 7, [2][deck:170] = 19, [2][deck:171] = 14, [2][deck:172] = 11, [2][deck:173] = 17, [2][deck:174] = 16, [2][deck:175] = 19, [2][deck:176] = 2, [2][deck:177] = 14, [2][deck:178] = 26, [2][deck:179] = 16, [2][deck:180] = 18, [2][deck:181] = 13, [2][deck:182] = 19, [2][deck:183] = 3, [2][deck:184] = 14, [2][deck:185] = 10, [2][deck:186] = 1, [2][deck:187] = 15, [2][deck:188] = 5, [2][deck:189] = 15, [2][deck:190] = 22, [2][deck:191] = 23, [2][deck:192] = 26, [2][deck:193] = 24, [2][deck:194] = 21, [2][deck:195] = 16, [2][deck:196] = 23, [2][deck:197] = 3, [2][deck:198] = 24, [2][deck:199] = 11, [2][deck:200] = 8, [2][deck:201] = 0, [2][deck:202] = 5, [2][deck:203] = 11, [2][deck:204] = 4, [2][deck:205] = 21, [2][deck:206] = 2, [2][deck:207] = 19, [2][deck:208] = 3, [2][deck:209] = 25, [2][deck:210] = 15, [2][deck:211] = 13, [2][deck:212] = 7, [2][deck:213] = 17, [2][deck:214] = 1, [2][deck:215] = 16, [2][deck:216] = 21, [2][deck:217] = 16, [2][deck:218] = 12, [2][deck:219] = 23, [2][deck:220] = 16, [2][deck:221] = 25, [2][deck:222] = 14, [2][deck:223] = 20, [2][deck:224] = 2, [2][deck:225] = 3, [2][deck:226] = 9, [2][deck:227] = 16, [2][deck:228] = 21, [2][deck:229] = 8, [2][deck:230] = 8, [2][deck:231] = 21, [2][deck:232] = 2, [2][deck:233] = 7, [2][deck:234] = 5, [2][deck:235] = 0, [2][deck:236] = 25, [2][deck:237] = 13, [2][deck:238] = 20, [2][deck:239] = 8, [2][deck:240] = 26, [2][deck:241] = 18, [2][deck:242] = 10, [2][deck:243] = 24, [2][deck:244] = 12, [2][deck:245] = 14, [2][deck:246] = 13, [2][deck:247] = 8, [2][deck:248] = 2, [2][deck:249] = 2, [2][deck:250] = 12, [2][deck:251] = 14, [2][deck:252] = 17, [2][deck:253] = 0, [2][deck:254] = 24, [2][deck:255] = 11, [2][deck:256] = 25, [2][deck:257] = 8, [2][deck:258] = 2, [2][deck:259] = 24, [2][deck:260] = 18, [2][deck:261] = 19, [2][deck:262] = 17, [2][deck:263] = 8, [2][deck:264] = 19, [2][deck:265] = 15, [2][deck:266] = 10, [2][deck:267] = 24, [2][deck:268] = 8, [2][deck:269] = 16, [2][deck:270] = 22, [2][deck:271] = 9, [2][deck:272] = 0, [2][deck:273] = 25, [2][deck:274] = 2, [2][deck:275] = 3, [2][deck:276] = 3, [2][deck:277] = 19, [2][deck:278] = 20, [2][deck:279] = 18, [2][deck:280] = 12, [2][deck:281] = 19, [2][deck:282] = 4, [2][deck:283] = 25, [2][deck:284] = 21, [2][deck:285] = 4, [2][deck:286] = 20, 
PLAYER #2, DISCARDCOUNT=103, discard[player][hand]: [2][discard: 0] = 4, [2][discard: 1] = 17, [2][discard: 2] = 21, [2][discard: 3] = 19, [2][discard: 4] = 16, [2][discard: 5] = 10, [2][discard: 6] = 11, [2][discard: 7] = 26, [2][discard: 8] = 15, [2][discard: 9] = 22, [2][discard: 10] = 4, [2][discard: 11] = 4, [2][discard: 12] = 1, [2][discard: 13] = 5, [2][discard: 14] = 11, [2][discard: 15] = 12, [2][discard: 16] = 22, [2][discard: 17] = 11, [2][discard: 18] = 18, [2][discard: 19] = 11, [2][discard: 20] = 3, [2][discard: 21] = 23, [2][discard: 22] = 11, [2][discard: 23] = 19, [2][discard: 24] = 20, [2][discard: 25] = 22, [2][discard: 26] = 5, [2][discard: 27] = 16, [2][discard: 28] = 16, [2][discard: 29] = 3, [2][discard: 30] = 25, [2][discard: 31] = 0, [2][discard: 32] = 24, [2][discard: 33] = 23, [2][discard: 34] = 19, [2][discard: 35] = 10, [2][discard: 36] = 6, [2][discard: 37] = 25, [2][discard: 38] = 19, [2][discard: 39] = 1, [2][discard: 40] = 7, [2][discard: 41] = 21, [2][discard: 42] = 3, [2][discard: 43] = 16, [2][discard: 44] = 13, [2][discard: 45] = 16, [2][discard: 46] = 6, [2][discard: 47] = 21, [2][discard: 48] = 19, [2][discard: 49] = 13, [2][discard: 50] = 12, [2][discard: 51] = 11, [2][discard: 52] = 22, [2][discard: 53] = 15, [2][discard: 54] = 16, [2][discard: 55] = 19, [2][discard: 56] = 13, [2][discard: 57] = 8, [2][discard: 58] = 7, [2][discard: 59] = 5, [2][discard: 60] = 17, [2][discard: 61] = 9, [2][discard: 62] = 16, [2][discard: 63] = 20, [2][discard: 64] = 1, [2][discard: 65] = 13, [2][discard: 66] = 23, [2][discard: 67] = 21, [2][discard: 68] = 3, [2][discard: 69] = 15, [2][discard: 70] = 17, [2][discard: 71] = 5, [2][discard: 72] = 4, [2][discard: 73] = 13, [2][discard: 74] = 21, [2][discard: 75] = 10, [2][discard: 76] = 19, [2][discard: 77] = 8, [2][discard: 78] = 13, [2][discard: 79] = 16, [2][discard: 80] = 24, [2][discard: 81] = 22, [2][discard: 82] = 18, [2][discard: 83] = 5, [2][discard: 84] = 14, [2][discard: 85] = 22, [2][discard: 86] = 19, [2][discard: 87] = 6, [2][discard: 88] = 21, [2][discard: 89] = 12, [2][discard: 90] = 0, [2][discard: 91] = 6, [2][discard: 92] = 11, [2][discard: 93] = 23, [2][discard: 94] = 25, [2][discard: 95] = 13, [2][discard: 96] = 10, [2][discard: 97] = 23, [2][discard: 98] = 7, [2][discard: 99] = 19, [2][discard: 100] = 13, [2][discard: 101] = 21, [2][discard: 102] = 18, 
--END PRINTING GAME STATE -------------------

adventurer test - iteration 375 -> FAILED tests
*************** ITERATION # 376 ***************  
NOTE Player 2: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 183, supplyTotalPre: 181
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 183
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 376 -> FAILED tests
*************** ITERATION # 377 ***************  
NOTE Player 2: found 104 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 289, supplyTotalPre: 287
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 289
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 377 -> FAILED tests
*************** ITERATION # 378 ***************  
NOTE Player 0: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 31, supplyTotalPre: 29
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 31
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 378 -> FAILED tests
*************** ITERATION # 379 ***************  
NOTE Player 1: found 49 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 56, supplyTotalPre: 54
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 56
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 379 -> FAILED tests
*************** ITERATION # 380 ***************  
NOTE Player 2: found 40 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 56, supplyTotalPre: 54
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 56
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 380 -> FAILED tests
*************** ITERATION # 381 ***************  
NOTE Player 0: found 82 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 466, supplyTotalPre: 464
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 466
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 381 -> FAILED tests
*************** ITERATION # 382 ***************  
NOTE Player 2: found 32 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 323, supplyTotalPre: 321
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 323
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 382 -> FAILED tests
*************** ITERATION # 383 ***************  
NOTE Player 1: found 84 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 480, supplyTotalPre: 478
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 480
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 383 -> FAILED tests
*************** ITERATION # 384 ***************  
NOTE Player 0: found 47 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 122, supplyTotalPre: 120
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 122
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 384 -> FAILED tests
*************** ITERATION # 385 ***************  
NOTE Player 1: found 80 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 206, supplyTotalPre: 204
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 206
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 385 -> FAILED tests
*************** ITERATION # 386 ***************  
NOTE Player 0: found 60 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 250, supplyTotalPre: 248
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 250
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 386 -> FAILED tests
*************** ITERATION # 387 ***************  
NOTE Player 2: found 79 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 387, supplyTotalPre: 385
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 387
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 387 -> FAILED tests
*************** ITERATION # 388 ***************  
NOTE Player 0: found 83 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 46, supplyTotalPre: 44
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 46
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 388 -> FAILED tests
*************** ITERATION # 389 ***************  
NOTE Player 2: found 84 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 301, supplyTotalPre: 299
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 301
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 389 -> FAILED tests
*************** ITERATION # 390 ***************  
NOTE Player 1: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 156, supplyTotalPre: 154
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 156
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 390 -> FAILED tests
*************** ITERATION # 391 ***************  
NOTE Player 1: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 147, supplyTotalPre: 145
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 147
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 391 -> FAILED tests
*************** ITERATION # 392 ***************  
NOTE Player 1: found 52 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 44, supplyTotalPre: 42
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 44
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 392 -> FAILED tests
*************** ITERATION # 393 ***************  
NOTE Player 1: found 64 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 28, supplyTotalPre: 26
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 28
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 393 -> FAILED tests
*************** ITERATION # 394 ***************  
NOTE Player 0: found 73 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 425, supplyTotalPre: 423
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 425
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 394 -> FAILED tests
*************** ITERATION # 395 ***************  
NOTE Player 0: found 48 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 391, supplyTotalPre: 389
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 391
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 395 -> FAILED tests
*************** ITERATION # 396 ***************  
NOTE Player 1: found 26 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 361, supplyTotalPre: 359
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 361
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 396 -> FAILED tests
*************** ITERATION # 397 ***************  
NOTE Player 0: found 62 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 496, supplyTotalPre: 494
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 496
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 397 -> FAILED tests
*************** ITERATION # 398 ***************  
NOTE Player 2: found 82 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 157, supplyTotalPre: 155
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 157
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 398 -> FAILED tests
*************** ITERATION # 399 ***************  
NOTE Player 1: found 76 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 295, supplyTotalPre: 293
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 295
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 399 -> FAILED tests
*************** ITERATION # 400 ***************  
NOTE Player 2: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 354, supplyTotalPre: 352
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 354
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 400 -> FAILED tests
*************** ITERATION # 401 ***************  
NOTE Player 1: found 49 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 428, supplyTotalPre: 426
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 428
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 401 -> FAILED tests
*************** ITERATION # 402 ***************  
NOTE Player 0: found 52 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 243, supplyTotalPre: 241
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 243
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 402 -> FAILED tests
*************** ITERATION # 403 ***************  
NOTE Player 2: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 53, supplyTotalPre: 51
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 53
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 403 -> FAILED tests
*************** ITERATION # 404 ***************  
NOTE Player 1: found 11 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 418, supplyTotalPre: 416
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 418
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 404 -> FAILED tests
*************** ITERATION # 405 ***************  
NOTE Player 2: did NOT find Adventurer in player's hand
NOTE Player 2: did NOT find treasure in player's deck
NOTE Player 2: found 26 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): SUCCESS: player #2, check if played card has increased by 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): ********** no assert performed
Test4 (check deck+discard count): ********** no assert performed
Test5 (check top cards of hand): topHand == 46
Branch-3 FAILED: player #2, check if top card of hand is unchanged
Debug Data: G->hand[topHand-2]: 1553874000, Gpre.hand[topHand-2]): 1553847544
printing POST game state: 

--START PRINTING GAME STATE -------------------
numPlayers = 3
SUPPLY TOTAL=252, supplyCount: #0: 16, #1: 5, #2: 2, #3: 11, #4: 36, #5: 34, #6: 22, #7: 9, #8: 12, #9: 8, #10: 11, #11: 7, #12: 2, #13: 4, #14: 8, #15: 4, #16: 0, #17: 2, #18: 2, #19: 6, #20: 7, #21: -1, #22: 9, #23: 12, #24: 11, #25: 5, #26: 8, 
embargoTokens: #0: 0, #1: 0, #2: 0, #3: 0, #4: 0, #5: 0, #6: 0, #7: 0, #8: 0, #9: 0, #10: 0, #11: 0, #12: 0, #13: 0, #14: 0, #15: 0, #16: 0, #17: 0, #18: 0, #19: 0, #20: 0, #21: 0, #22: 0, #23: 0, #24: 0, #25: 0, #26: 0, 
outpostPlayed = 0, outpostTurn = 387389207, whoseTurn = 2, phase = 0, numActions = 1, coins = 4, numBuys = 1
playedCardCount = 0, playedCards[x]: 
---------------------
PLAYER #0, HANDCOUNT=5, hand[player][hand]: [0][hand:0] = 1, [0][hand:1] = 4, [0][hand:2] = 4, [0][hand:3] = 4, [0][hand:4] = 4, 
PLAYER #0, DECKCOUNT=5, deck[player][hand]: [0][deck:0] = 1, [0][deck:1] = 4, [0][deck:2] = 4, [0][deck:3] = 1, [0][deck:4] = 4, 
PLAYER #0, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #1, HANDCOUNT=0, hand[player][hand]: 
PLAYER #1, DECKCOUNT=10, deck[player][hand]: [1][deck:0] = 4, [1][deck:1] = 1, [1][deck:2] = 4, [1][deck:3] = 1, [1][deck:4] = 4, [1][deck:5] = 4, [1][deck:6] = 4, [1][deck:7] = 4, [1][deck:8] = 4, [1][deck:9] = 1, 
PLAYER #1, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #2, HANDCOUNT=46, hand[player][hand]: [2][hand:0] = 19, [2][hand:1] = 13, [2][hand:2] = 9, [2][hand:3] = 20, [2][hand:4] = 9, [2][hand:5] = 1, [2][hand:6] = 18, [2][hand:7] = 22, [2][hand:8] = 21, [2][hand:9] = 12, [2][hand:10] = 15, [2][hand:11] = 25, [2][hand:12] = 5, [2][hand:13] = 1, [2][hand:14] = 8, [2][hand:15] = 15, [2][hand:16] = 16, [2][hand:17] = 16, [2][hand:18] = 3, [2][hand:19] = 20, [2][hand:20] = 19, [2][hand:21] = 24, [2][hand:22] = 4, [2][hand:23] = 16, [2][hand:24] = 6, [2][hand:25] = 18, [2][hand:26] = 2, [2][hand:27] = 16, [2][hand:28] = 4, [2][hand:29] = 11, [2][hand:30] = 25, [2][hand:31] = 13, [2][hand:32] = 4, [2][hand:33] = 8, [2][hand:34] = 20, [2][hand:35] = 23, [2][hand:36] = 6, [2][hand:37] = 12, [2][hand:38] = 19, [2][hand:39] = 26, [2][hand:40] = 10, [2][hand:41] = 10, [2][hand:42] = 11, [2][hand:43] = 23, [2][hand:44] = 5, [2][hand:45] = 5, 
PLAYER #2, DECKCOUNT=200, deck[player][hand]: [2][deck:0] = 10, [2][deck:1] = 18, [2][deck:2] = 8, [2][deck:3] = 25, [2][deck:4] = 20, [2][deck:5] = 13, [2][deck:6] = 8, [2][deck:7] = 25, [2][deck:8] = 18, [2][deck:9] = 26, [2][deck:10] = 12, [2][deck:11] = 0, [2][deck:12] = 12, [2][deck:13] = 9, [2][deck:14] = 12, [2][deck:15] = 8, [2][deck:16] = 1, [2][deck:17] = 18, [2][deck:18] = 23, [2][deck:19] = 24, [2][deck:20] = 6, [2][deck:21] = 24, [2][deck:22] = 16, [2][deck:23] = 24, [2][deck:24] = 17, [2][deck:25] = 4, [2][deck:26] = 4, [2][deck:27] = 3, [2][deck:28] = 25, [2][deck:29] = 16, [2][deck:30] = 2, [2][deck:31] = 15, [2][deck:32] = 18, [2][deck:33] = 5, [2][deck:34] = 7, [2][deck:35] = 16, [2][deck:36] = 9, [2][deck:37] = 17, [2][deck:38] = 1, [2][deck:39] = 13, [2][deck:40] = 5, [2][deck:41] = 9, [2][deck:42] = 8, [2][deck:43] = 6, [2][deck:44] = 24, [2][deck:45] = 16, [2][deck:46] = 15, [2][deck:47] = 2, [2][deck:48] = 26, [2][deck:49] = 14, [2][deck:50] = 23, [2][deck:51] = 13, [2][deck:52] = 7, [2][deck:53] = 26, [2][deck:54] = 22, [2][deck:55] = 8, [2][deck:56] = 1, [2][deck:57] = 11, [2][deck:58] = 24, [2][deck:59] = 13, [2][deck:60] = 20, [2][deck:61] = 18, [2][deck:62] = 2, [2][deck:63] = 15, [2][deck:64] = 14, [2][deck:65] = 17, [2][deck:66] = 5, [2][deck:67] = 22, [2][deck:68] = 3, [2][deck:69] = 16, [2][deck:70] = 20, [2][deck:71] = 18, [2][deck:72] = 9, [2][deck:73] = 2, [2][deck:74] = 19, [2][deck:75] = 16, [2][deck:76] = 24, [2][deck:77] = 18, [2][deck:78] = 10, [2][deck:79] = 7, [2][deck:80] = 7, [2][deck:81] = 21, [2][deck:82] = 11, [2][deck:83] = 18, [2][deck:84] = 3, [2][deck:85] = 5, [2][deck:86] = 24, [2][deck:87] = 6, [2][deck:88] = 15, [2][deck:89] = 16, [2][deck:90] = 17, [2][deck:91] = 15, [2][deck:92] = 21, [2][deck:93] = 7, [2][deck:94] = 3, [2][deck:95] = 18, [2][deck:96] = 22, [2][deck:97] = 23, [2][deck:98] = 17, [2][deck:99] = 10, [2][deck:100] = 8, [2][deck:101] = 13, [2][deck:102] = 3, [2][deck:103] = 2, [2][deck:104] = 6, [2][deck:105] = 24, [2][deck:106] = 26, [2][deck:107] = 4, [2][deck:108] = 10, [2][deck:109] = 5, [2][deck:110] = 11, [2][deck:111] = 15, [2][deck:112] = 12, [2][deck:113] = 1, [2][deck:114] = 18, [2][deck:115] = 12, [2][deck:116] = 11, [2][deck:117] = 26, [2][deck:118] = 19, [2][deck:119] = 6, [2][deck:120] = 0, [2][deck:121] = 18, [2][deck:122] = 25, [2][deck:123] = 16, [2][deck:124] = 3, [2][deck:125] = 22, [2][deck:126] = 7, [2][deck:127] = 4, [2][deck:128] = 22, [2][deck:129] = 23, [2][deck:130] = 10, [2][deck:131] = 23, [2][deck:132] = 16, [2][deck:133] = 23, [2][deck:134] = 9, [2][deck:135] = 10, [2][deck:136] = 23, [2][deck:137] = 16, [2][deck:138] = 17, [2][deck:139] = 13, [2][deck:140] = 19, [2][deck:141] = 7, [2][deck:142] = 4, [2][deck:143] = 4, [2][deck:144] = 20, [2][deck:145] = 20, [2][deck:146] = 9, [2][deck:147] = 4, [2][deck:148] = 4, [2][deck:149] = 19, [2][deck:150] = 3, [2][deck:151] = 6, [2][deck:152] = 0, [2][deck:153] = 18, [2][deck:154] = 18, [2][deck:155] = 16, [2][deck:156] = 21, [2][deck:157] = 0, [2][deck:158] = 16, [2][deck:159] = 17, [2][deck:160] = 23, [2][deck:161] = 23, [2][deck:162] = 16, [2][deck:163] = 20, [2][deck:164] = 16, [2][deck:165] = 11, [2][deck:166] = 20, [2][deck:167] = 7, [2][deck:168] = 1, [2][deck:169] = 12, [2][deck:170] = 0, [2][deck:171] = 17, [2][deck:172] = 3, [2][deck:173] = 20, [2][deck:174] = 19, [2][deck:175] = 10, [2][deck:176] = 7, [2][deck:177] = 16, [2][deck:178] = 26, [2][deck:179] = 10, [2][deck:180] = 26, [2][deck:181] = 4, [2][deck:182] = 17, [2][deck:183] = 13, [2][deck:184] = 25, [2][deck:185] = 9, [2][deck:186] = 5, [2][deck:187] = 15, [2][deck:188] = 13, [2][deck:189] = 16, [2][deck:190] = 2, [2][deck:191] = 21, [2][deck:192] = 5, [2][deck:193] = 0, [2][deck:194] = 6, [2][deck:195] = 7, [2][deck:196] = 4, [2][deck:197] = 10, [2][deck:198] = 24, [2][deck:199] = 19, 
PLAYER #2, DISCARDCOUNT=9, discard[player][hand]: [2][discard: 0] = 10, [2][discard: 1] = 20, [2][discard: 2] = 15, [2][discard: 3] = 7, [2][discard: 4] = 9, [2][discard: 5] = 24, [2][discard: 6] = 26, [2][discard: 7] = 7, [2][discard: 8] = 1, 
--END PRINTING GAME STATE -------------------

adventurer test - iteration 405 -> FAILED tests
*************** ITERATION # 406 ***************  
NOTE Player 0: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 228, supplyTotalPre: 226
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 228
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 406 -> FAILED tests
*************** ITERATION # 407 ***************  
NOTE Player 1: found 22 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 266, supplyTotalPre: 264
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 266
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 407 -> FAILED tests
*************** ITERATION # 408 ***************  
NOTE Player 1: found 57 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 366, supplyTotalPre: 364
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 366
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 408 -> FAILED tests
*************** ITERATION # 409 ***************  
NOTE Player 2: found 78 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 121, supplyTotalPre: 119
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 121
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 409 -> FAILED tests
*************** ITERATION # 410 ***************  
NOTE Player 2: found 42 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 138, supplyTotalPre: 136
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 138
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 410 -> FAILED tests
*************** ITERATION # 411 ***************  
NOTE Player 1: found 42 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 95, supplyTotalPre: 93
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 95
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 411 -> FAILED tests
*************** ITERATION # 412 ***************  
NOTE Player 1: found 38 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 289, supplyTotalPre: 287
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 289
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 412 -> FAILED tests
*************** ITERATION # 413 ***************  
NOTE Player 0: found 80 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 67, supplyTotalPre: 65
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 67
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 413 -> FAILED tests
*************** ITERATION # 414 ***************  
NOTE Player 2: found 56 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 67, supplyTotalPre: 65
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 67
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 414 -> FAILED tests
*************** ITERATION # 415 ***************  
NOTE Player 2: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 11, supplyTotalPre: 9
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 11
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 415 -> FAILED tests
*************** ITERATION # 416 ***************  
NOTE Player 1: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 373, supplyTotalPre: 371
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 373
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 416 -> FAILED tests
*************** ITERATION # 417 ***************  
NOTE Player 2: found 64 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 180, supplyTotalPre: 178
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 180
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 417 -> FAILED tests
*************** ITERATION # 418 ***************  
NOTE Player 2: found 28 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 40, supplyTotalPre: 38
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 40
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 418 -> FAILED tests
*************** ITERATION # 419 ***************  
NOTE Player 1: found 43 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 126, supplyTotalPre: 124
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 126
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 419 -> FAILED tests
*************** ITERATION # 420 ***************  
NOTE Player 2: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 476, supplyTotalPre: 474
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 476
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 420 -> FAILED tests
*************** ITERATION # 421 ***************  
NOTE Player 1: found 71 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 274, supplyTotalPre: 272
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 274
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 421 -> FAILED tests
*************** ITERATION # 422 ***************  
NOTE Player 2: found 7 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 18, supplyTotalPre: 16
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 18
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 422 -> FAILED tests
*************** ITERATION # 423 ***************  
NOTE Player 1: found 25 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 489, supplyTotalPre: 487
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 489
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 423 -> FAILED tests
*************** ITERATION # 424 ***************  
NOTE Player 1: found 73 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 430, supplyTotalPre: 428
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 430
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 424 -> FAILED tests
*************** ITERATION # 425 ***************  
NOTE Player 0: found 67 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 148, supplyTotalPre: 146
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 148
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 425 -> FAILED tests
*************** ITERATION # 426 ***************  
NOTE Player 2: found 34 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 387, supplyTotalPre: 385
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 387
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 426 -> FAILED tests
*************** ITERATION # 427 ***************  
NOTE Player 0: found 65 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 325, supplyTotalPre: 323
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 325
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 427 -> FAILED tests
*************** ITERATION # 428 ***************  
NOTE Player 0: found 84 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 83, supplyTotalPre: 81
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 83
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 428 -> FAILED tests
*************** ITERATION # 429 ***************  
NOTE Player 0: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 431, supplyTotalPre: 429
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 431
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 429 -> FAILED tests
*************** ITERATION # 430 ***************  
NOTE Player 2: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 22, supplyTotalPre: 20
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 22
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 430 -> FAILED tests
*************** ITERATION # 431 ***************  
NOTE Player 0: found 90 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 363, supplyTotalPre: 361
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 363
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 431 -> FAILED tests
*************** ITERATION # 432 ***************  
NOTE Player 0: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 44, supplyTotalPre: 42
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 44
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 432 -> FAILED tests
*************** ITERATION # 433 ***************  
NOTE Player 0: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 202, supplyTotalPre: 200
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 202
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 433 -> FAILED tests
*************** ITERATION # 434 ***************  
NOTE Player 0: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 314, supplyTotalPre: 312
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 314
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 434 -> FAILED tests
*************** ITERATION # 435 ***************  
NOTE Player 0: found 113 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 33, supplyTotalPre: 31
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 33
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 435 -> FAILED tests
*************** ITERATION # 436 ***************  
NOTE Player 2: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 250, supplyTotalPre: 248
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 250
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 436 -> FAILED tests
*************** ITERATION # 437 ***************  
NOTE Player 1: found 69 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 335, supplyTotalPre: 333
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 335
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 437 -> FAILED tests
*************** ITERATION # 438 ***************  
NOTE Player 2: found 23 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 136, supplyTotalPre: 134
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 136
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 438 -> FAILED tests
*************** ITERATION # 439 ***************  
NOTE Player 1: found 28 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 408, supplyTotalPre: 406
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 408
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 439 -> FAILED tests
*************** ITERATION # 440 ***************  
NOTE Player 2: found 66 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 88, supplyTotalPre: 86
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 88
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 440 -> FAILED tests
*************** ITERATION # 441 ***************  
NOTE Player 2: found 12 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 280, supplyTotalPre: 278
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 280
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 441 -> FAILED tests
*************** ITERATION # 442 ***************  
NOTE Player 2: found 33 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 364, supplyTotalPre: 362
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 364
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 442 -> FAILED tests
*************** ITERATION # 443 ***************  
NOTE Player 2: found 32 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 195, supplyTotalPre: 193
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 195
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 443 -> FAILED tests
*************** ITERATION # 444 ***************  
NOTE Player 1: found 72 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 389, supplyTotalPre: 387
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 389
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 444 -> FAILED tests
*************** ITERATION # 445 ***************  
NOTE Player 0: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 424, supplyTotalPre: 422
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 424
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 445 -> FAILED tests
*************** ITERATION # 446 ***************  
NOTE Player 2: found 76 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 71, supplyTotalPre: 69
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 71
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 446 -> FAILED tests
*************** ITERATION # 447 ***************  
NOTE Player 0: found 82 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 87, supplyTotalPre: 85
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 87
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 447 -> FAILED tests
*************** ITERATION # 448 ***************  
NOTE Player 0: did NOT find Adventurer in player's hand
NOTE Player 0: found 56 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): ********** no assert performed
Test4 (check deck+discard count): ********** no assert performed
Test5 (check top cards of hand): topHand == 13
Branch-3 FAILED: player #0, check if top card of hand is unchanged
Debug Data: G->hand[topHand-2]: 1553808000, Gpre.hand[topHand-2]): 1553781544
printing POST game state: 

--START PRINTING GAME STATE -------------------
numPlayers = 3
SUPPLY TOTAL=235, supplyCount: #0: 26, #1: 8, #2: 11, #3: 10, #4: 43, #5: 18, #6: 29, #7: 3, #8: 4, #9: 3, #10: 12, #11: 1, #12: 3, #13: 1, #14: 10, #15: 6, #16: -1, #17: 6, #18: 4, #19: 9, #20: -1, #21: 11, #22: -1, #23: 0, #24: 2, #25: 9, #26: 9, 
embargoTokens: #0: 0, #1: 0, #2: 0, #3: 0, #4: 0, #5: 0, #6: 0, #7: 0, #8: 0, #9: 0, #10: 0, #11: 0, #12: 0, #13: 0, #14: 0, #15: 0, #16: 0, #17: 0, #18: 0, #19: 0, #20: 0, #21: 0, #22: 0, #23: 0, #24: 0, #25: 0, #26: 0, 
outpostPlayed = 0, outpostTurn = 387389207, whoseTurn = 0, phase = 0, numActions = 1, coins = 4, numBuys = 1
playedCardCount = 0, playedCards[x]: 
---------------------
PLAYER #0, HANDCOUNT=13, hand[player][hand]: [0][hand:0] = 10, [0][hand:1] = 18, [0][hand:2] = 17, [0][hand:3] = 14, [0][hand:4] = 14, [0][hand:5] = 26, [0][hand:6] = 22, [0][hand:7] = 18, [0][hand:8] = 25, [0][hand:9] = 16, [0][hand:10] = 25, [0][hand:11] = 4, [0][hand:12] = 5, 
PLAYER #0, DECKCOUNT=359, deck[player][hand]: [0][deck:0] = 16, [0][deck:1] = 12, [0][deck:2] = 10, [0][deck:3] = 20, [0][deck:4] = 1, [0][deck:5] = 3, [0][deck:6] = 12, [0][deck:7] = 9, [0][deck:8] = 4, [0][deck:9] = 21, [0][deck:10] = 10, [0][deck:11] = 2, [0][deck:12] = 20, [0][deck:13] = 10, [0][deck:14] = 5, [0][deck:15] = 10, [0][deck:16] = 0, [0][deck:17] = 8, [0][deck:18] = 13, [0][deck:19] = 16, [0][deck:20] = 14, [0][deck:21] = 25, [0][deck:22] = 3, [0][deck:23] = 14, [0][deck:24] = 7, [0][deck:25] = 23, [0][deck:26] = 14, [0][deck:27] = 0, [0][deck:28] = 24, [0][deck:29] = 20, [0][deck:30] = 13, [0][deck:31] = 3, [0][deck:32] = 10, [0][deck:33] = 13, [0][deck:34] = 5, [0][deck:35] = 8, [0][deck:36] = 11, [0][deck:37] = 8, [0][deck:38] = 6, [0][deck:39] = 23, [0][deck:40] = 3, [0][deck:41] = 11, [0][deck:42] = 23, [0][deck:43] = 13, [0][deck:44] = 23, [0][deck:45] = 17, [0][deck:46] = 25, [0][deck:47] = 24, [0][deck:48] = 3, [0][deck:49] = 7, [0][deck:50] = 25, [0][deck:51] = 14, [0][deck:52] = 5, [0][deck:53] = 25, [0][deck:54] = 5, [0][deck:55] = 3, [0][deck:56] = 7, [0][deck:57] = 4, [0][deck:58] = 11, [0][deck:59] = 9, [0][deck:60] = 19, [0][deck:61] = 1, [0][deck:62] = 25, [0][deck:63] = 20, [0][deck:64] = 4, [0][deck:65] = 1, [0][deck:66] = 16, [0][deck:67] = 25, [0][deck:68] = 24, [0][deck:69] = 19, [0][deck:70] = 18, [0][deck:71] = 22, [0][deck:72] = 10, [0][deck:73] = 12, [0][deck:74] = 14, [0][deck:75] = 16, [0][deck:76] = 25, [0][deck:77] = 0, [0][deck:78] = 0, [0][deck:79] = 2, [0][deck:80] = 16, [0][deck:81] = 22, [0][deck:82] = 25, [0][deck:83] = 22, [0][deck:84] = 1, [0][deck:85] = 6, [0][deck:86] = 4, [0][deck:87] = 1, [0][deck:88] = 20, [0][deck:89] = 15, [0][deck:90] = 1, [0][deck:91] = 22, [0][deck:92] = 25, [0][deck:93] = 25, [0][deck:94] = 3, [0][deck:95] = 14, [0][deck:96] = 19, [0][deck:97] = 8, [0][deck:98] = 5, [0][deck:99] = 6, [0][deck:100] = 5, [0][deck:101] = 0, [0][deck:102] = 24, [0][deck:103] = 23, [0][deck:104] = 10, [0][deck:105] = 0, [0][deck:106] = 9, [0][deck:107] = 16, [0][deck:108] = 6, [0][deck:109] = 20, [0][deck:110] = 11, [0][deck:111] = 21, [0][deck:112] = 4, [0][deck:113] = 20, [0][deck:114] = 3, [0][deck:115] = 4, [0][deck:116] = 14, [0][deck:117] = 14, [0][deck:118] = 8, [0][deck:119] = 3, [0][deck:120] = 18, [0][deck:121] = 14, [0][deck:122] = 6, [0][deck:123] = 14, [0][deck:124] = 5, [0][deck:125] = 21, [0][deck:126] = 13, [0][deck:127] = 7, [0][deck:128] = 18, [0][deck:129] = 8, [0][deck:130] = 12, [0][deck:131] = 13, [0][deck:132] = 16, [0][deck:133] = 26, [0][deck:134] = 16, [0][deck:135] = 18, [0][deck:136] = 22, [0][deck:137] = 25, [0][deck:138] = 10, [0][deck:139] = 14, [0][deck:140] = 21, [0][deck:141] = 9, [0][deck:142] = 10, [0][deck:143] = 8, [0][deck:144] = 25, [0][deck:145] = 16, [0][deck:146] = 13, [0][deck:147] = 1, [0][deck:148] = 26, [0][deck:149] = 26, [0][deck:150] = 6, [0][deck:151] = 3, [0][deck:152] = 7, [0][deck:153] = 7, [0][deck:154] = 6, [0][deck:155] = 6, [0][deck:156] = 9, [0][deck:157] = 19, [0][deck:158] = 22, [0][deck:159] = 2, [0][deck:160] = 20, [0][deck:161] = 21, [0][deck:162] = 1, [0][deck:163] = 0, [0][deck:164] = 6, [0][deck:165] = 20, [0][deck:166] = 1, [0][deck:167] = 3, [0][deck:168] = 15, [0][deck:169] = 12, [0][deck:170] = 1, [0][deck:171] = 9, [0][deck:172] = 6, [0][deck:173] = 19, [0][deck:174] = 25, [0][deck:175] = 6, [0][deck:176] = 10, [0][deck:177] = 11, [0][deck:178] = 24, [0][deck:179] = 10, [0][deck:180] = 17, [0][deck:181] = 2, [0][deck:182] = 20, [0][deck:183] = 9, [0][deck:184] = 9, [0][deck:185] = 17, [0][deck:186] = 12, [0][deck:187] = 15, [0][deck:188] = 16, [0][deck:189] = 13, [0][deck:190] = 7, [0][deck:191] = 2, [0][deck:192] = 20, [0][deck:193] = 13, [0][deck:194] = 14, [0][deck:195] = 15, [0][deck:196] = 13, [0][deck:197] = 5, [0][deck:198] = 9, [0][deck:199] = 10, [0][deck:200] = 11, [0][deck:201] = 3, [0][deck:202] = 21, [0][deck:203] = 7, [0][deck:204] = 26, [0][deck:205] = 0, [0][deck:206] = 1, [0][deck:207] = 20, [0][deck:208] = 12, [0][deck:209] = 15, [0][deck:210] = 16, [0][deck:211] = 3, [0][deck:212] = 6, [0][deck:213] = 11, [0][deck:214] = 3, [0][deck:215] = 15, [0][deck:216] = 9, [0][deck:217] = 5, [0][deck:218] = 1, [0][deck:219] = 18, [0][deck:220] = 16, [0][deck:221] = 14, [0][deck:222] = 19, [0][deck:223] = 2, [0][deck:224] = 9, [0][deck:225] = 11, [0][deck:226] = 1, [0][deck:227] = 22, [0][deck:228] = 26, [0][deck:229] = 15, [0][deck:230] = 8, [0][deck:231] = 11, [0][deck:232] = 3, [0][deck:233] = 23, [0][deck:234] = 0, [0][deck:235] = 8, [0][deck:236] = 10, [0][deck:237] = 25, [0][deck:238] = 5, [0][deck:239] = 9, [0][deck:240] = 13, [0][deck:241] = 17, [0][deck:242] = 18, [0][deck:243] = 9, [0][deck:244] = 16, [0][deck:245] = 18, [0][deck:246] = 0, [0][deck:247] = 21, [0][deck:248] = 2, [0][deck:249] = 22, [0][deck:250] = 21, [0][deck:251] = 14, [0][deck:252] = 18, [0][deck:253] = 24, [0][deck:254] = 1, [0][deck:255] = 11, [0][deck:256] = 25, [0][deck:257] = 25, [0][deck:258] = 8, [0][deck:259] = 13, [0][deck:260] = 15, [0][deck:261] = 9, [0][deck:262] = 24, [0][deck:263] = 8, [0][deck:264] = 8, [0][deck:265] = 24, [0][deck:266] = 24, [0][deck:267] = 14, [0][deck:268] = 10, [0][deck:269] = 17, [0][deck:270] = 7, [0][deck:271] = 12, [0][deck:272] = 25, [0][deck:273] = 11, [0][deck:274] = 12, [0][deck:275] = 14, [0][deck:276] = 5, [0][deck:277] = 23, [0][deck:278] = 8, [0][deck:279] = 4, [0][deck:280] = 18, [0][deck:281] = 11, [0][deck:282] = 8, [0][deck:283] = 0, [0][deck:284] = 11, [0][deck:285] = 5, [0][deck:286] = 25, [0][deck:287] = 0, [0][deck:288] = 13, [0][deck:289] = 11, [0][deck:290] = 0, [0][deck:291] = 19, [0][deck:292] = 23, [0][deck:293] = 22, [0][deck:294] = 1, [0][deck:295] = 26, [0][deck:296] = 5, [0][deck:297] = 7, [0][deck:298] = 3, [0][deck:299] = 0, [0][deck:300] = 20, [0][deck:301] = 7, [0][deck:302] = 25, [0][deck:303] = 8, [0][deck:304] = 3, [0][deck:305] = 12, [0][deck:306] = 11, [0][deck:307] = 3, [0][deck:308] = 2, [0][deck:309] = 8, [0][deck:310] = 19, [0][deck:311] = 15, [0][deck:312] = 3, [0][deck:313] = 20, [0][deck:314] = 0, [0][deck:315] = 7, [0][deck:316] = 15, [0][deck:317] = 26, [0][deck:318] = 26, [0][deck:319] = 9, [0][deck:320] = 11, [0][deck:321] = 2, [0][deck:322] = 23, [0][deck:323] = 9, [0][deck:324] = 17, [0][deck:325] = 14, [0][deck:326] = 10, [0][deck:327] = 5, [0][deck:328] = 23, [0][deck:329] = 15, [0][deck:330] = 4, [0][deck:331] = 26, [0][deck:332] = 19, [0][deck:333] = 0, [0][deck:334] = 19, [0][deck:335] = 4, [0][deck:336] = 9, [0][deck:337] = 16, [0][deck:338] = 13, [0][deck:339] = 13, [0][deck:340] = 18, [0][deck:341] = 21, [0][deck:342] = 6, [0][deck:343] = 19, [0][deck:344] = 4, [0][deck:345] = 23, [0][deck:346] = 1, [0][deck:347] = 25, [0][deck:348] = 20, [0][deck:349] = 12, [0][deck:350] = 9, [0][deck:351] = 1, [0][deck:352] = 18, [0][deck:353] = 15, [0][deck:354] = 21, [0][deck:355] = 19, [0][deck:356] = 26, [0][deck:357] = 5, [0][deck:358] = 23, 
PLAYER #0, DISCARDCOUNT=131, discard[player][hand]: [0][discard: 0] = 25, [0][discard: 1] = 6, [0][discard: 2] = 8, [0][discard: 3] = 26, [0][discard: 4] = 6, [0][discard: 5] = 0, [0][discard: 6] = 16, [0][discard: 7] = 8, [0][discard: 8] = 8, [0][discard: 9] = 11, [0][discard: 10] = 22, [0][discard: 11] = 22, [0][discard: 12] = 12, [0][discard: 13] = 2, [0][discard: 14] = 24, [0][discard: 15] = 8, [0][discard: 16] = 25, [0][discard: 17] = 6, [0][discard: 18] = 14, [0][discard: 19] = 9, [0][discard: 20] = 26, [0][discard: 21] = 9, [0][discard: 22] = 12, [0][discard: 23] = 20, [0][discard: 24] = 19, [0][discard: 25] = 3, [0][discard: 26] = 8, [0][discard: 27] = 25, [0][discard: 28] = 22, [0][discard: 29] = 11, [0][discard: 30] = 7, [0][discard: 31] = 5, [0][discard: 32] = 25, [0][discard: 33] = 4, [0][discard: 34] = 17, [0][discard: 35] = 18, [0][discard: 36] = 22, [0][discard: 37] = 21, [0][discard: 38] = 26, [0][discard: 39] = 10, [0][discard: 40] = 17, [0][discard: 41] = 26, [0][discard: 42] = 5, [0][discard: 43] = 19, [0][discard: 44] = 10, [0][discard: 45] = 21, [0][discard: 46] = 1, [0][discard: 47] = 20, [0][discard: 48] = 18, [0][discard: 49] = 12, [0][discard: 50] = 9, [0][discard: 51] = 21, [0][discard: 52] = 3, [0][discard: 53] = 23, [0][discard: 54] = 12, [0][discard: 55] = 5, [0][discard: 56] = 26, [0][discard: 57] = 19, [0][discard: 58] = 23, [0][discard: 59] = 8, [0][discard: 60] = 10, [0][discard: 61] = 16, [0][discard: 62] = 6, [0][discard: 63] = 1, [0][discard: 64] = 15, [0][discard: 65] = 8, [0][discard: 66] = 26, [0][discard: 67] = 19, [0][discard: 68] = 16, [0][discard: 69] = 23, [0][discard: 70] = 23, [0][discard: 71] = 20, [0][discard: 72] = 24, [0][discard: 73] = 6, [0][discard: 74] = 13, [0][discard: 75] = 0, [0][discard: 76] = 17, [0][discard: 77] = 17, [0][discard: 78] = 5, [0][discard: 79] = 3, [0][discard: 80] = 10, [0][discard: 81] = 8, [0][discard: 82] = 25, [0][discard: 83] = 18, [0][discard: 84] = 5, [0][discard: 85] = 7, [0][discard: 86] = 15, [0][discard: 87] = 21, [0][discard: 88] = 8, [0][discard: 89] = 12, [0][discard: 90] = 24, [0][discard: 91] = 12, [0][discard: 92] = 19, [0][discard: 93] = 24, [0][discard: 94] = 16, [0][discard: 95] = 6, [0][discard: 96] = 24, [0][discard: 97] = 3, [0][discard: 98] = 12, [0][discard: 99] = 21, [0][discard: 100] = 26, [0][discard: 101] = 8, [0][discard: 102] = 15, [0][discard: 103] = 8, [0][discard: 104] = 19, [0][discard: 105] = 25, [0][discard: 106] = 13, [0][discard: 107] = 21, [0][discard: 108] = 1, [0][discard: 109] = 0, [0][discard: 110] = 17, [0][discard: 111] = 26, [0][discard: 112] = 13, [0][discard: 113] = 21, [0][discard: 114] = 7, [0][discard: 115] = 2, [0][discard: 116] = 16, [0][discard: 117] = 14, [0][discard: 118] = 4, [0][discard: 119] = 4, [0][discard: 120] = 10, [0][discard: 121] = 6, [0][discard: 122] = 6, [0][discard: 123] = 18, [0][discard: 124] = 20, [0][discard: 125] = 14, [0][discard: 126] = 22, [0][discard: 127] = 1, [0][discard: 128] = 10, [0][discard: 129] = 11, [0][discard: 130] = 17, 
---------------------
PLAYER #1, HANDCOUNT=0, hand[player][hand]: 
PLAYER #1, DECKCOUNT=10, deck[player][hand]: [1][deck:0] = 4, [1][deck:1] = 1, [1][deck:2] = 4, [1][deck:3] = 1, [1][deck:4] = 4, [1][deck:5] = 4, [1][deck:6] = 4, [1][deck:7] = 4, [1][deck:8] = 4, [1][deck:9] = 1, 
PLAYER #1, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #2, HANDCOUNT=0, hand[player][hand]: 
PLAYER #2, DECKCOUNT=10, deck[player][hand]: [2][deck:0] = 4, [2][deck:1] = 4, [2][deck:2] = 4, [2][deck:3] = 1, [2][deck:4] = 1, [2][deck:5] = 1, [2][deck:6] = 4, [2][deck:7] = 4, [2][deck:8] = 4, [2][deck:9] = 4, 
PLAYER #2, DISCARDCOUNT=0, discard[player][hand]: 
--END PRINTING GAME STATE -------------------

adventurer test - iteration 448 -> FAILED tests
*************** ITERATION # 449 ***************  
NOTE Player 1: found 18 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 265, supplyTotalPre: 263
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 265
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 449 -> FAILED tests
*************** ITERATION # 450 ***************  
NOTE Player 1: found 33 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 250, supplyTotalPre: 248
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 250
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 450 -> FAILED tests
*************** ITERATION # 451 ***************  
NOTE Player 2: found 59 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 242, supplyTotalPre: 240
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 242
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 451 -> FAILED tests
*************** ITERATION # 452 ***************  
NOTE Player 1: found 86 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 393, supplyTotalPre: 391
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 393
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 452 -> FAILED tests
*************** ITERATION # 453 ***************  
NOTE Player 1: found 31 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 298, supplyTotalPre: 296
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 298
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 453 -> FAILED tests
*************** ITERATION # 454 ***************  
NOTE Player 1: did NOT find treasure in player's deck
NOTE Player 1: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 156, supplyTotalPre: 154
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 156
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 454 -> FAILED tests
*************** ITERATION # 455 ***************  
NOTE Player 0: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 369, supplyTotalPre: 367
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 369
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 455 -> FAILED tests
*************** ITERATION # 456 ***************  
NOTE Player 2: found 34 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 41, supplyTotalPre: 39
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 41
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 456 -> FAILED tests
*************** ITERATION # 457 ***************  
NOTE Player 0: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 299, supplyTotalPre: 297
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 299
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 457 -> FAILED tests
*************** ITERATION # 458 ***************  
NOTE Player 0: found 63 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 157, supplyTotalPre: 155
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 157
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 458 -> FAILED tests
*************** ITERATION # 459 ***************  
NOTE Player 2: found 79 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 332, supplyTotalPre: 330
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 332
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 459 -> FAILED tests
*************** ITERATION # 460 ***************  
NOTE Player 1: found 38 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 398, supplyTotalPre: 396
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 398
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 460 -> FAILED tests
*************** ITERATION # 461 ***************  
NOTE Player 2: found 24 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 231, supplyTotalPre: 229
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 231
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 461 -> FAILED tests
*************** ITERATION # 462 ***************  
NOTE Player 0: found 67 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 427, supplyTotalPre: 425
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 427
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 462 -> FAILED tests
*************** ITERATION # 463 ***************  
NOTE Player 1: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 181, supplyTotalPre: 179
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 181
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 463 -> FAILED tests
*************** ITERATION # 464 ***************  
NOTE Player 1: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 113, supplyTotalPre: 111
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 113
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 464 -> FAILED tests
*************** ITERATION # 465 ***************  
NOTE Player 0: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 266, supplyTotalPre: 264
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 266
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 465 -> FAILED tests
*************** ITERATION # 466 ***************  
NOTE Player 0: found 34 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 158, supplyTotalPre: 156
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 158
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 466 -> FAILED tests
*************** ITERATION # 467 ***************  
NOTE Player 0: found 56 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 259, supplyTotalPre: 257
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 259
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 467 -> FAILED tests
*************** ITERATION # 468 ***************  
NOTE Player 2: found 72 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 357, supplyTotalPre: 355
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 357
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 468 -> FAILED tests
*************** ITERATION # 469 ***************  
NOTE Player 1: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 36, supplyTotalPre: 34
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 36
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 469 -> FAILED tests
*************** ITERATION # 470 ***************  
NOTE Player 2: found 42 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 365, supplyTotalPre: 363
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 365
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 470 -> FAILED tests
*************** ITERATION # 471 ***************  
NOTE Player 0: found 68 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 464, supplyTotalPre: 462
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 464
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 471 -> FAILED tests
*************** ITERATION # 472 ***************  
NOTE Player 2: found 62 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 435, supplyTotalPre: 433
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 435
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 472 -> FAILED tests
*************** ITERATION # 473 ***************  
NOTE Player 2: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 340, supplyTotalPre: 338
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 340
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 473 -> FAILED tests
*************** ITERATION # 474 ***************  
NOTE Player 1: found 60 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 115, supplyTotalPre: 113
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 115
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 474 -> FAILED tests
*************** ITERATION # 475 ***************  
NOTE Player 1: found 64 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 170, supplyTotalPre: 168
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 170
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 475 -> FAILED tests
*************** ITERATION # 476 ***************  
NOTE Player 1: found 90 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 26, supplyTotalPre: 24
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 26
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 476 -> FAILED tests
*************** ITERATION # 477 ***************  
NOTE Player 0: found 75 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 32, supplyTotalPre: 30
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 32
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 477 -> FAILED tests
*************** ITERATION # 478 ***************  
NOTE Player 0: found 8 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 212, supplyTotalPre: 210
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 212
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 478 -> FAILED tests
*************** ITERATION # 479 ***************  
NOTE Player 1: found 65 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 306, supplyTotalPre: 304
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 306
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 479 -> FAILED tests
*************** ITERATION # 480 ***************  
NOTE Player 0: found 92 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 347, supplyTotalPre: 345
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 347
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 480 -> FAILED tests
*************** ITERATION # 481 ***************  
NOTE Player 1: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 235, supplyTotalPre: 233
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 235
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 481 -> FAILED tests
*************** ITERATION # 482 ***************  
NOTE Player 1: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 330, supplyTotalPre: 328
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 330
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 482 -> FAILED tests
*************** ITERATION # 483 ***************  
NOTE Player 1: found 56 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 289, supplyTotalPre: 287
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 289
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 483 -> FAILED tests
*************** ITERATION # 484 ***************  
NOTE Player 2: found 27 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 94, supplyTotalPre: 92
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 94
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 484 -> FAILED tests
*************** ITERATION # 485 ***************  
NOTE Player 1: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 185, supplyTotalPre: 183
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 185
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 485 -> FAILED tests
*************** ITERATION # 486 ***************  
NOTE Player 2: found 65 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 468, supplyTotalPre: 466
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 468
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 486 -> FAILED tests
*************** ITERATION # 487 ***************  
NOTE Player 0: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 312, supplyTotalPre: 310
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 312
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 487 -> FAILED tests
*************** ITERATION # 488 ***************  
NOTE Player 2: found 66 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 331, supplyTotalPre: 329
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 331
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 488 -> FAILED tests
*************** ITERATION # 489 ***************  
NOTE Player 2: did NOT find Adventurer in player's hand
NOTE Player 2: found 60 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): SUCCESS: player #2, check if played card has increased by 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): ********** no assert performed
Test4 (check deck+discard count): ********** no assert performed
Test5 (check top cards of hand): topHand == 2
Branch-3 FAILED: player #2, check if top card of hand is unchanged
Debug Data: G->hand[topHand-2]: 1553786000, Gpre.hand[topHand-2]): 1553759544
printing POST game state: 

--START PRINTING GAME STATE -------------------
numPlayers = 3
SUPPLY TOTAL=283, supplyCount: #0: 22, #1: 10, #2: 3, #3: 8, #4: 57, #5: 37, #6: 24, #7: -1, #8: 10, #9: 5, #10: 12, #11: 11, #12: 2, #13: 4, #14: 11, #15: 3, #16: 1, #17: 0, #18: 11, #19: 12, #20: 1, #21: 8, #22: -1, #23: 0, #24: 11, #25: 12, #26: 10, 
embargoTokens: #0: 0, #1: 0, #2: 0, #3: 0, #4: 0, #5: 0, #6: 0, #7: 0, #8: 0, #9: 0, #10: 0, #11: 0, #12: 0, #13: 0, #14: 0, #15: 0, #16: 0, #17: 0, #18: 0, #19: 0, #20: 0, #21: 0, #22: 0, #23: 0, #24: 0, #25: 0, #26: 0, 
outpostPlayed = 0, outpostTurn = 387389207, whoseTurn = 2, phase = 0, numActions = 1, coins = 4, numBuys = 1
playedCardCount = 0, playedCards[x]: 
---------------------
PLAYER #0, HANDCOUNT=5, hand[player][hand]: [0][hand:0] = 1, [0][hand:1] = 4, [0][hand:2] = 4, [0][hand:3] = 4, [0][hand:4] = 4, 
PLAYER #0, DECKCOUNT=5, deck[player][hand]: [0][deck:0] = 1, [0][deck:1] = 4, [0][deck:2] = 4, [0][deck:3] = 1, [0][deck:4] = 4, 
PLAYER #0, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #1, HANDCOUNT=0, hand[player][hand]: 
PLAYER #1, DECKCOUNT=10, deck[player][hand]: [1][deck:0] = 4, [1][deck:1] = 1, [1][deck:2] = 4, [1][deck:3] = 1, [1][deck:4] = 4, [1][deck:5] = 4, [1][deck:6] = 4, [1][deck:7] = 4, [1][deck:8] = 4, [1][deck:9] = 1, 
PLAYER #1, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #2, HANDCOUNT=2, hand[player][hand]: [2][hand:0] = 4, [2][hand:1] = 4, 
PLAYER #2, DECKCOUNT=393, deck[player][hand]: [2][deck:0] = 18, [2][deck:1] = 21, [2][deck:2] = 12, [2][deck:3] = 8, [2][deck:4] = 12, [2][deck:5] = 1, [2][deck:6] = 17, [2][deck:7] = 0, [2][deck:8] = 9, [2][deck:9] = 25, [2][deck:10] = 12, [2][deck:11] = 26, [2][deck:12] = 13, [2][deck:13] = 8, [2][deck:14] = 10, [2][deck:15] = 25, [2][deck:16] = 4, [2][deck:17] = 10, [2][deck:18] = 21, [2][deck:19] = 12, [2][deck:20] = 18, [2][deck:21] = 1, [2][deck:22] = 3, [2][deck:23] = 16, [2][deck:24] = 0, [2][deck:25] = 22, [2][deck:26] = 24, [2][deck:27] = 20, [2][deck:28] = 11, [2][deck:29] = 22, [2][deck:30] = 23, [2][deck:31] = 6, [2][deck:32] = 13, [2][deck:33] = 8, [2][deck:34] = 24, [2][deck:35] = 8, [2][deck:36] = 21, [2][deck:37] = 0, [2][deck:38] = 24, [2][deck:39] = 10, [2][deck:40] = 11, [2][deck:41] = 9, [2][deck:42] = 5, [2][deck:43] = 23, [2][deck:44] = 8, [2][deck:45] = 12, [2][deck:46] = 26, [2][deck:47] = 8, [2][deck:48] = 26, [2][deck:49] = 18, [2][deck:50] = 22, [2][deck:51] = 25, [2][deck:52] = 13, [2][deck:53] = 3, [2][deck:54] = 2, [2][deck:55] = 0, [2][deck:56] = 13, [2][deck:57] = 22, [2][deck:58] = 18, [2][deck:59] = 24, [2][deck:60] = 0, [2][deck:61] = 4, [2][deck:62] = 13, [2][deck:63] = 13, [2][deck:64] = 1, [2][deck:65] = 7, [2][deck:66] = 22, [2][deck:67] = 11, [2][deck:68] = 16, [2][deck:69] = 12, [2][deck:70] = 26, [2][deck:71] = 22, [2][deck:72] = 3, [2][deck:73] = 2, [2][deck:74] = 4, [2][deck:75] = 18, [2][deck:76] = 7, [2][deck:77] = 5, [2][deck:78] = 1, [2][deck:79] = 25, [2][deck:80] = 25, [2][deck:81] = 17, [2][deck:82] = 2, [2][deck:83] = 10, [2][deck:84] = 8, [2][deck:85] = 7, [2][deck:86] = 0, [2][deck:87] = 17, [2][deck:88] = 18, [2][deck:89] = 6, [2][deck:90] = 21, [2][deck:91] = 26, [2][deck:92] = 6, [2][deck:93] = 6, [2][deck:94] = 8, [2][deck:95] = 21, [2][deck:96] = 9, [2][deck:97] = 1, [2][deck:98] = 24, [2][deck:99] = 14, [2][deck:100] = 6, [2][deck:101] = 16, [2][deck:102] = 19, [2][deck:103] = 17, [2][deck:104] = 22, [2][deck:105] = 4, [2][deck:106] = 26, [2][deck:107] = 1, [2][deck:108] = 22, [2][deck:109] = 15, [2][deck:110] = 23, [2][deck:111] = 12, [2][deck:112] = 4, [2][deck:113] = 2, [2][deck:114] = 0, [2][deck:115] = 10, [2][deck:116] = 1, [2][deck:117] = 17, [2][deck:118] = 24, [2][deck:119] = 21, [2][deck:120] = 5, [2][deck:121] = 10, [2][deck:122] = 12, [2][deck:123] = 19, [2][deck:124] = 10, [2][deck:125] = 3, [2][deck:126] = 9, [2][deck:127] = 1, [2][deck:128] = 18, [2][deck:129] = 19, [2][deck:130] = 14, [2][deck:131] = 22, [2][deck:132] = 22, [2][deck:133] = 23, [2][deck:134] = 6, [2][deck:135] = 12, [2][deck:136] = 16, [2][deck:137] = 8, [2][deck:138] = 17, [2][deck:139] = 15, [2][deck:140] = 16, [2][deck:141] = 20, [2][deck:142] = 11, [2][deck:143] = 25, [2][deck:144] = 18, [2][deck:145] = 6, [2][deck:146] = 15, [2][deck:147] = 10, [2][deck:148] = 9, [2][deck:149] = 7, [2][deck:150] = 7, [2][deck:151] = 6, [2][deck:152] = 4, [2][deck:153] = 14, [2][deck:154] = 11, [2][deck:155] = 12, [2][deck:156] = 13, [2][deck:157] = 9, [2][deck:158] = 4, [2][deck:159] = 2, [2][deck:160] = 14, [2][deck:161] = 18, [2][deck:162] = 10, [2][deck:163] = 8, [2][deck:164] = 4, [2][deck:165] = 6, [2][deck:166] = 17, [2][deck:167] = 26, [2][deck:168] = 25, [2][deck:169] = 7, [2][deck:170] = 2, [2][deck:171] = 12, [2][deck:172] = 24, [2][deck:173] = 0, [2][deck:174] = 22, [2][deck:175] = 20, [2][deck:176] = 11, [2][deck:177] = 12, [2][deck:178] = 6, [2][deck:179] = 25, [2][deck:180] = 12, [2][deck:181] = 7, [2][deck:182] = 3, [2][deck:183] = 5, [2][deck:184] = 0, [2][deck:185] = 10, [2][deck:186] = 22, [2][deck:187] = 16, [2][deck:188] = 7, [2][deck:189] = 17, [2][deck:190] = 0, [2][deck:191] = 18, [2][deck:192] = 18, [2][deck:193] = 11, [2][deck:194] = 15, [2][deck:195] = 23, [2][deck:196] = 15, [2][deck:197] = 2, [2][deck:198] = 4, [2][deck:199] = 22, [2][deck:200] = 26, [2][deck:201] = 2, [2][deck:202] = 15, [2][deck:203] = 14, [2][deck:204] = 2, [2][deck:205] = 18, [2][deck:206] = 17, [2][deck:207] = 8, [2][deck:208] = 26, [2][deck:209] = 0, [2][deck:210] = 26, [2][deck:211] = 5, [2][deck:212] = 12, [2][deck:213] = 1, [2][deck:214] = 17, [2][deck:215] = 9, [2][deck:216] = 12, [2][deck:217] = 22, [2][deck:218] = 0, [2][deck:219] = 16, [2][deck:220] = 15, [2][deck:221] = 11, [2][deck:222] = 9, [2][deck:223] = 9, [2][deck:224] = 1, [2][deck:225] = 22, [2][deck:226] = 18, [2][deck:227] = 21, [2][deck:228] = 3, [2][deck:229] = 26, [2][deck:230] = 12, [2][deck:231] = 14, [2][deck:232] = 0, [2][deck:233] = 12, [2][deck:234] = 26, [2][deck:235] = 20, [2][deck:236] = 14, [2][deck:237] = 12, [2][deck:238] = 1, [2][deck:239] = 23, [2][deck:240] = 10, [2][deck:241] = 24, [2][deck:242] = 13, [2][deck:243] = 6, [2][deck:244] = 4, [2][deck:245] = 5, [2][deck:246] = 20, [2][deck:247] = 8, [2][deck:248] = 26, [2][deck:249] = 5, [2][deck:250] = 13, [2][deck:251] = 13, [2][deck:252] = 13, [2][deck:253] = 17, [2][deck:254] = 23, [2][deck:255] = 22, [2][deck:256] = 12, [2][deck:257] = 15, [2][deck:258] = 21, [2][deck:259] = 11, [2][deck:260] = 19, [2][deck:261] = 19, [2][deck:262] = 1, [2][deck:263] = 20, [2][deck:264] = 0, [2][deck:265] = 9, [2][deck:266] = 24, [2][deck:267] = 0, [2][deck:268] = 19, [2][deck:269] = 3, [2][deck:270] = 16, [2][deck:271] = 18, [2][deck:272] = 11, [2][deck:273] = 15, [2][deck:274] = 17, [2][deck:275] = 9, [2][deck:276] = 17, [2][deck:277] = 10, [2][deck:278] = 16, [2][deck:279] = 24, [2][deck:280] = 15, [2][deck:281] = 18, [2][deck:282] = 9, [2][deck:283] = 10, [2][deck:284] = 8, [2][deck:285] = 20, [2][deck:286] = 16, [2][deck:287] = 17, [2][deck:288] = 0, [2][deck:289] = 18, [2][deck:290] = 3, [2][deck:291] = 12, [2][deck:292] = 21, [2][deck:293] = 1, [2][deck:294] = 25, [2][deck:295] = 5, [2][deck:296] = 15, [2][deck:297] = 13, [2][deck:298] = 9, [2][deck:299] = 18, [2][deck:300] = 9, [2][deck:301] = 1, [2][deck:302] = 13, [2][deck:303] = 24, [2][deck:304] = 13, [2][deck:305] = 22, [2][deck:306] = 24, [2][deck:307] = 21, [2][deck:308] = 2, [2][deck:309] = 24, [2][deck:310] = 17, [2][deck:311] = 24, [2][deck:312] = 15, [2][deck:313] = 14, [2][deck:314] = 7, [2][deck:315] = 2, [2][deck:316] = 25, [2][deck:317] = 2, [2][deck:318] = 22, [2][deck:319] = 26, [2][deck:320] = 18, [2][deck:321] = 19, [2][deck:322] = 19, [2][deck:323] = 11, [2][deck:324] = 15, [2][deck:325] = 20, [2][deck:326] = 3, [2][deck:327] = 9, [2][deck:328] = 18, [2][deck:329] = 0, [2][deck:330] = 4, [2][deck:331] = 5, [2][deck:332] = 11, [2][deck:333] = 15, [2][deck:334] = 17, [2][deck:335] = 17, [2][deck:336] = 23, [2][deck:337] = 17, [2][deck:338] = 26, [2][deck:339] = 5, [2][deck:340] = 24, [2][deck:341] = 26, [2][deck:342] = 17, [2][deck:343] = 17, [2][deck:344] = 23, [2][deck:345] = 8, [2][deck:346] = 12, [2][deck:347] = 10, [2][deck:348] = 18, [2][deck:349] = 5, [2][deck:350] = 12, [2][deck:351] = 4, [2][deck:352] = 14, [2][deck:353] = 4, [2][deck:354] = 17, [2][deck:355] = 16, [2][deck:356] = 1, [2][deck:357] = 20, [2][deck:358] = 14, [2][deck:359] = 26, [2][deck:360] = 10, [2][deck:361] = 1, [2][deck:362] = 17, [2][deck:363] = 15, [2][deck:364] = 26, [2][deck:365] = 20, [2][deck:366] = 24, [2][deck:367] = 20, [2][deck:368] = 2, [2][deck:369] = 1, [2][deck:370] = 6, [2][deck:371] = 14, [2][deck:372] = 16, [2][deck:373] = 4, [2][deck:374] = 9, [2][deck:375] = 15, [2][deck:376] = 14, [2][deck:377] = 18, [2][deck:378] = 24, [2][deck:379] = 0, [2][deck:380] = 18, [2][deck:381] = 11, [2][deck:382] = 23, [2][deck:383] = 24, [2][deck:384] = 17, [2][deck:385] = 16, [2][deck:386] = 5, [2][deck:387] = 5, [2][deck:388] = 22, [2][deck:389] = 2, [2][deck:390] = 17, [2][deck:391] = 13, [2][deck:392] = 25, 
PLAYER #2, DISCARDCOUNT=294, discard[player][hand]: [2][discard: 0] = 26, [2][discard: 1] = 12, [2][discard: 2] = 5, [2][discard: 3] = 13, [2][discard: 4] = 15, [2][discard: 5] = 0, [2][discard: 6] = 17, [2][discard: 7] = 17, [2][discard: 8] = 19, [2][discard: 9] = 20, [2][discard: 10] = 5, [2][discard: 11] = 18, [2][discard: 12] = 7, [2][discard: 13] = 25, [2][discard: 14] = 26, [2][discard: 15] = 19, [2][discard: 16] = 9, [2][discard: 17] = 20, [2][discard: 18] = 12, [2][discard: 19] = 1, [2][discard: 20] = 22, [2][discard: 21] = 23, [2][discard: 22] = 6, [2][discard: 23] = 2, [2][discard: 24] = 9, [2][discard: 25] = 18, [2][discard: 26] = 13, [2][discard: 27] = 0, [2][discard: 28] = 1, [2][discard: 29] = 13, [2][discard: 30] = 10, [2][discard: 31] = 6, [2][discard: 32] = 24, [2][discard: 33] = 0, [2][discard: 34] = 19, [2][discard: 35] = 22, [2][discard: 36] = 22, [2][discard: 37] = 18, [2][discard: 38] = 23, [2][discard: 39] = 21, [2][discard: 40] = 5, [2][discard: 41] = 15, [2][discard: 42] = 23, [2][discard: 43] = 1, [2][discard: 44] = 20, [2][discard: 45] = 21, [2][discard: 46] = 20, [2][discard: 47] = 16, [2][discard: 48] = 11, [2][discard: 49] = 20, [2][discard: 50] = 14, [2][discard: 51] = 14, [2][discard: 52] = 22, [2][discard: 53] = 22, [2][discard: 54] = 8, [2][discard: 55] = 20, [2][discard: 56] = 26, [2][discard: 57] = 3, [2][discard: 58] = 7, [2][discard: 59] = 3, [2][discard: 60] = 25, [2][discard: 61] = 6, [2][discard: 62] = 9, [2][discard: 63] = 13, [2][discard: 64] = 11, [2][discard: 65] = 3, [2][discard: 66] = 1, [2][discard: 67] = 1, [2][discard: 68] = 25, [2][discard: 69] = 1, [2][discard: 70] = 19, [2][discard: 71] = 2, [2][discard: 72] = 15, [2][discard: 73] = 7, [2][discard: 74] = 1, [2][discard: 75] = 9, [2][discard: 76] = 15, [2][discard: 77] = 9, [2][discard: 78] = 7, [2][discard: 79] = 8, [2][discard: 80] = 23, [2][discard: 81] = 12, [2][discard: 82] = 14, [2][discard: 83] = 4, [2][discard: 84] = 22, [2][discard: 85] = 13, [2][discard: 86] = 22, [2][discard: 87] = 13, [2][discard: 88] = 24, [2][discard: 89] = 20, [2][discard: 90] = 15, [2][discard: 91] = 18, [2][discard: 92] = 6, [2][discard: 93] = 7, [2][discard: 94] = 25, [2][discard: 95] = 17, [2][discard: 96] = 14, [2][discard: 97] = 7, [2][discard: 98] = 17, [2][discard: 99] = 21, [2][discard: 100] = 13, [2][discard: 101] = 21, [2][discard: 102] = 1, [2][discard: 103] = 5, [2][discard: 104] = 8, [2][discard: 105] = 1, [2][discard: 106] = 1, [2][discard: 107] = 22, [2][discard: 108] = 22, [2][discard: 109] = 23, [2][discard: 110] = 8, [2][discard: 111] = 22, [2][discard: 112] = 18, [2][discard: 113] = 22, [2][discard: 114] = 0, [2][discard: 115] = 0, [2][discard: 116] = 10, [2][discard: 117] = 22, [2][discard: 118] = 8, [2][discard: 119] = 1, [2][discard: 120] = 17, [2][discard: 121] = 5, [2][discard: 122] = 17, [2][discard: 123] = 18, [2][discard: 124] = 6, [2][discard: 125] = 14, [2][discard: 126] = 8, [2][discard: 127] = 6, [2][discard: 128] = 8, [2][discard: 129] = 12, [2][discard: 130] = 19, [2][discard: 131] = 9, [2][discard: 132] = 7, [2][discard: 133] = 23, [2][discard: 134] = 9, [2][discard: 135] = 16, [2][discard: 136] = 15, [2][discard: 137] = 7, [2][discard: 138] = 15, [2][discard: 139] = 10, [2][discard: 140] = 10, [2][discard: 141] = 2, [2][discard: 142] = 15, [2][discard: 143] = 3, [2][discard: 144] = 22, [2][discard: 145] = 16, [2][discard: 146] = 22, [2][discard: 147] = 26, [2][discard: 148] = 7, [2][discard: 149] = 9, [2][discard: 150] = 3, [2][discard: 151] = 10, [2][discard: 152] = 14, [2][discard: 153] = 19, [2][discard: 154] = 3, [2][discard: 155] = 12, [2][discard: 156] = 17, [2][discard: 157] = 18, [2][discard: 158] = 15, [2][discard: 159] = 10, [2][discard: 160] = 7, [2][discard: 161] = 7, [2][discard: 162] = 20, [2][discard: 163] = 21, [2][discard: 164] = 26, [2][discard: 165] = 9, [2][discard: 166] = 19, [2][discard: 167] = 12, [2][discard: 168] = 8, [2][discard: 169] = 18, [2][discard: 170] = 18, [2][discard: 171] = 16, [2][discard: 172] = 7, [2][discard: 173] = 24, [2][discard: 174] = 1, [2][discard: 175] = 16, [2][discard: 176] = 5, [2][discard: 177] = 2, [2][discard: 178] = 14, [2][discard: 179] = 5, [2][discard: 180] = 16, [2][discard: 181] = 2, [2][discard: 182] = 21, [2][discard: 183] = 24, [2][discard: 184] = 26, [2][discard: 185] = 14, [2][discard: 186] = 23, [2][discard: 187] = 21, [2][discard: 188] = 3, [2][discard: 189] = 17, [2][discard: 190] = 22, [2][discard: 191] = 26, [2][discard: 192] = 26, [2][discard: 193] = 18, [2][discard: 194] = 9, [2][discard: 195] = 3, [2][discard: 196] = 7, [2][discard: 197] = 21, [2][discard: 198] = 13, [2][discard: 199] = 8, [2][discard: 200] = 11, [2][discard: 201] = 9, [2][discard: 202] = 4, [2][discard: 203] = 6, [2][discard: 204] = 19, [2][discard: 205] = 8, [2][discard: 206] = 17, [2][discard: 207] = 12, [2][discard: 208] = 10, [2][discard: 209] = 26, [2][discard: 210] = 24, [2][discard: 211] = 12, [2][discard: 212] = 8, [2][discard: 213] = 0, [2][discard: 214] = 20, [2][discard: 215] = 6, [2][discard: 216] = 12, [2][discard: 217] = 6, [2][discard: 218] = 0, [2][discard: 219] = 24, [2][discard: 220] = 19, [2][discard: 221] = 9, [2][discard: 222] = 2, [2][discard: 223] = 5, [2][discard: 224] = 15, [2][discard: 225] = 24, [2][discard: 226] = 10, [2][discard: 227] = 26, [2][discard: 228] = 22, [2][discard: 229] = 16, [2][discard: 230] = 19, [2][discard: 231] = 1, [2][discard: 232] = 10, [2][discard: 233] = 18, [2][discard: 234] = 21, [2][discard: 235] = 9, [2][discard: 236] = 24, [2][discard: 237] = 24, [2][discard: 238] = 7, [2][discard: 239] = 25, [2][discard: 240] = 1, [2][discard: 241] = 7, [2][discard: 242] = 2, [2][discard: 243] = 2, [2][discard: 244] = 19, [2][discard: 245] = 14, [2][discard: 246] = 0, [2][discard: 247] = 15, [2][discard: 248] = 14, [2][discard: 249] = 24, [2][discard: 250] = 3, [2][discard: 251] = 16, [2][discard: 252] = 14, [2][discard: 253] = 23, [2][discard: 254] = 21, [2][discard: 255] = 1, [2][discard: 256] = 14, [2][discard: 257] = 15, [2][discard: 258] = 16, [2][discard: 259] = 12, [2][discard: 260] = 22, [2][discard: 261] = 9, [2][discard: 262] = 11, [2][discard: 263] = 11, [2][discard: 264] = 24, [2][discard: 265] = 2, [2][discard: 266] = 17, [2][discard: 267] = 8, [2][discard: 268] = 15, [2][discard: 269] = 12, [2][discard: 270] = 14, [2][discard: 271] = 0, [2][discard: 272] = 21, [2][discard: 273] = 26, [2][discard: 274] = 22, [2][discard: 275] = 23, [2][discard: 276] = 20, [2][discard: 277] = 12, [2][discard: 278] = 19, [2][discard: 279] = 25, [2][discard: 280] = 0, [2][discard: 281] = 17, [2][discard: 282] = 10, [2][discard: 283] = 1, [2][discard: 284] = 3, [2][discard: 285] = 12, [2][discard: 286] = 15, [2][discard: 287] = 23, [2][discard: 288] = 9, [2][discard: 289] = 25, [2][discard: 290] = 16, [2][discard: 291] = 2, [2][discard: 292] = 18, [2][discard: 293] = 21, 
--END PRINTING GAME STATE -------------------

adventurer test - iteration 489 -> FAILED tests
*************** ITERATION # 490 ***************  
NOTE Player 1: found 42 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 405, supplyTotalPre: 403
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 405
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 490 -> FAILED tests
*************** ITERATION # 491 ***************  
NOTE Player 2: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 270, supplyTotalPre: 268
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 270
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 491 -> FAILED tests
*************** ITERATION # 492 ***************  
NOTE Player 1: found 94 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 453, supplyTotalPre: 451
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 453
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 492 -> FAILED tests
*************** ITERATION # 493 ***************  
NOTE Player 0: found 69 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 288, supplyTotalPre: 286
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 288
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 493 -> FAILED tests
*************** ITERATION # 494 ***************  
NOTE Player 0: found 88 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 76, supplyTotalPre: 74
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 76
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 494 -> FAILED tests
*************** ITERATION # 495 ***************  
NOTE Player 1: found 31 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 185, supplyTotalPre: 183
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 185
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 495 -> FAILED tests
*************** ITERATION # 496 ***************  
NOTE Player 2: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 42, supplyTotalPre: 40
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 42
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 496 -> FAILED tests
*************** ITERATION # 497 ***************  
NOTE Player 1: found 4 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 482, supplyTotalPre: 480
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 482
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 497 -> FAILED tests
*************** ITERATION # 498 ***************  
NOTE Player 2: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 227, supplyTotalPre: 225
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 227
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 498 -> FAILED tests
*************** ITERATION # 499 ***************  
NOTE Player 2: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 395, supplyTotalPre: 393
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 395
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 499 -> FAILED tests
*************** ITERATION # 500 ***************  
NOTE Player 0: found 80 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 86, supplyTotalPre: 84
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 86
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 500 -> FAILED tests
*************** ITERATION # 501 ***************  
NOTE Player 2: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 203, supplyTotalPre: 201
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 203
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 501 -> FAILED tests
*************** ITERATION # 502 ***************  
NOTE Player 0: found 86 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 287, supplyTotalPre: 285
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 287
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 502 -> FAILED tests
*************** ITERATION # 503 ***************  
NOTE Player 0: found 104 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 26, supplyTotalPre: 24
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 26
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 503 -> FAILED tests
*************** ITERATION # 504 ***************  
NOTE Player 1: found 26 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 21, supplyTotalPre: 19
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 21
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 504 -> FAILED tests
*************** ITERATION # 505 ***************  
NOTE Player 1: found 49 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 445, supplyTotalPre: 443
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 445
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 505 -> FAILED tests
*************** ITERATION # 506 ***************  
NOTE Player 2: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 498, supplyTotalPre: 496
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 498
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 506 -> FAILED tests
*************** ITERATION # 507 ***************  
NOTE Player 2: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 56, supplyTotalPre: 54
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 56
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 507 -> FAILED tests
*************** ITERATION # 508 ***************  
NOTE Player 1: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 372, supplyTotalPre: 370
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 372
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 508 -> FAILED tests
*************** ITERATION # 509 ***************  
NOTE Player 1: found 71 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 227, supplyTotalPre: 225
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 227
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 509 -> FAILED tests
*************** ITERATION # 510 ***************  
NOTE Player 0: found 30 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 254, supplyTotalPre: 252
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 254
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 510 -> FAILED tests
*************** ITERATION # 511 ***************  
NOTE Player 0: found 18 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 264, supplyTotalPre: 262
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 264
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 511 -> FAILED tests
*************** ITERATION # 512 ***************  
NOTE Player 0: found 40 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 65, supplyTotalPre: 63
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 65
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 512 -> FAILED tests
*************** ITERATION # 513 ***************  
NOTE Player 2: found 29 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 275, supplyTotalPre: 273
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 275
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 513 -> FAILED tests
*************** ITERATION # 514 ***************  
NOTE Player 1: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 384, supplyTotalPre: 382
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 384
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 514 -> FAILED tests
*************** ITERATION # 515 ***************  
NOTE Player 0: found 73 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 424, supplyTotalPre: 422
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 424
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 515 -> FAILED tests
*************** ITERATION # 516 ***************  
NOTE Player 2: found 16 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 173, supplyTotalPre: 171
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 173
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 516 -> FAILED tests
*************** ITERATION # 517 ***************  
NOTE Player 0: found 31 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 245, supplyTotalPre: 243
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 245
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 517 -> FAILED tests
*************** ITERATION # 518 ***************  
NOTE Player 1: found 73 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 307, supplyTotalPre: 305
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 307
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 518 -> FAILED tests
*************** ITERATION # 519 ***************  
NOTE Player 1: found 6 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 462, supplyTotalPre: 460
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 462
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 519 -> FAILED tests
*************** ITERATION # 520 ***************  
NOTE Player 2: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 317, supplyTotalPre: 315
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 317
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 520 -> FAILED tests
*************** ITERATION # 521 ***************  
NOTE Player 1: found 26 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 245, supplyTotalPre: 243
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 245
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 521 -> FAILED tests
*************** ITERATION # 522 ***************  
NOTE Player 2: found 52 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 193, supplyTotalPre: 191
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 193
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 522 -> FAILED tests
*************** ITERATION # 523 ***************  
NOTE Player 2: found 7 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 388, supplyTotalPre: 386
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 388
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 523 -> FAILED tests
*************** ITERATION # 524 ***************  
NOTE Player 2: found 24 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 252, supplyTotalPre: 250
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 252
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 524 -> FAILED tests
*************** ITERATION # 525 ***************  
NOTE Player 2: found 42 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 350, supplyTotalPre: 348
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 350
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 525 -> FAILED tests
*************** ITERATION # 526 ***************  
NOTE Player 2: found 77 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 479, supplyTotalPre: 477
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 479
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 526 -> FAILED tests
*************** ITERATION # 527 ***************  
NOTE Player 1: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 77, supplyTotalPre: 75
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 77
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 527 -> FAILED tests
*************** ITERATION # 528 ***************  
NOTE Player 1: found 25 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 273, supplyTotalPre: 271
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 273
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 528 -> FAILED tests
*************** ITERATION # 529 ***************  
NOTE Player 0: found 43 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 17, supplyTotalPre: 15
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 17
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 529 -> FAILED tests
*************** ITERATION # 530 ***************  
NOTE Player 2: did NOT find treasure in player's discard
NOTE Player 2: found 56 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 230, supplyTotalPre: 228
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 230
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 530 -> FAILED tests
*************** ITERATION # 531 ***************  
NOTE Player 0: found 76 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 117, supplyTotalPre: 115
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 117
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 531 -> FAILED tests
*************** ITERATION # 532 ***************  
NOTE Player 2: found 7 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 107, supplyTotalPre: 105
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 107
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 532 -> FAILED tests
*************** ITERATION # 533 ***************  
NOTE Player 0: found 29 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 29, supplyTotalPre: 27
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 29
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 533 -> FAILED tests
*************** ITERATION # 534 ***************  
NOTE Player 0: found 62 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 465, supplyTotalPre: 463
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 465
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 534 -> FAILED tests
*************** ITERATION # 535 ***************  
NOTE Player 1: found 24 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 219, supplyTotalPre: 217
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 219
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 535 -> FAILED tests
*************** ITERATION # 536 ***************  
NOTE Player 2: found 9 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 373, supplyTotalPre: 371
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 373
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 536 -> FAILED tests
*************** ITERATION # 537 ***************  
NOTE Player 1: found 47 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 303, supplyTotalPre: 301
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 303
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 537 -> FAILED tests
*************** ITERATION # 538 ***************  
NOTE Player 1: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 411, supplyTotalPre: 409
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 411
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 538 -> FAILED tests
*************** ITERATION # 539 ***************  
NOTE Player 2: found 20 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 393, supplyTotalPre: 391
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 393
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 539 -> FAILED tests
*************** ITERATION # 540 ***************  
NOTE Player 1: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 4, supplyTotalPre: 2
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 4
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 540 -> FAILED tests
*************** ITERATION # 541 ***************  
NOTE Player 0: found 83 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 487, supplyTotalPre: 485
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 487
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 541 -> FAILED tests
*************** ITERATION # 542 ***************  
NOTE Player 0: found 30 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 406, supplyTotalPre: 404
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 406
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 542 -> FAILED tests
*************** ITERATION # 543 ***************  
NOTE Player 1: found 5 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 44, supplyTotalPre: 42
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 44
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 543 -> FAILED tests
*************** ITERATION # 544 ***************  
NOTE Player 2: found 24 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 295, supplyTotalPre: 293
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 295
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 544 -> FAILED tests
*************** ITERATION # 545 ***************  
NOTE Player 1: found 78 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 305, supplyTotalPre: 303
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 305
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 545 -> FAILED tests
*************** ITERATION # 546 ***************  
NOTE Player 1: found 40 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 494, supplyTotalPre: 492
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 494
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 546 -> FAILED tests
*************** ITERATION # 547 ***************  
NOTE Player 2: found 81 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 403, supplyTotalPre: 401
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 403
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 547 -> FAILED tests
*************** ITERATION # 548 ***************  
NOTE Player 2: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 16, supplyTotalPre: 14
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 16
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 548 -> FAILED tests
*************** ITERATION # 549 ***************  
NOTE Player 2: found 11 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 374, supplyTotalPre: 372
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 374
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 549 -> FAILED tests
*************** ITERATION # 550 ***************  
NOTE Player 1: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 350, supplyTotalPre: 348
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 350
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 550 -> FAILED tests
*************** ITERATION # 551 ***************  
NOTE Player 1: found 28 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 460, supplyTotalPre: 458
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 460
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 551 -> FAILED tests
*************** ITERATION # 552 ***************  
NOTE Player 0: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 348, supplyTotalPre: 346
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 348
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 552 -> FAILED tests
*************** ITERATION # 553 ***************  
NOTE Player 2: found 82 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 33, supplyTotalPre: 31
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 33
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 553 -> FAILED tests
*************** ITERATION # 554 ***************  
NOTE Player 0: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 450, supplyTotalPre: 448
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 450
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 554 -> FAILED tests
*************** ITERATION # 555 ***************  
NOTE Player 0: found 79 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 54, supplyTotalPre: 52
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 54
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 555 -> FAILED tests
*************** ITERATION # 556 ***************  
NOTE Player 2: found 42 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 118, supplyTotalPre: 116
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 118
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 556 -> FAILED tests
*************** ITERATION # 557 ***************  
NOTE Player 0: found 34 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 284, supplyTotalPre: 282
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 284
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 557 -> FAILED tests
*************** ITERATION # 558 ***************  
NOTE Player 1: found 78 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 418, supplyTotalPre: 416
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 418
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 558 -> FAILED tests
*************** ITERATION # 559 ***************  
NOTE Player 2: found 35 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 180, supplyTotalPre: 178
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 180
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 559 -> FAILED tests
*************** ITERATION # 560 ***************  
NOTE Player 1: found 66 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 271, supplyTotalPre: 269
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 271
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 560 -> FAILED tests
*************** ITERATION # 561 ***************  
NOTE Player 1: found 68 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 56, supplyTotalPre: 54
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 56
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 561 -> FAILED tests
*************** ITERATION # 562 ***************  
NOTE Player 2: found 59 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 341, supplyTotalPre: 339
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 341
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 562 -> FAILED tests
*************** ITERATION # 563 ***************  
NOTE Player 0: found 44 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 475, supplyTotalPre: 473
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 475
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 563 -> FAILED tests
*************** ITERATION # 564 ***************  
NOTE Player 1: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 356, supplyTotalPre: 354
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 356
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 564 -> FAILED tests
*************** ITERATION # 565 ***************  
NOTE Player 1: found 31 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 470, supplyTotalPre: 468
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 470
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 565 -> FAILED tests
*************** ITERATION # 566 ***************  
NOTE Player 1: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 183, supplyTotalPre: 181
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 183
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 566 -> FAILED tests
*************** ITERATION # 567 ***************  
NOTE Player 1: found 54 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 141, supplyTotalPre: 139
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 141
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 567 -> FAILED tests
*************** ITERATION # 568 ***************  
NOTE Player 2: found 65 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 188, supplyTotalPre: 186
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 188
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 568 -> FAILED tests
*************** ITERATION # 569 ***************  
NOTE Player 2: found 65 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 157, supplyTotalPre: 155
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 157
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 569 -> FAILED tests
*************** ITERATION # 570 ***************  
NOTE Player 1: found 28 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 468, supplyTotalPre: 466
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 468
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 570 -> FAILED tests
*************** ITERATION # 571 ***************  
NOTE Player 0: found 43 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 112, supplyTotalPre: 110
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 112
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 571 -> FAILED tests
*************** ITERATION # 572 ***************  
NOTE Player 2: found 48 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 458, supplyTotalPre: 456
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 458
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 572 -> FAILED tests
*************** ITERATION # 573 ***************  
NOTE Player 2: found 35 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 467, supplyTotalPre: 465
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 467
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 573 -> FAILED tests
*************** ITERATION # 574 ***************  
NOTE Player 2: found 47 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 69, supplyTotalPre: 67
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 69
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 574 -> FAILED tests
*************** ITERATION # 575 ***************  
NOTE Player 1: found 77 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 388, supplyTotalPre: 386
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 388
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 575 -> FAILED tests
*************** ITERATION # 576 ***************  
NOTE Player 2: found 17 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 381, supplyTotalPre: 379
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 381
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 576 -> FAILED tests
*************** ITERATION # 577 ***************  
NOTE Player 0: found 32 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 24, supplyTotalPre: 22
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 24
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 577 -> FAILED tests
*************** ITERATION # 578 ***************  
NOTE Player 1: did NOT find treasure in player's deck
NOTE Player 1: found 22 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 177, supplyTotalPre: 175
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 177
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 578 -> FAILED tests
*************** ITERATION # 579 ***************  
NOTE Player 2: found 32 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 493, supplyTotalPre: 491
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 493
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 579 -> FAILED tests
*************** ITERATION # 580 ***************  
NOTE Player 2: found 72 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 273, supplyTotalPre: 271
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 273
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 580 -> FAILED tests
*************** ITERATION # 581 ***************  
NOTE Player 1: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 454, supplyTotalPre: 452
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 454
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 581 -> FAILED tests
*************** ITERATION # 582 ***************  
NOTE Player 0: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 147, supplyTotalPre: 145
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 147
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 582 -> FAILED tests
*************** ITERATION # 583 ***************  
NOTE Player 0: found 78 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 371, supplyTotalPre: 369
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 371
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 583 -> FAILED tests
*************** ITERATION # 584 ***************  
NOTE Player 0: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 153, supplyTotalPre: 151
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 153
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 584 -> FAILED tests
*************** ITERATION # 585 ***************  
NOTE Player 2: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 45, supplyTotalPre: 43
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 45
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 585 -> FAILED tests
*************** ITERATION # 586 ***************  
NOTE Player 2: did NOT find Adventurer in player's hand
NOTE Player 2: found 52 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): SUCCESS: player #2, check if played card has increased by 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): ********** no assert performed
Test4 (check deck+discard count): ********** no assert performed
Test5 (check top cards of hand): topHand == 41
Branch-3 FAILED: player #2, check if top card of hand is unchanged
Debug Data: G->hand[topHand-2]: 1553864000, Gpre.hand[topHand-2]): 1553837544
printing POST game state: 

--START PRINTING GAME STATE -------------------
numPlayers = 3
SUPPLY TOTAL=220, supplyCount: #0: 14, #1: 12, #2: 3, #3: 2, #4: 57, #5: 15, #6: 3, #7: 7, #8: 12, #9: 9, #10: -1, #11: 7, #12: 9, #13: 1, #14: -1, #15: 9, #16: 9, #17: 7, #18: 10, #19: 8, #20: 10, #21: -1, #22: 8, #23: 1, #24: -1, #25: 9, #26: 2, 
embargoTokens: #0: 0, #1: 0, #2: 0, #3: 0, #4: 0, #5: 0, #6: 0, #7: 0, #8: 0, #9: 0, #10: 0, #11: 0, #12: 0, #13: 0, #14: 0, #15: 0, #16: 0, #17: 0, #18: 0, #19: 0, #20: 0, #21: 0, #22: 0, #23: 0, #24: 0, #25: 0, #26: 0, 
outpostPlayed = 0, outpostTurn = 387389207, whoseTurn = 2, phase = 0, numActions = 1, coins = 4, numBuys = 1
playedCardCount = 0, playedCards[x]: 
---------------------
PLAYER #0, HANDCOUNT=5, hand[player][hand]: [0][hand:0] = 1, [0][hand:1] = 4, [0][hand:2] = 4, [0][hand:3] = 4, [0][hand:4] = 4, 
PLAYER #0, DECKCOUNT=5, deck[player][hand]: [0][deck:0] = 1, [0][deck:1] = 4, [0][deck:2] = 4, [0][deck:3] = 1, [0][deck:4] = 4, 
PLAYER #0, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #1, HANDCOUNT=0, hand[player][hand]: 
PLAYER #1, DECKCOUNT=10, deck[player][hand]: [1][deck:0] = 4, [1][deck:1] = 1, [1][deck:2] = 4, [1][deck:3] = 1, [1][deck:4] = 4, [1][deck:5] = 4, [1][deck:6] = 4, [1][deck:7] = 4, [1][deck:8] = 4, [1][deck:9] = 1, 
PLAYER #1, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #2, HANDCOUNT=41, hand[player][hand]: [2][hand:0] = 26, [2][hand:1] = 1, [2][hand:2] = 21, [2][hand:3] = 17, [2][hand:4] = 9, [2][hand:5] = 9, [2][hand:6] = 22, [2][hand:7] = 0, [2][hand:8] = 16, [2][hand:9] = 16, [2][hand:10] = 25, [2][hand:11] = 26, [2][hand:12] = 0, [2][hand:13] = 20, [2][hand:14] = 12, [2][hand:15] = 13, [2][hand:16] = 25, [2][hand:17] = 2, [2][hand:18] = 23, [2][hand:19] = 13, [2][hand:20] = 6, [2][hand:21] = 15, [2][hand:22] = 12, [2][hand:23] = 1, [2][hand:24] = 16, [2][hand:25] = 24, [2][hand:26] = 16, [2][hand:27] = 24, [2][hand:28] = 16, [2][hand:29] = 19, [2][hand:30] = 4, [2][hand:31] = 22, [2][hand:32] = 8, [2][hand:33] = 2, [2][hand:34] = 3, [2][hand:35] = 0, [2][hand:36] = 23, [2][hand:37] = 10, [2][hand:38] = 19, [2][hand:39] = 5, [2][hand:40] = 4, 
PLAYER #2, DECKCOUNT=134, deck[player][hand]: [2][deck:0] = 1, [2][deck:1] = 17, [2][deck:2] = 19, [2][deck:3] = 19, [2][deck:4] = 18, [2][deck:5] = 20, [2][deck:6] = 19, [2][deck:7] = 16, [2][deck:8] = 25, [2][deck:9] = 21, [2][deck:10] = 20, [2][deck:11] = 23, [2][deck:12] = 12, [2][deck:13] = 24, [2][deck:14] = 10, [2][deck:15] = 13, [2][deck:16] = 23, [2][deck:17] = 11, [2][deck:18] = 10, [2][deck:19] = 6, [2][deck:20] = 15, [2][deck:21] = 12, [2][deck:22] = 21, [2][deck:23] = 17, [2][deck:24] = 14, [2][deck:25] = 3, [2][deck:26] = 7, [2][deck:27] = 10, [2][deck:28] = 1, [2][deck:29] = 22, [2][deck:30] = 12, [2][deck:31] = 19, [2][deck:32] = 11, [2][deck:33] = 6, [2][deck:34] = 6, [2][deck:35] = 12, [2][deck:36] = 8, [2][deck:37] = 20, [2][deck:38] = 14, [2][deck:39] = 22, [2][deck:40] = 22, [2][deck:41] = 25, [2][deck:42] = 21, [2][deck:43] = 12, [2][deck:44] = 1, [2][deck:45] = 20, [2][deck:46] = 1, [2][deck:47] = 0, [2][deck:48] = 21, [2][deck:49] = 17, [2][deck:50] = 12, [2][deck:51] = 2, [2][deck:52] = 19, [2][deck:53] = 9, [2][deck:54] = 7, [2][deck:55] = 4, [2][deck:56] = 4, [2][deck:57] = 15, [2][deck:58] = 26, [2][deck:59] = 5, [2][deck:60] = 19, [2][deck:61] = 15, [2][deck:62] = 25, [2][deck:63] = 7, [2][deck:64] = 9, [2][deck:65] = 20, [2][deck:66] = 9, [2][deck:67] = 23, [2][deck:68] = 22, [2][deck:69] = 21, [2][deck:70] = 17, [2][deck:71] = 8, [2][deck:72] = 3, [2][deck:73] = 24, [2][deck:74] = 23, [2][deck:75] = 8, [2][deck:76] = 21, [2][deck:77] = 2, [2][deck:78] = 21, [2][deck:79] = 4, [2][deck:80] = 26, [2][deck:81] = 18, [2][deck:82] = 20, [2][deck:83] = 0, [2][deck:84] = 10, [2][deck:85] = 15, [2][deck:86] = 10, [2][deck:87] = 5, [2][deck:88] = 23, [2][deck:89] = 17, [2][deck:90] = 18, [2][deck:91] = 7, [2][deck:92] = 24, [2][deck:93] = 3, [2][deck:94] = 16, [2][deck:95] = 5, [2][deck:96] = 5, [2][deck:97] = 9, [2][deck:98] = 25, [2][deck:99] = 10, [2][deck:100] = 10, [2][deck:101] = 5, [2][deck:102] = 16, [2][deck:103] = 19, [2][deck:104] = 17, [2][deck:105] = 26, [2][deck:106] = 3, [2][deck:107] = 22, [2][deck:108] = 10, [2][deck:109] = 15, [2][deck:110] = 7, [2][deck:111] = 14, [2][deck:112] = 2, [2][deck:113] = 12, [2][deck:114] = 9, [2][deck:115] = 7, [2][deck:116] = 13, [2][deck:117] = 9, [2][deck:118] = 9, [2][deck:119] = 21, [2][deck:120] = 15, [2][deck:121] = 17, [2][deck:122] = 11, [2][deck:123] = 3, [2][deck:124] = 6, [2][deck:125] = 26, [2][deck:126] = 5, [2][deck:127] = 21, [2][deck:128] = 18, [2][deck:129] = 26, [2][deck:130] = 13, [2][deck:131] = 9, [2][deck:132] = 19, [2][deck:133] = 11, 
PLAYER #2, DISCARDCOUNT=252, discard[player][hand]: [2][discard: 0] = 6, [2][discard: 1] = 10, [2][discard: 2] = 23, [2][discard: 3] = 26, [2][discard: 4] = 25, [2][discard: 5] = 8, [2][discard: 6] = 13, [2][discard: 7] = 8, [2][discard: 8] = 25, [2][discard: 9] = 19, [2][discard: 10] = 2, [2][discard: 11] = 1, [2][discard: 12] = 12, [2][discard: 13] = 15, [2][discard: 14] = 5, [2][discard: 15] = 3, [2][discard: 16] = 20, [2][discard: 17] = 6, [2][discard: 18] = 18, [2][discard: 19] = 18, [2][discard: 20] = 22, [2][discard: 21] = 3, [2][discard: 22] = 5, [2][discard: 23] = 17, [2][discard: 24] = 26, [2][discard: 25] = 0, [2][discard: 26] = 21, [2][discard: 27] = 1, [2][discard: 28] = 18, [2][discard: 29] = 1, [2][discard: 30] = 16, [2][discard: 31] = 7, [2][discard: 32] = 15, [2][discard: 33] = 24, [2][discard: 34] = 14, [2][discard: 35] = 26, [2][discard: 36] = 16, [2][discard: 37] = 1, [2][discard: 38] = 7, [2][discard: 39] = 15, [2][discard: 40] = 4, [2][discard: 41] = 14, [2][discard: 42] = 13, [2][discard: 43] = 12, [2][discard: 44] = 19, [2][discard: 45] = 3, [2][discard: 46] = 13, [2][discard: 47] = 20, [2][discard: 48] = 23, [2][discard: 49] = 0, [2][discard: 50] = 18, [2][discard: 51] = 5, [2][discard: 52] = 4, [2][discard: 53] = 6, [2][discard: 54] = 5, [2][discard: 55] = 12, [2][discard: 56] = 6, [2][discard: 57] = 18, [2][discard: 58] = 8, [2][discard: 59] = 18, [2][discard: 60] = 20, [2][discard: 61] = 19, [2][discard: 62] = 17, [2][discard: 63] = 7, [2][discard: 64] = 15, [2][discard: 65] = 11, [2][discard: 66] = 15, [2][discard: 67] = 18, [2][discard: 68] = 4, [2][discard: 69] = 2, [2][discard: 70] = 20, [2][discard: 71] = 1, [2][discard: 72] = 8, [2][discard: 73] = 18, [2][discard: 74] = 4, [2][discard: 75] = 20, [2][discard: 76] = 1, [2][discard: 77] = 7, [2][discard: 78] = 0, [2][discard: 79] = 7, [2][discard: 80] = 0, [2][discard: 81] = 12, [2][discard: 82] = 5, [2][discard: 83] = 13, [2][discard: 84] = 8, [2][discard: 85] = 24, [2][discard: 86] = 13, [2][discard: 87] = 25, [2][discard: 88] = 5, [2][discard: 89] = 9, [2][discard: 90] = 7, [2][discard: 91] = 10, [2][discard: 92] = 4, [2][discard: 93] = 12, [2][discard: 94] = 19, [2][discard: 95] = 13, [2][discard: 96] = 8, [2][discard: 97] = 19, [2][discard: 98] = 6, [2][discard: 99] = 1, [2][discard: 100] = 21, [2][discard: 101] = 9, [2][discard: 102] = 18, [2][discard: 103] = 5, [2][discard: 104] = 6, [2][discard: 105] = 13, [2][discard: 106] = 0, [2][discard: 107] = 0, [2][discard: 108] = 15, [2][discard: 109] = 6, [2][discard: 110] = 17, [2][discard: 111] = 5, [2][discard: 112] = 1, [2][discard: 113] = 13, [2][discard: 114] = 9, [2][discard: 115] = 13, [2][discard: 116] = 23, [2][discard: 117] = 17, [2][discard: 118] = 7, [2][discard: 119] = 19, [2][discard: 120] = 19, [2][discard: 121] = 13, [2][discard: 122] = 4, [2][discard: 123] = 22, [2][discard: 124] = 2, [2][discard: 125] = 26, [2][discard: 126] = 8, [2][discard: 127] = 18, [2][discard: 128] = 26, [2][discard: 129] = 1, [2][discard: 130] = 20, [2][discard: 131] = 21, [2][discard: 132] = 21, [2][discard: 133] = 22, [2][discard: 134] = 26, [2][discard: 135] = 12, [2][discard: 136] = 24, [2][discard: 137] = 6, [2][discard: 138] = 17, [2][discard: 139] = 3, [2][discard: 140] = 8, [2][discard: 141] = 5, [2][discard: 142] = 12, [2][discard: 143] = 6, [2][discard: 144] = 22, [2][discard: 145] = 20, [2][discard: 146] = 5, [2][discard: 147] = 23, [2][discard: 148] = 5, [2][discard: 149] = 7, [2][discard: 150] = 3, [2][discard: 151] = 9, [2][discard: 152] = 8, [2][discard: 153] = 11, [2][discard: 154] = 14, [2][discard: 155] = 17, [2][discard: 156] = 8, [2][discard: 157] = 11, [2][discard: 158] = 20, [2][discard: 159] = 1, [2][discard: 160] = 20, [2][discard: 161] = 1, [2][discard: 162] = 22, [2][discard: 163] = 10, [2][discard: 164] = 24, [2][discard: 165] = 18, [2][discard: 166] = 23, [2][discard: 167] = 22, [2][discard: 168] = 11, [2][discard: 169] = 17, [2][discard: 170] = 5, [2][discard: 171] = 26, [2][discard: 172] = 6, [2][discard: 173] = 1, [2][discard: 174] = 9, [2][discard: 175] = 16, [2][discard: 176] = 4, [2][discard: 177] = 19, [2][discard: 178] = 7, [2][discard: 179] = 12, [2][discard: 180] = 24, [2][discard: 181] = 6, [2][discard: 182] = 8, [2][discard: 183] = 12, [2][discard: 184] = 12, [2][discard: 185] = 16, [2][discard: 186] = 9, [2][discard: 187] = 7, [2][discard: 188] = 14, [2][discard: 189] = 20, [2][discard: 190] = 2, [2][discard: 191] = 21, [2][discard: 192] = 14, [2][discard: 193] = 0, [2][discard: 194] = 8, [2][discard: 195] = 13, [2][discard: 196] = 18, [2][discard: 197] = 5, [2][discard: 198] = 21, [2][discard: 199] = 6, [2][discard: 200] = 4, [2][discard: 201] = 15, [2][discard: 202] = 6, [2][discard: 203] = 4, [2][discard: 204] = 21, [2][discard: 205] = 21, [2][discard: 206] = 26, [2][discard: 207] = 8, [2][discard: 208] = 15, [2][discard: 209] = 16, [2][discard: 210] = 9, [2][discard: 211] = 20, [2][discard: 212] = 15, [2][discard: 213] = 2, [2][discard: 214] = 23, [2][discard: 215] = 11, [2][discard: 216] = 23, [2][discard: 217] = 24, [2][discard: 218] = 11, [2][discard: 219] = 9, [2][discard: 220] = 24, [2][discard: 221] = 18, [2][discard: 222] = 25, [2][discard: 223] = 21, [2][discard: 224] = 17, [2][discard: 225] = 13, [2][discard: 226] = 17, [2][discard: 227] = 2, [2][discard: 228] = 8, [2][discard: 229] = 12, [2][discard: 230] = 7, [2][discard: 231] = 23, [2][discard: 232] = 1, [2][discard: 233] = 6, [2][discard: 234] = 8, [2][discard: 235] = 19, [2][discard: 236] = 10, [2][discard: 237] = 8, [2][discard: 238] = 8, [2][discard: 239] = 4, [2][discard: 240] = 25, [2][discard: 241] = 16, [2][discard: 242] = 13, [2][discard: 243] = 19, [2][discard: 244] = 0, [2][discard: 245] = 23, [2][discard: 246] = 1, [2][discard: 247] = 10, [2][discard: 248] = 15, [2][discard: 249] = 14, [2][discard: 250] = 10, [2][discard: 251] = 24, 
--END PRINTING GAME STATE -------------------

adventurer test - iteration 586 -> FAILED tests
*************** ITERATION # 587 ***************  
NOTE Player 1: found 103 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 140, supplyTotalPre: 138
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 140
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 587 -> FAILED tests
*************** ITERATION # 588 ***************  
NOTE Player 1: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 405, supplyTotalPre: 403
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 405
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 588 -> FAILED tests
*************** ITERATION # 589 ***************  
NOTE Player 0: found 23 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 443, supplyTotalPre: 441
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 443
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 589 -> FAILED tests
*************** ITERATION # 590 ***************  
NOTE Player 2: found 28 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 96, supplyTotalPre: 94
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 96
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 590 -> FAILED tests
*************** ITERATION # 591 ***************  
NOTE Player 2: found 112 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 483, supplyTotalPre: 481
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 483
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 591 -> FAILED tests
*************** ITERATION # 592 ***************  
NOTE Player 0: found 72 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 297, supplyTotalPre: 295
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 297
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 592 -> FAILED tests
*************** ITERATION # 593 ***************  
NOTE Player 1: found 44 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 204, supplyTotalPre: 202
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 204
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 593 -> FAILED tests
*************** ITERATION # 594 ***************  
NOTE Player 1: found 78 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 78, supplyTotalPre: 76
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 78
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 594 -> FAILED tests
*************** ITERATION # 595 ***************  
NOTE Player 2: found 56 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 221, supplyTotalPre: 219
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 221
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 595 -> FAILED tests
*************** ITERATION # 596 ***************  
NOTE Player 2: found 71 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 170, supplyTotalPre: 168
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 170
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 596 -> FAILED tests
*************** ITERATION # 597 ***************  
NOTE Player 1: found 63 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 269, supplyTotalPre: 267
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 269
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 597 -> FAILED tests
*************** ITERATION # 598 ***************  
NOTE Player 0: found 42 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 291, supplyTotalPre: 289
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 291
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 598 -> FAILED tests
*************** ITERATION # 599 ***************  
NOTE Player 0: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 390, supplyTotalPre: 388
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 390
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 599 -> FAILED tests
*************** ITERATION # 600 ***************  
NOTE Player 0: found 73 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 402, supplyTotalPre: 400
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 402
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 600 -> FAILED tests
*************** ITERATION # 601 ***************  
NOTE Player 1: found 66 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 245, supplyTotalPre: 243
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 245
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 601 -> FAILED tests
*************** ITERATION # 602 ***************  
NOTE Player 1: found 99 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 420, supplyTotalPre: 418
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 420
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 602 -> FAILED tests
*************** ITERATION # 603 ***************  
NOTE Player 1: found 115 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 28, supplyTotalPre: 26
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 28
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 603 -> FAILED tests
*************** ITERATION # 604 ***************  
NOTE Player 0: found 37 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 498, supplyTotalPre: 496
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 498
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 604 -> FAILED tests
*************** ITERATION # 605 ***************  
NOTE Player 1: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 96, supplyTotalPre: 94
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 96
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 605 -> FAILED tests
*************** ITERATION # 606 ***************  
NOTE Player 1: found 37 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 256, supplyTotalPre: 254
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 256
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 606 -> FAILED tests
*************** ITERATION # 607 ***************  
NOTE Player 1: found 62 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 334, supplyTotalPre: 332
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 334
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 607 -> FAILED tests
*************** ITERATION # 608 ***************  
NOTE Player 0: found 36 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 456, supplyTotalPre: 454
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 456
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 608 -> FAILED tests
*************** ITERATION # 609 ***************  
NOTE Player 2: found 64 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 495, supplyTotalPre: 493
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 495
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 609 -> FAILED tests
*************** ITERATION # 610 ***************  
NOTE Player 2: found 35 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 164, supplyTotalPre: 162
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 164
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 610 -> FAILED tests
*************** ITERATION # 611 ***************  
NOTE Player 1: found 18 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 265, supplyTotalPre: 263
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 265
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 611 -> FAILED tests
*************** ITERATION # 612 ***************  
NOTE Player 0: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 432, supplyTotalPre: 430
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 432
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 612 -> FAILED tests
*************** ITERATION # 613 ***************  
NOTE Player 0: found 52 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 333, supplyTotalPre: 331
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 333
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 613 -> FAILED tests
*************** ITERATION # 614 ***************  
NOTE Player 1: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 46, supplyTotalPre: 44
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 46
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 614 -> FAILED tests
*************** ITERATION # 615 ***************  
NOTE Player 1: found 59 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 190, supplyTotalPre: 188
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 190
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 615 -> FAILED tests
*************** ITERATION # 616 ***************  
NOTE Player 1: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 453, supplyTotalPre: 451
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 453
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 616 -> FAILED tests
*************** ITERATION # 617 ***************  
NOTE Player 2: found 84 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 375, supplyTotalPre: 373
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 375
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 617 -> FAILED tests
*************** ITERATION # 618 ***************  
NOTE Player 0: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 3, supplyTotalPre: 1
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 3
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 618 -> FAILED tests
*************** ITERATION # 619 ***************  
NOTE Player 2: found 24 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 310, supplyTotalPre: 308
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 310
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 619 -> FAILED tests
*************** ITERATION # 620 ***************  
NOTE Player 0: found 65 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 182, supplyTotalPre: 180
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 182
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 620 -> FAILED tests
*************** ITERATION # 621 ***************  
NOTE Player 0: found 64 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 194, supplyTotalPre: 192
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 194
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 621 -> FAILED tests
*************** ITERATION # 622 ***************  
NOTE Player 2: found 115 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 188, supplyTotalPre: 186
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 188
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 622 -> FAILED tests
*************** ITERATION # 623 ***************  
NOTE Player 2: found 44 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 171, supplyTotalPre: 169
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 171
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 623 -> FAILED tests
*************** ITERATION # 624 ***************  
NOTE Player 0: found 71 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 170, supplyTotalPre: 168
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 170
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 624 -> FAILED tests
*************** ITERATION # 625 ***************  
NOTE Player 1: found 49 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 222, supplyTotalPre: 220
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 222
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 625 -> FAILED tests
*************** ITERATION # 626 ***************  
NOTE Player 1: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 269, supplyTotalPre: 267
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 269
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 626 -> FAILED tests
*************** ITERATION # 627 ***************  
NOTE Player 0: found 19 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 119, supplyTotalPre: 117
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 119
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 627 -> FAILED tests
*************** ITERATION # 628 ***************  
NOTE Player 1: found 59 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 388, supplyTotalPre: 386
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 388
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 628 -> FAILED tests
*************** ITERATION # 629 ***************  
NOTE Player 2: found 59 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 364, supplyTotalPre: 362
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 364
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 629 -> FAILED tests
*************** ITERATION # 630 ***************  
NOTE Player 2: found 34 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 479, supplyTotalPre: 477
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 479
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 630 -> FAILED tests
*************** ITERATION # 631 ***************  
NOTE Player 2: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 428, supplyTotalPre: 426
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 428
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 631 -> FAILED tests
*************** ITERATION # 632 ***************  
NOTE Player 2: found 64 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 230, supplyTotalPre: 228
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 230
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 632 -> FAILED tests
*************** ITERATION # 633 ***************  
NOTE Player 0: found 34 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 192, supplyTotalPre: 190
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 192
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 633 -> FAILED tests
*************** ITERATION # 634 ***************  
NOTE Player 1: found 103 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 380, supplyTotalPre: 378
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 380
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 634 -> FAILED tests
*************** ITERATION # 635 ***************  
NOTE Player 1: found 15 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 472, supplyTotalPre: 470
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 472
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 635 -> FAILED tests
*************** ITERATION # 636 ***************  
NOTE Player 2: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 245, supplyTotalPre: 243
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 245
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 636 -> FAILED tests
*************** ITERATION # 637 ***************  
NOTE Player 2: found 60 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 223, supplyTotalPre: 221
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 223
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 637 -> FAILED tests
*************** ITERATION # 638 ***************  
NOTE Player 0: found 22 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 377, supplyTotalPre: 375
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 377
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 638 -> FAILED tests
*************** ITERATION # 639 ***************  
NOTE Player 2: did NOT find treasure in player's discard
NOTE Player 2: found 17 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 159, supplyTotalPre: 157
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 159
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 639 -> FAILED tests
*************** ITERATION # 640 ***************  
NOTE Player 1: did NOT find Adventurer in player's hand
NOTE Player 1: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): ********** no assert performed
Test4 (check deck+discard count): ********** no assert performed
Test5 (check top cards of hand): topHand == 13
Branch-3 FAILED: player #1, check if top card of hand is unchanged
Debug Data: G->hand[topHand-2]: 1553808000, Gpre.hand[topHand-2]): 1553781544
printing POST game state: 

--START PRINTING GAME STATE -------------------
numPlayers = 3
SUPPLY TOTAL=215, supplyCount: #0: 5, #1: 7, #2: 1, #3: 12, #4: 33, #5: 19, #6: 14, #7: 10, #8: 10, #9: 0, #10: 4, #11: 2, #12: 11, #13: 11, #14: 12, #15: 4, #16: 5, #17: 11, #18: 12, #19: 5, #20: 9, #21: 1, #22: 3, #23: -1, #24: 2, #25: 7, #26: 6, 
embargoTokens: #0: 0, #1: 0, #2: 0, #3: 0, #4: 0, #5: 0, #6: 0, #7: 0, #8: 0, #9: 0, #10: 0, #11: 0, #12: 0, #13: 0, #14: 0, #15: 0, #16: 0, #17: 0, #18: 0, #19: 0, #20: 0, #21: 0, #22: 0, #23: 0, #24: 0, #25: 0, #26: 0, 
outpostPlayed = 0, outpostTurn = 387389207, whoseTurn = 1, phase = 0, numActions = 1, coins = 4, numBuys = 1
playedCardCount = 0, playedCards[x]: 
---------------------
PLAYER #0, HANDCOUNT=5, hand[player][hand]: [0][hand:0] = 1, [0][hand:1] = 4, [0][hand:2] = 4, [0][hand:3] = 4, [0][hand:4] = 4, 
PLAYER #0, DECKCOUNT=5, deck[player][hand]: [0][deck:0] = 1, [0][deck:1] = 4, [0][deck:2] = 4, [0][deck:3] = 1, [0][deck:4] = 4, 
PLAYER #0, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #1, HANDCOUNT=13, hand[player][hand]: [1][hand:0] = 14, [1][hand:1] = 0, [1][hand:2] = 10, [1][hand:3] = 15, [1][hand:4] = 9, [1][hand:5] = 15, [1][hand:6] = 26, [1][hand:7] = 13, [1][hand:8] = 23, [1][hand:9] = 23, [1][hand:10] = 17, [1][hand:11] = 5, [1][hand:12] = 5, 
PLAYER #1, DECKCOUNT=162, deck[player][hand]: [1][deck:0] = 0, [1][deck:1] = 3, [1][deck:2] = 1, [1][deck:3] = 19, [1][deck:4] = 13, [1][deck:5] = 21, [1][deck:6] = 5, [1][deck:7] = 25, [1][deck:8] = 1, [1][deck:9] = 0, [1][deck:10] = 22, [1][deck:11] = 17, [1][deck:12] = 7, [1][deck:13] = 25, [1][deck:14] = 2, [1][deck:15] = 21, [1][deck:16] = 18, [1][deck:17] = 24, [1][deck:18] = 1, [1][deck:19] = 25, [1][deck:20] = 3, [1][deck:21] = 26, [1][deck:22] = 20, [1][deck:23] = 3, [1][deck:24] = 5, [1][deck:25] = 26, [1][deck:26] = 0, [1][deck:27] = 23, [1][deck:28] = 13, [1][deck:29] = 18, [1][deck:30] = 23, [1][deck:31] = 14, [1][deck:32] = 0, [1][deck:33] = 26, [1][deck:34] = 8, [1][deck:35] = 26, [1][deck:36] = 14, [1][deck:37] = 4, [1][deck:38] = 4, [1][deck:39] = 9, [1][deck:40] = 6, [1][deck:41] = 23, [1][deck:42] = 22, [1][deck:43] = 18, [1][deck:44] = 7, [1][deck:45] = 0, [1][deck:46] = 10, [1][deck:47] = 8, [1][deck:48] = 23, [1][deck:49] = 14, [1][deck:50] = 6, [1][deck:51] = 23, [1][deck:52] = 15, [1][deck:53] = 3, [1][deck:54] = 22, [1][deck:55] = 16, [1][deck:56] = 19, [1][deck:57] = 3, [1][deck:58] = 21, [1][deck:59] = 8, [1][deck:60] = 9, [1][deck:61] = 7, [1][deck:62] = 19, [1][deck:63] = 17, [1][deck:64] = 24, [1][deck:65] = 7, [1][deck:66] = 16, [1][deck:67] = 14, [1][deck:68] = 25, [1][deck:69] = 5, [1][deck:70] = 2, [1][deck:71] = 13, [1][deck:72] = 2, [1][deck:73] = 14, [1][deck:74] = 4, [1][deck:75] = 14, [1][deck:76] = 6, [1][deck:77] = 11, [1][deck:78] = 10, [1][deck:79] = 5, [1][deck:80] = 7, [1][deck:81] = 20, [1][deck:82] = 1, [1][deck:83] = 23, [1][deck:84] = 5, [1][deck:85] = 23, [1][deck:86] = 25, [1][deck:87] = 26, [1][deck:88] = 0, [1][deck:89] = 0, [1][deck:90] = 20, [1][deck:91] = 21, [1][deck:92] = 4, [1][deck:93] = 6, [1][deck:94] = 3, [1][deck:95] = 10, [1][deck:96] = 7, [1][deck:97] = 11, [1][deck:98] = 10, [1][deck:99] = 22, [1][deck:100] = 5, [1][deck:101] = 23, [1][deck:102] = 16, [1][deck:103] = 17, [1][deck:104] = 15, [1][deck:105] = 19, [1][deck:106] = 11, [1][deck:107] = 10, [1][deck:108] = 16, [1][deck:109] = 12, [1][deck:110] = 3, [1][deck:111] = 5, [1][deck:112] = 12, [1][deck:113] = 22, [1][deck:114] = 14, [1][deck:115] = 7, [1][deck:116] = 26, [1][deck:117] = 25, [1][deck:118] = 19, [1][deck:119] = 5, [1][deck:120] = 22, [1][deck:121] = 11, [1][deck:122] = 0, [1][deck:123] = 17, [1][deck:124] = 9, [1][deck:125] = 1, [1][deck:126] = 23, [1][deck:127] = 3, [1][deck:128] = 26, [1][deck:129] = 20, [1][deck:130] = 20, [1][deck:131] = 19, [1][deck:132] = 12, [1][deck:133] = 21, [1][deck:134] = 26, [1][deck:135] = 0, [1][deck:136] = 12, [1][deck:137] = 6, [1][deck:138] = 16, [1][deck:139] = 20, [1][deck:140] = 0, [1][deck:141] = 5, [1][deck:142] = 3, [1][deck:143] = 16, [1][deck:144] = 19, [1][deck:145] = 17, [1][deck:146] = 1, [1][deck:147] = 2, [1][deck:148] = 1, [1][deck:149] = 4, [1][deck:150] = 3, [1][deck:151] = 2, [1][deck:152] = 8, [1][deck:153] = 20, [1][deck:154] = 2, [1][deck:155] = 16, [1][deck:156] = 12, [1][deck:157] = 21, [1][deck:158] = 7, [1][deck:159] = 17, [1][deck:160] = 2, [1][deck:161] = 5, 
PLAYER #1, DISCARDCOUNT=225, discard[player][hand]: [1][discard: 0] = 8, [1][discard: 1] = 13, [1][discard: 2] = 26, [1][discard: 3] = 15, [1][discard: 4] = 10, [1][discard: 5] = 15, [1][discard: 6] = 4, [1][discard: 7] = 9, [1][discard: 8] = 7, [1][discard: 9] = 21, [1][discard: 10] = 7, [1][discard: 11] = 16, [1][discard: 12] = 12, [1][discard: 13] = 10, [1][discard: 14] = 3, [1][discard: 15] = 0, [1][discard: 16] = 23, [1][discard: 17] = 6, [1][discard: 18] = 0, [1][discard: 19] = 23, [1][discard: 20] = 7, [1][discard: 21] = 15, [1][discard: 22] = 26, [1][discard: 23] = 6, [1][discard: 24] = 5, [1][discard: 25] = 23, [1][discard: 26] = 25, [1][discard: 27] = 11, [1][discard: 28] = 6, [1][discard: 29] = 10, [1][discard: 30] = 1, [1][discard: 31] = 13, [1][discard: 32] = 2, [1][discard: 33] = 6, [1][discard: 34] = 21, [1][discard: 35] = 13, [1][discard: 36] = 0, [1][discard: 37] = 18, [1][discard: 38] = 15, [1][discard: 39] = 15, [1][discard: 40] = 18, [1][discard: 41] = 18, [1][discard: 42] = 22, [1][discard: 43] = 22, [1][discard: 44] = 6, [1][discard: 45] = 24, [1][discard: 46] = 9, [1][discard: 47] = 16, [1][discard: 48] = 22, [1][discard: 49] = 22, [1][discard: 50] = 4, [1][discard: 51] = 6, [1][discard: 52] = 26, [1][discard: 53] = 13, [1][discard: 54] = 12, [1][discard: 55] = 11, [1][discard: 56] = 22, [1][discard: 57] = 9, [1][discard: 58] = 26, [1][discard: 59] = 2, [1][discard: 60] = 14, [1][discard: 61] = 24, [1][discard: 62] = 7, [1][discard: 63] = 21, [1][discard: 64] = 2, [1][discard: 65] = 11, [1][discard: 66] = 2, [1][discard: 67] = 20, [1][discard: 68] = 26, [1][discard: 69] = 3, [1][discard: 70] = 21, [1][discard: 71] = 12, [1][discard: 72] = 23, [1][discard: 73] = 10, [1][discard: 74] = 5, [1][discard: 75] = 8, [1][discard: 76] = 0, [1][discard: 77] = 0, [1][discard: 78] = 2, [1][discard: 79] = 21, [1][discard: 80] = 13, [1][discard: 81] = 0, [1][discard: 82] = 4, [1][discard: 83] = 2, [1][discard: 84] = 7, [1][discard: 85] = 26, [1][discard: 86] = 17, [1][discard: 87] = 20, [1][discard: 88] = 11, [1][discard: 89] = 15, [1][discard: 90] = 16, [1][discard: 91] = 11, [1][discard: 92] = 13, [1][discard: 93] = 19, [1][discard: 94] = 6, [1][discard: 95] = 13, [1][discard: 96] = 26, [1][discard: 97] = 26, [1][discard: 98] = 5, [1][discard: 99] = 4, [1][discard: 100] = 20, [1][discard: 101] = 7, [1][discard: 102] = 7, [1][discard: 103] = 24, [1][discard: 104] = 18, [1][discard: 105] = 23, [1][discard: 106] = 7, [1][discard: 107] = 4, [1][discard: 108] = 0, [1][discard: 109] = 0, [1][discard: 110] = 6, [1][discard: 111] = 20, [1][discard: 112] = 12, [1][discard: 113] = 20, [1][discard: 114] = 22, [1][discard: 115] = 18, [1][discard: 116] = 23, [1][discard: 117] = 9, [1][discard: 118] = 10, [1][discard: 119] = 11, [1][discard: 120] = 9, [1][discard: 121] = 7, [1][discard: 122] = 3, [1][discard: 123] = 11, [1][discard: 124] = 24, [1][discard: 125] = 9, [1][discard: 126] = 23, [1][discard: 127] = 4, [1][discard: 128] = 5, [1][discard: 129] = 4, [1][discard: 130] = 25, [1][discard: 131] = 2, [1][discard: 132] = 2, [1][discard: 133] = 24, [1][discard: 134] = 16, [1][discard: 135] = 16, [1][discard: 136] = 8, [1][discard: 137] = 12, [1][discard: 138] = 21, [1][discard: 139] = 24, [1][discard: 140] = 11, [1][discard: 141] = 4, [1][discard: 142] = 15, [1][discard: 143] = 1, [1][discard: 144] = 11, [1][discard: 145] = 5, [1][discard: 146] = 15, [1][discard: 147] = 20, [1][discard: 148] = 23, [1][discard: 149] = 11, [1][discard: 150] = 16, [1][discard: 151] = 9, [1][discard: 152] = 19, [1][discard: 153] = 13, [1][discard: 154] = 11, [1][discard: 155] = 14, [1][discard: 156] = 23, [1][discard: 157] = 10, [1][discard: 158] = 8, [1][discard: 159] = 4, [1][discard: 160] = 21, [1][discard: 161] = 0, [1][discard: 162] = 12, [1][discard: 163] = 20, [1][discard: 164] = 19, [1][discard: 165] = 4, [1][discard: 166] = 0, [1][discard: 167] = 10, [1][discard: 168] = 0, [1][discard: 169] = 9, [1][discard: 170] = 24, [1][discard: 171] = 6, [1][discard: 172] = 21, [1][discard: 173] = 26, [1][discard: 174] = 10, [1][discard: 175] = 17, [1][discard: 176] = 4, [1][discard: 177] = 6, [1][discard: 178] = 8, [1][discard: 179] = 21, [1][discard: 180] = 7, [1][discard: 181] = 24, [1][discard: 182] = 2, [1][discard: 183] = 3, [1][discard: 184] = 16, [1][discard: 185] = 26, [1][discard: 186] = 3, [1][discard: 187] = 21, [1][discard: 188] = 12, [1][discard: 189] = 25, [1][discard: 190] = 21, [1][discard: 191] = 22, [1][discard: 192] = 19, [1][discard: 193] = 23, [1][discard: 194] = 11, [1][discard: 195] = 10, [1][discard: 196] = 12, [1][discard: 197] = 19, [1][discard: 198] = 6, [1][discard: 199] = 5, [1][discard: 200] = 18, [1][discard: 201] = 10, [1][discard: 202] = 4, [1][discard: 203] = 8, [1][discard: 204] = 17, [1][discard: 205] = 3, [1][discard: 206] = 12, [1][discard: 207] = 23, [1][discard: 208] = 19, [1][discard: 209] = 13, [1][discard: 210] = 7, [1][discard: 211] = 17, [1][discard: 212] = 18, [1][discard: 213] = 25, [1][discard: 214] = 23, [1][discard: 215] = 15, [1][discard: 216] = 18, [1][discard: 217] = 22, [1][discard: 218] = 11, [1][discard: 219] = 15, [1][discard: 220] = 13, [1][discard: 221] = 22, [1][discard: 222] = 7, [1][discard: 223] = 25, [1][discard: 224] = 0, 
---------------------
PLAYER #2, HANDCOUNT=0, hand[player][hand]: 
PLAYER #2, DECKCOUNT=10, deck[player][hand]: [2][deck:0] = 4, [2][deck:1] = 4, [2][deck:2] = 4, [2][deck:3] = 1, [2][deck:4] = 1, [2][deck:5] = 1, [2][deck:6] = 4, [2][deck:7] = 4, [2][deck:8] = 4, [2][deck:9] = 4, 
PLAYER #2, DISCARDCOUNT=0, discard[player][hand]: 
--END PRINTING GAME STATE -------------------

adventurer test - iteration 640 -> FAILED tests
*************** ITERATION # 641 ***************  
NOTE Player 1: found 76 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 279, supplyTotalPre: 277
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 279
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 641 -> FAILED tests
*************** ITERATION # 642 ***************  
NOTE Player 1: found 63 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 247, supplyTotalPre: 245
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 247
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 642 -> FAILED tests
*************** ITERATION # 643 ***************  
NOTE Player 0: found 31 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 251, supplyTotalPre: 249
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 251
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 643 -> FAILED tests
*************** ITERATION # 644 ***************  
NOTE Player 0: found 47 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 221, supplyTotalPre: 219
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 221
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 644 -> FAILED tests
*************** ITERATION # 645 ***************  
NOTE Player 0: found 72 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 300, supplyTotalPre: 298
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 300
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 645 -> FAILED tests
*************** ITERATION # 646 ***************  
NOTE Player 1: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 107, supplyTotalPre: 105
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 107
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 646 -> FAILED tests
*************** ITERATION # 647 ***************  
NOTE Player 1: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 383, supplyTotalPre: 381
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 383
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 647 -> FAILED tests
*************** ITERATION # 648 ***************  
NOTE Player 2: found 14 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 9, supplyTotalPre: 7
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 9
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 648 -> FAILED tests
*************** ITERATION # 649 ***************  
NOTE Player 2: found 20 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 311, supplyTotalPre: 309
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 311
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 649 -> FAILED tests
*************** ITERATION # 650 ***************  
NOTE Player 1: found 64 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 486, supplyTotalPre: 484
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 486
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 650 -> FAILED tests
*************** ITERATION # 651 ***************  
NOTE Player 1: found 69 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 337, supplyTotalPre: 335
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 337
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 651 -> FAILED tests
*************** ITERATION # 652 ***************  
NOTE Player 2: found 60 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 286, supplyTotalPre: 284
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 286
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 652 -> FAILED tests
*************** ITERATION # 653 ***************  
NOTE Player 0: found 73 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 183, supplyTotalPre: 181
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 183
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 653 -> FAILED tests
*************** ITERATION # 654 ***************  
NOTE Player 0: found 31 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 103, supplyTotalPre: 101
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 103
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 654 -> FAILED tests
*************** ITERATION # 655 ***************  
NOTE Player 2: found 27 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 469, supplyTotalPre: 467
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 469
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 655 -> FAILED tests
*************** ITERATION # 656 ***************  
NOTE Player 0: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 487, supplyTotalPre: 485
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 487
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 656 -> FAILED tests
*************** ITERATION # 657 ***************  
NOTE Player 1: found 80 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 13, supplyTotalPre: 11
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 13
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 657 -> FAILED tests
*************** ITERATION # 658 ***************  
NOTE Player 1: found 47 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 407, supplyTotalPre: 405
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 407
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 658 -> FAILED tests
*************** ITERATION # 659 ***************  
NOTE Player 0: did NOT find treasure in player's discard
NOTE Player 0: found 35 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 129, supplyTotalPre: 127
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 129
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 659 -> FAILED tests
*************** ITERATION # 660 ***************  
NOTE Player 2: found 24 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 283, supplyTotalPre: 281
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 283
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 660 -> FAILED tests
*************** ITERATION # 661 ***************  
NOTE Player 1: found 42 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 475, supplyTotalPre: 473
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 475
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 661 -> FAILED tests
*************** ITERATION # 662 ***************  
NOTE Player 0: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 423, supplyTotalPre: 421
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 423
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 662 -> FAILED tests
*************** ITERATION # 663 ***************  
NOTE Player 0: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 80, supplyTotalPre: 78
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 80
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 663 -> FAILED tests
*************** ITERATION # 664 ***************  
NOTE Player 1: found 94 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 249, supplyTotalPre: 247
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 249
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 664 -> FAILED tests
*************** ITERATION # 665 ***************  
NOTE Player 1: found 19 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 42, supplyTotalPre: 40
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 42
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 665 -> FAILED tests
*************** ITERATION # 666 ***************  
NOTE Player 2: found 36 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 74, supplyTotalPre: 72
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 74
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 666 -> FAILED tests
*************** ITERATION # 667 ***************  
NOTE Player 0: found 73 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 225, supplyTotalPre: 223
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 225
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 667 -> FAILED tests
*************** ITERATION # 668 ***************  
NOTE Player 1: found 48 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 391, supplyTotalPre: 389
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 391
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 668 -> FAILED tests
*************** ITERATION # 669 ***************  
NOTE Player 0: found 19 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 319, supplyTotalPre: 317
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 319
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 669 -> FAILED tests
*************** ITERATION # 670 ***************  
NOTE Player 2: found 47 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 204, supplyTotalPre: 202
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 204
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 670 -> FAILED tests
*************** ITERATION # 671 ***************  
NOTE Player 0: did NOT find treasure in player's discard
NOTE Player 0: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 407, supplyTotalPre: 405
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 407
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 671 -> FAILED tests
*************** ITERATION # 672 ***************  
NOTE Player 0: found 57 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 337, supplyTotalPre: 335
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 337
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 672 -> FAILED tests
*************** ITERATION # 673 ***************  
NOTE Player 1: found 93 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 211, supplyTotalPre: 209
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 211
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 673 -> FAILED tests
*************** ITERATION # 674 ***************  
NOTE Player 0: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 145, supplyTotalPre: 143
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 145
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 674 -> FAILED tests
*************** ITERATION # 675 ***************  
NOTE Player 2: found 93 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 72, supplyTotalPre: 70
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 72
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 675 -> FAILED tests
*************** ITERATION # 676 ***************  
NOTE Player 0: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 381, supplyTotalPre: 379
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 381
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 676 -> FAILED tests
*************** ITERATION # 677 ***************  
NOTE Player 2: found 69 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 177, supplyTotalPre: 175
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 177
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 677 -> FAILED tests
*************** ITERATION # 678 ***************  
NOTE Player 2: found 49 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 223, supplyTotalPre: 221
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 223
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 678 -> FAILED tests
*************** ITERATION # 679 ***************  
NOTE Player 0: found 81 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 168, supplyTotalPre: 166
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 168
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 679 -> FAILED tests
*************** ITERATION # 680 ***************  
NOTE Player 1: found 63 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 9, supplyTotalPre: 7
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 9
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 680 -> FAILED tests
*************** ITERATION # 681 ***************  
NOTE Player 1: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 162, supplyTotalPre: 160
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 162
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 681 -> FAILED tests
*************** ITERATION # 682 ***************  
NOTE Player 2: found 79 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 230, supplyTotalPre: 228
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 230
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 682 -> FAILED tests
*************** ITERATION # 683 ***************  
NOTE Player 1: did NOT find treasure in player's discard
NOTE Player 1: found 17 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 263, supplyTotalPre: 261
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 263
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 683 -> FAILED tests
*************** ITERATION # 684 ***************  
NOTE Player 0: found 69 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 282, supplyTotalPre: 280
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 282
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 684 -> FAILED tests
*************** ITERATION # 685 ***************  
NOTE Player 1: found 59 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 116, supplyTotalPre: 114
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 116
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 685 -> FAILED tests
*************** ITERATION # 686 ***************  
NOTE Player 0: found 67 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 144, supplyTotalPre: 142
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 144
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 686 -> FAILED tests
*************** ITERATION # 687 ***************  
NOTE Player 2: found 76 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 294, supplyTotalPre: 292
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 294
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 687 -> FAILED tests
*************** ITERATION # 688 ***************  
NOTE Player 2: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 352, supplyTotalPre: 350
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 352
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 688 -> FAILED tests
*************** ITERATION # 689 ***************  
NOTE Player 0: did NOT find treasure in player's deck
NOTE Player 0: found 8 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 195, supplyTotalPre: 193
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 195
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 689 -> FAILED tests
*************** ITERATION # 690 ***************  
NOTE Player 1: found 14 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 281, supplyTotalPre: 279
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 281
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 690 -> FAILED tests
*************** ITERATION # 691 ***************  
NOTE Player 1: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 257, supplyTotalPre: 255
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 257
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 691 -> FAILED tests
*************** ITERATION # 692 ***************  
NOTE Player 1: found 72 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 40, supplyTotalPre: 38
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 40
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 692 -> FAILED tests
*************** ITERATION # 693 ***************  
NOTE Player 0: found 16 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 191, supplyTotalPre: 189
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 191
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 693 -> FAILED tests
*************** ITERATION # 694 ***************  
NOTE Player 1: did NOT find Adventurer in player's hand
NOTE Player 1: found 75 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): SUCCESS: player #1, check if played card has increased by 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): ********** no assert performed
Test4 (check deck+discard count): ********** no assert performed
Test5 (check top cards of hand): topHand == 52
Branch-3 FAILED: player #1, check if top card of hand is unchanged
Debug Data: G->hand[topHand-2]: 1553886000, Gpre.hand[topHand-2]): 1553859544
printing POST game state: 

--START PRINTING GAME STATE -------------------
numPlayers = 3
SUPPLY TOTAL=169, supplyCount: #0: 22, #1: 8, #2: 0, #3: 9, #4: 13, #5: 8, #6: 19, #7: -1, #8: 9, #9: 6, #10: 6, #11: 3, #12: 1, #13: 3, #14: 9, #15: 7, #16: 2, #17: 0, #18: 2, #19: 7, #20: 7, #21: 12, #22: 3, #23: 0, #24: 6, #25: 2, #26: 6, 
embargoTokens: #0: 0, #1: 0, #2: 0, #3: 0, #4: 0, #5: 0, #6: 0, #7: 0, #8: 0, #9: 0, #10: 0, #11: 0, #12: 0, #13: 0, #14: 0, #15: 0, #16: 0, #17: 0, #18: 0, #19: 0, #20: 0, #21: 0, #22: 0, #23: 0, #24: 0, #25: 0, #26: 0, 
outpostPlayed = 0, outpostTurn = 387389207, whoseTurn = 1, phase = 0, numActions = 1, coins = 4, numBuys = 1
playedCardCount = 0, playedCards[x]: 
---------------------
PLAYER #0, HANDCOUNT=5, hand[player][hand]: [0][hand:0] = 1, [0][hand:1] = 4, [0][hand:2] = 4, [0][hand:3] = 4, [0][hand:4] = 4, 
PLAYER #0, DECKCOUNT=5, deck[player][hand]: [0][deck:0] = 1, [0][deck:1] = 4, [0][deck:2] = 4, [0][deck:3] = 1, [0][deck:4] = 4, 
PLAYER #0, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #1, HANDCOUNT=52, hand[player][hand]: [1][hand:0] = 6, [1][hand:1] = 20, [1][hand:2] = 5, [1][hand:3] = 25, [1][hand:4] = 2, [1][hand:5] = 19, [1][hand:6] = 13, [1][hand:7] = 10, [1][hand:8] = 25, [1][hand:9] = 24, [1][hand:10] = 25, [1][hand:11] = 16, [1][hand:12] = 10, [1][hand:13] = 9, [1][hand:14] = 2, [1][hand:15] = 9, [1][hand:16] = 10, [1][hand:17] = 25, [1][hand:18] = 15, [1][hand:19] = 9, [1][hand:20] = 19, [1][hand:21] = 17, [1][hand:22] = 8, [1][hand:23] = 19, [1][hand:24] = 11, [1][hand:25] = 14, [1][hand:26] = 17, [1][hand:27] = 13, [1][hand:28] = 19, [1][hand:29] = 18, [1][hand:30] = 25, [1][hand:31] = 16, [1][hand:32] = 2, [1][hand:33] = 1, [1][hand:34] = 9, [1][hand:35] = 19, [1][hand:36] = 17, [1][hand:37] = 17, [1][hand:38] = 20, [1][hand:39] = 4, [1][hand:40] = 20, [1][hand:41] = 21, [1][hand:42] = 2, [1][hand:43] = 2, [1][hand:44] = 0, [1][hand:45] = 5, [1][hand:46] = 2, [1][hand:47] = 2, [1][hand:48] = 11, [1][hand:49] = 16, [1][hand:50] = 5, [1][hand:51] = 4, 
PLAYER #1, DECKCOUNT=381, deck[player][hand]: [1][deck:0] = 5, [1][deck:1] = 14, [1][deck:2] = 19, [1][deck:3] = 22, [1][deck:4] = 13, [1][deck:5] = 13, [1][deck:6] = 15, [1][deck:7] = 6, [1][deck:8] = 21, [1][deck:9] = 8, [1][deck:10] = 1, [1][deck:11] = 23, [1][deck:12] = 0, [1][deck:13] = 25, [1][deck:14] = 19, [1][deck:15] = 11, [1][deck:16] = 4, [1][deck:17] = 18, [1][deck:18] = 0, [1][deck:19] = 17, [1][deck:20] = 12, [1][deck:21] = 23, [1][deck:22] = 6, [1][deck:23] = 7, [1][deck:24] = 13, [1][deck:25] = 6, [1][deck:26] = 24, [1][deck:27] = 16, [1][deck:28] = 16, [1][deck:29] = 18, [1][deck:30] = 9, [1][deck:31] = 23, [1][deck:32] = 25, [1][deck:33] = 12, [1][deck:34] = 22, [1][deck:35] = 2, [1][deck:36] = 5, [1][deck:37] = 13, [1][deck:38] = 13, [1][deck:39] = 20, [1][deck:40] = 14, [1][deck:41] = 19, [1][deck:42] = 16, [1][deck:43] = 17, [1][deck:44] = 12, [1][deck:45] = 2, [1][deck:46] = 12, [1][deck:47] = 22, [1][deck:48] = 26, [1][deck:49] = 9, [1][deck:50] = 19, [1][deck:51] = 16, [1][deck:52] = 3, [1][deck:53] = 1, [1][deck:54] = 19, [1][deck:55] = 20, [1][deck:56] = 4, [1][deck:57] = 9, [1][deck:58] = 1, [1][deck:59] = 14, [1][deck:60] = 3, [1][deck:61] = 23, [1][deck:62] = 1, [1][deck:63] = 20, [1][deck:64] = 3, [1][deck:65] = 1, [1][deck:66] = 13, [1][deck:67] = 6, [1][deck:68] = 12, [1][deck:69] = 18, [1][deck:70] = 22, [1][deck:71] = 23, [1][deck:72] = 8, [1][deck:73] = 4, [1][deck:74] = 4, [1][deck:75] = 24, [1][deck:76] = 10, [1][deck:77] = 25, [1][deck:78] = 26, [1][deck:79] = 15, [1][deck:80] = 13, [1][deck:81] = 0, [1][deck:82] = 13, [1][deck:83] = 24, [1][deck:84] = 14, [1][deck:85] = 20, [1][deck:86] = 16, [1][deck:87] = 25, [1][deck:88] = 4, [1][deck:89] = 18, [1][deck:90] = 26, [1][deck:91] = 10, [1][deck:92] = 19, [1][deck:93] = 11, [1][deck:94] = 20, [1][deck:95] = 6, [1][deck:96] = 23, [1][deck:97] = 20, [1][deck:98] = 25, [1][deck:99] = 22, [1][deck:100] = 3, [1][deck:101] = 16, [1][deck:102] = 23, [1][deck:103] = 18, [1][deck:104] = 6, [1][deck:105] = 2, [1][deck:106] = 23, [1][deck:107] = 7, [1][deck:108] = 19, [1][deck:109] = 16, [1][deck:110] = 7, [1][deck:111] = 20, [1][deck:112] = 4, [1][deck:113] = 3, [1][deck:114] = 5, [1][deck:115] = 18, [1][deck:116] = 19, [1][deck:117] = 25, [1][deck:118] = 19, [1][deck:119] = 25, [1][deck:120] = 18, [1][deck:121] = 6, [1][deck:122] = 24, [1][deck:123] = 18, [1][deck:124] = 0, [1][deck:125] = 10, [1][deck:126] = 5, [1][deck:127] = 25, [1][deck:128] = 16, [1][deck:129] = 14, [1][deck:130] = 4, [1][deck:131] = 15, [1][deck:132] = 3, [1][deck:133] = 23, [1][deck:134] = 2, [1][deck:135] = 22, [1][deck:136] = 17, [1][deck:137] = 23, [1][deck:138] = 1, [1][deck:139] = 21, [1][deck:140] = 0, [1][deck:141] = 10, [1][deck:142] = 5, [1][deck:143] = 12, [1][deck:144] = 19, [1][deck:145] = 7, [1][deck:146] = 5, [1][deck:147] = 4, [1][deck:148] = 0, [1][deck:149] = 13, [1][deck:150] = 13, [1][deck:151] = 26, [1][deck:152] = 12, [1][deck:153] = 7, [1][deck:154] = 4, [1][deck:155] = 14, [1][deck:156] = 2, [1][deck:157] = 17, [1][deck:158] = 7, [1][deck:159] = 16, [1][deck:160] = 25, [1][deck:161] = 18, [1][deck:162] = 6, [1][deck:163] = 7, [1][deck:164] = 4, [1][deck:165] = 15, [1][deck:166] = 23, [1][deck:167] = 12, [1][deck:168] = 9, [1][deck:169] = 17, [1][deck:170] = 22, [1][deck:171] = 15, [1][deck:172] = 16, [1][deck:173] = 21, [1][deck:174] = 2, [1][deck:175] = 16, [1][deck:176] = 16, [1][deck:177] = 25, [1][deck:178] = 22, [1][deck:179] = 18, [1][deck:180] = 26, [1][deck:181] = 12, [1][deck:182] = 7, [1][deck:183] = 0, [1][deck:184] = 11, [1][deck:185] = 20, [1][deck:186] = 24, [1][deck:187] = 14, [1][deck:188] = 7, [1][deck:189] = 2, [1][deck:190] = 24, [1][deck:191] = 17, [1][deck:192] = 8, [1][deck:193] = 18, [1][deck:194] = 17, [1][deck:195] = 16, [1][deck:196] = 17, [1][deck:197] = 15, [1][deck:198] = 20, [1][deck:199] = 16, [1][deck:200] = 5, [1][deck:201] = 26, [1][deck:202] = 0, [1][deck:203] = 19, [1][deck:204] = 5, [1][deck:205] = 20, [1][deck:206] = 17, [1][deck:207] = 5, [1][deck:208] = 1, [1][deck:209] = 0, [1][deck:210] = 25, [1][deck:211] = 16, [1][deck:212] = 22, [1][deck:213] = 16, [1][deck:214] = 12, [1][deck:215] = 3, [1][deck:216] = 5, [1][deck:217] = 2, [1][deck:218] = 7, [1][deck:219] = 12, [1][deck:220] = 4, [1][deck:221] = 18, [1][deck:222] = 7, [1][deck:223] = 7, [1][deck:224] = 15, [1][deck:225] = 13, [1][deck:226] = 2, [1][deck:227] = 4, [1][deck:228] = 6, [1][deck:229] = 16, [1][deck:230] = 21, [1][deck:231] = 24, [1][deck:232] = 17, [1][deck:233] = 19, [1][deck:234] = 20, [1][deck:235] = 23, [1][deck:236] = 16, [1][deck:237] = 7, [1][deck:238] = 22, [1][deck:239] = 22, [1][deck:240] = 26, [1][deck:241] = 0, [1][deck:242] = 0, [1][deck:243] = 0, [1][deck:244] = 11, [1][deck:245] = 15, [1][deck:246] = 10, [1][deck:247] = 18, [1][deck:248] = 14, [1][deck:249] = 17, [1][deck:250] = 10, [1][deck:251] = 25, [1][deck:252] = 22, [1][deck:253] = 21, [1][deck:254] = 1, [1][deck:255] = 8, [1][deck:256] = 20, [1][deck:257] = 25, [1][deck:258] = 3, [1][deck:259] = 16, [1][deck:260] = 15, [1][deck:261] = 7, [1][deck:262] = 23, [1][deck:263] = 22, [1][deck:264] = 20, [1][deck:265] = 16, [1][deck:266] = 24, [1][deck:267] = 13, [1][deck:268] = 13, [1][deck:269] = 21, [1][deck:270] = 20, [1][deck:271] = 26, [1][deck:272] = 10, [1][deck:273] = 5, [1][deck:274] = 20, [1][deck:275] = 15, [1][deck:276] = 18, [1][deck:277] = 21, [1][deck:278] = 16, [1][deck:279] = 17, [1][deck:280] = 5, [1][deck:281] = 18, [1][deck:282] = 18, [1][deck:283] = 16, [1][deck:284] = 0, [1][deck:285] = 20, [1][deck:286] = 18, [1][deck:287] = 25, [1][deck:288] = 20, [1][deck:289] = 16, [1][deck:290] = 4, [1][deck:291] = 20, [1][deck:292] = 26, [1][deck:293] = 16, [1][deck:294] = 12, [1][deck:295] = 3, [1][deck:296] = 6, [1][deck:297] = 21, [1][deck:298] = 10, [1][deck:299] = 9, [1][deck:300] = 24, [1][deck:301] = 21, [1][deck:302] = 26, [1][deck:303] = 0, [1][deck:304] = 17, [1][deck:305] = 24, [1][deck:306] = 2, [1][deck:307] = 22, [1][deck:308] = 24, [1][deck:309] = 25, [1][deck:310] = 22, [1][deck:311] = 9, [1][deck:312] = 5, [1][deck:313] = 0, [1][deck:314] = 14, [1][deck:315] = 21, [1][deck:316] = 14, [1][deck:317] = 13, [1][deck:318] = 14, [1][deck:319] = 18, [1][deck:320] = 12, [1][deck:321] = 12, [1][deck:322] = 9, [1][deck:323] = 11, [1][deck:324] = 20, [1][deck:325] = 15, [1][deck:326] = 16, [1][deck:327] = 12, [1][deck:328] = 2, [1][deck:329] = 1, [1][deck:330] = 25, [1][deck:331] = 24, [1][deck:332] = 0, [1][deck:333] = 20, [1][deck:334] = 6, [1][deck:335] = 3, [1][deck:336] = 15, [1][deck:337] = 18, [1][deck:338] = 1, [1][deck:339] = 7, [1][deck:340] = 25, [1][deck:341] = 1, [1][deck:342] = 19, [1][deck:343] = 25, [1][deck:344] = 3, [1][deck:345] = 5, [1][deck:346] = 18, [1][deck:347] = 2, [1][deck:348] = 2, [1][deck:349] = 14, [1][deck:350] = 10, [1][deck:351] = 1, [1][deck:352] = 8, [1][deck:353] = 16, [1][deck:354] = 9, [1][deck:355] = 3, [1][deck:356] = 21, [1][deck:357] = 0, [1][deck:358] = 0, [1][deck:359] = 20, [1][deck:360] = 6, [1][deck:361] = 19, [1][deck:362] = 14, [1][deck:363] = 24, [1][deck:364] = 1, [1][deck:365] = 3, [1][deck:366] = 12, [1][deck:367] = 2, [1][deck:368] = 26, [1][deck:369] = 25, [1][deck:370] = 26, [1][deck:371] = 11, [1][deck:372] = 14, [1][deck:373] = 10, [1][deck:374] = 8, [1][deck:375] = 8, [1][deck:376] = 15, [1][deck:377] = 16, [1][deck:378] = 16, [1][deck:379] = 6, [1][deck:380] = 4, 
PLAYER #1, DISCARDCOUNT=298, discard[player][hand]: [1][discard: 0] = 14, [1][discard: 1] = 12, [1][discard: 2] = 11, [1][discard: 3] = 11, [1][discard: 4] = 13, [1][discard: 5] = 0, [1][discard: 6] = 20, [1][discard: 7] = 25, [1][discard: 8] = 3, [1][discard: 9] = 9, [1][discard: 10] = 17, [1][discard: 11] = 15, [1][discard: 12] = 21, [1][discard: 13] = 10, [1][discard: 14] = 20, [1][discard: 15] = 6, [1][discard: 16] = 4, [1][discard: 17] = 6, [1][discard: 18] = 26, [1][discard: 19] = 9, [1][discard: 20] = 9, [1][discard: 21] = 21, [1][discard: 22] = 26, [1][discard: 23] = 17, [1][discard: 24] = 16, [1][discard: 25] = 3, [1][discard: 26] = 24, [1][discard: 27] = 7, [1][discard: 28] = 5, [1][discard: 29] = 22, [1][discard: 30] = 19, [1][discard: 31] = 14, [1][discard: 32] = 21, [1][discard: 33] = 11, [1][discard: 34] = 16, [1][discard: 35] = 0, [1][discard: 36] = 2, [1][discard: 37] = 13, [1][discard: 38] = 7, [1][discard: 39] = 4, [1][discard: 40] = 23, [1][discard: 41] = 21, [1][discard: 42] = 23, [1][discard: 43] = 18, [1][discard: 44] = 20, [1][discard: 45] = 16, [1][discard: 46] = 25, [1][discard: 47] = 13, [1][discard: 48] = 11, [1][discard: 49] = 24, [1][discard: 50] = 15, [1][discard: 51] = 25, [1][discard: 52] = 8, [1][discard: 53] = 13, [1][discard: 54] = 24, [1][discard: 55] = 11, [1][discard: 56] = 7, [1][discard: 57] = 20, [1][discard: 58] = 22, [1][discard: 59] = 6, [1][discard: 60] = 11, [1][discard: 61] = 9, [1][discard: 62] = 1, [1][discard: 63] = 21, [1][discard: 64] = 8, [1][discard: 65] = 15, [1][discard: 66] = 20, [1][discard: 67] = 4, [1][discard: 68] = 1, [1][discard: 69] = 12, [1][discard: 70] = 2, [1][discard: 71] = 11, [1][discard: 72] = 14, [1][discard: 73] = 2, [1][discard: 74] = 3, [1][discard: 75] = 20, [1][discard: 76] = 12, [1][discard: 77] = 11, [1][discard: 78] = 25, [1][discard: 79] = 3, [1][discard: 80] = 10, [1][discard: 81] = 26, [1][discard: 82] = 23, [1][discard: 83] = 1, [1][discard: 84] = 21, [1][discard: 85] = 12, [1][discard: 86] = 17, [1][discard: 87] = 20, [1][discard: 88] = 15, [1][discard: 89] = 19, [1][discard: 90] = 24, [1][discard: 91] = 21, [1][discard: 92] = 2, [1][discard: 93] = 4, [1][discard: 94] = 16, [1][discard: 95] = 3, [1][discard: 96] = 3, [1][discard: 97] = 16, [1][discard: 98] = 12, [1][discard: 99] = 8, [1][discard: 100] = 9, [1][discard: 101] = 8, [1][discard: 102] = 10, [1][discard: 103] = 25, [1][discard: 104] = 2, [1][discard: 105] = 16, [1][discard: 106] = 16, [1][discard: 107] = 3, [1][discard: 108] = 2, [1][discard: 109] = 21, [1][discard: 110] = 5, [1][discard: 111] = 4, [1][discard: 112] = 5, [1][discard: 113] = 15, [1][discard: 114] = 3, [1][discard: 115] = 18, [1][discard: 116] = 7, [1][discard: 117] = 22, [1][discard: 118] = 7, [1][discard: 119] = 5, [1][discard: 120] = 2, [1][discard: 121] = 21, [1][discard: 122] = 11, [1][discard: 123] = 8, [1][discard: 124] = 14, [1][discard: 125] = 1, [1][discard: 126] = 15, [1][discard: 127] = 13, [1][discard: 128] = 17, [1][discard: 129] = 23, [1][discard: 130] = 4, [1][discard: 131] = 12, [1][discard: 132] = 10, [1][discard: 133] = 6, [1][discard: 134] = 5, [1][discard: 135] = 0, [1][discard: 136] = 13, [1][discard: 137] = 2, [1][discard: 138] = 3, [1][discard: 139] = 3, [1][discard: 140] = 19, [1][discard: 141] = 4, [1][discard: 142] = 9, [1][discard: 143] = 10, [1][discard: 144] = 22, [1][discard: 145] = 19, [1][discard: 146] = 26, [1][discard: 147] = 10, [1][discard: 148] = 19, [1][discard: 149] = 25, [1][discard: 150] = 5, [1][discard: 151] = 18, [1][discard: 152] = 18, [1][discard: 153] = 14, [1][discard: 154] = 6, [1][discard: 155] = 12, [1][discard: 156] = 14, [1][discard: 157] = 16, [1][discard: 158] = 21, [1][discard: 159] = 17, [1][discard: 160] = 19, [1][discard: 161] = 17, [1][discard: 162] = 7, [1][discard: 163] = 6, [1][discard: 164] = 13, [1][discard: 165] = 1, [1][discard: 166] = 23, [1][discard: 167] = 2, [1][discard: 168] = 16, [1][discard: 169] = 12, [1][discard: 170] = 19, [1][discard: 171] = 0, [1][discard: 172] = 20, [1][discard: 173] = 1, [1][discard: 174] = 22, [1][discard: 175] = 23, [1][discard: 176] = 21, [1][discard: 177] = 23, [1][discard: 178] = 13, [1][discard: 179] = 10, [1][discard: 180] = 25, [1][discard: 181] = 11, [1][discard: 182] = 11, [1][discard: 183] = 14, [1][discard: 184] = 26, [1][discard: 185] = 8, [1][discard: 186] = 21, [1][discard: 187] = 20, [1][discard: 188] = 21, [1][discard: 189] = 20, [1][discard: 190] = 13, [1][discard: 191] = 1, [1][discard: 192] = 9, [1][discard: 193] = 16, [1][discard: 194] = 14, [1][discard: 195] = 22, [1][discard: 196] = 15, [1][discard: 197] = 10, [1][discard: 198] = 22, [1][discard: 199] = 21, [1][discard: 200] = 3, [1][discard: 201] = 23, [1][discard: 202] = 0, [1][discard: 203] = 8, [1][discard: 204] = 24, [1][discard: 205] = 16, [1][discard: 206] = 17, [1][discard: 207] = 24, [1][discard: 208] = 5, [1][discard: 209] = 15, [1][discard: 210] = 2, [1][discard: 211] = 21, [1][discard: 212] = 5, [1][discard: 213] = 0, [1][discard: 214] = 18, [1][discard: 215] = 11, [1][discard: 216] = 8, [1][discard: 217] = 21, [1][discard: 218] = 11, [1][discard: 219] = 4, [1][discard: 220] = 6, [1][discard: 221] = 4, [1][discard: 222] = 17, [1][discard: 223] = 5, [1][discard: 224] = 0, [1][discard: 225] = 13, [1][discard: 226] = 22, [1][discard: 227] = 9, [1][discard: 228] = 25, [1][discard: 229] = 11, [1][discard: 230] = 6, [1][discard: 231] = 0, [1][discard: 232] = 4, [1][discard: 233] = 21, [1][discard: 234] = 24, [1][discard: 235] = 25, [1][discard: 236] = 23, [1][discard: 237] = 4, [1][discard: 238] = 13, [1][discard: 239] = 24, [1][discard: 240] = 15, [1][discard: 241] = 16, [1][discard: 242] = 17, [1][discard: 243] = 10, [1][discard: 244] = 16, [1][discard: 245] = 3, [1][discard: 246] = 13, [1][discard: 247] = 12, [1][discard: 248] = 26, [1][discard: 249] = 20, [1][discard: 250] = 8, [1][discard: 251] = 0, [1][discard: 252] = 23, [1][discard: 253] = 17, [1][discard: 254] = 6, [1][discard: 255] = 6, [1][discard: 256] = 23, [1][discard: 257] = 24, [1][discard: 258] = 24, [1][discard: 259] = 19, [1][discard: 260] = 2, [1][discard: 261] = 11, [1][discard: 262] = 18, [1][discard: 263] = 0, [1][discard: 264] = 0, [1][discard: 265] = 4, [1][discard: 266] = 13, [1][discard: 267] = 11, [1][discard: 268] = 18, [1][discard: 269] = 9, [1][discard: 270] = 0, [1][discard: 271] = 0, [1][discard: 272] = 2, [1][discard: 273] = 6, [1][discard: 274] = 0, [1][discard: 275] = 17, [1][discard: 276] = 19, [1][discard: 277] = 7, [1][discard: 278] = 22, [1][discard: 279] = 11, [1][discard: 280] = 11, [1][discard: 281] = 21, [1][discard: 282] = 8, [1][discard: 283] = 24, [1][discard: 284] = 13, [1][discard: 285] = 0, [1][discard: 286] = 17, [1][discard: 287] = 18, [1][discard: 288] = 22, [1][discard: 289] = 7, [1][discard: 290] = 1, [1][discard: 291] = 12, [1][discard: 292] = 21, [1][discard: 293] = 13, [1][discard: 294] = 8, [1][discard: 295] = 3, [1][discard: 296] = 17, [1][discard: 297] = 8, 
---------------------
PLAYER #2, HANDCOUNT=0, hand[player][hand]: 
PLAYER #2, DECKCOUNT=10, deck[player][hand]: [2][deck:0] = 4, [2][deck:1] = 4, [2][deck:2] = 4, [2][deck:3] = 1, [2][deck:4] = 1, [2][deck:5] = 1, [2][deck:6] = 4, [2][deck:7] = 4, [2][deck:8] = 4, [2][deck:9] = 4, 
PLAYER #2, DISCARDCOUNT=0, discard[player][hand]: 
--END PRINTING GAME STATE -------------------

adventurer test - iteration 694 -> FAILED tests
*************** ITERATION # 695 ***************  
NOTE Player 1: found 9 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 357, supplyTotalPre: 355
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 357
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 695 -> FAILED tests
*************** ITERATION # 696 ***************  
NOTE Player 2: found 56 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 398, supplyTotalPre: 396
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 398
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 696 -> FAILED tests
*************** ITERATION # 697 ***************  
NOTE Player 1: found 84 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 295, supplyTotalPre: 293
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 295
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 697 -> FAILED tests
*************** ITERATION # 698 ***************  
NOTE Player 1: found 57 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 408, supplyTotalPre: 406
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 408
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 698 -> FAILED tests
*************** ITERATION # 699 ***************  
NOTE Player 1: found 68 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 410, supplyTotalPre: 408
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 410
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 699 -> FAILED tests
*************** ITERATION # 700 ***************  
NOTE Player 1: found 90 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 165, supplyTotalPre: 163
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 165
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 700 -> FAILED tests
*************** ITERATION # 701 ***************  
NOTE Player 0: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 479, supplyTotalPre: 477
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 479
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 701 -> FAILED tests
*************** ITERATION # 702 ***************  
NOTE Player 2: found 69 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 355, supplyTotalPre: 353
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 355
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 702 -> FAILED tests
*************** ITERATION # 703 ***************  
NOTE Player 2: found 63 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 250, supplyTotalPre: 248
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 250
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 703 -> FAILED tests
*************** ITERATION # 704 ***************  
NOTE Player 0: found 36 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 292, supplyTotalPre: 290
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 292
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 704 -> FAILED tests
*************** ITERATION # 705 ***************  
NOTE Player 2: found 68 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 360, supplyTotalPre: 358
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 360
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 705 -> FAILED tests
*************** ITERATION # 706 ***************  
NOTE Player 2: did NOT find treasure in player's discard
NOTE Player 2: found 31 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 75, supplyTotalPre: 73
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 75
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 706 -> FAILED tests
*************** ITERATION # 707 ***************  
NOTE Player 2: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 87, supplyTotalPre: 85
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 87
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 707 -> FAILED tests
*************** ITERATION # 708 ***************  
NOTE Player 2: found 43 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 249, supplyTotalPre: 247
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 249
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 708 -> FAILED tests
*************** ITERATION # 709 ***************  
NOTE Player 2: found 76 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 176, supplyTotalPre: 174
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 176
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 709 -> FAILED tests
*************** ITERATION # 710 ***************  
NOTE Player 1: found 21 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 322, supplyTotalPre: 320
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 322
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 710 -> FAILED tests
*************** ITERATION # 711 ***************  
NOTE Player 0: found 90 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 177, supplyTotalPre: 175
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 177
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 711 -> FAILED tests
*************** ITERATION # 712 ***************  
NOTE Player 2: found 80 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 362, supplyTotalPre: 360
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 362
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 712 -> FAILED tests
*************** ITERATION # 713 ***************  
NOTE Player 1: found 23 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 317, supplyTotalPre: 315
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 317
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 713 -> FAILED tests
*************** ITERATION # 714 ***************  
NOTE Player 1: found 105 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 203, supplyTotalPre: 201
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 203
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 714 -> FAILED tests
*************** ITERATION # 715 ***************  
NOTE Player 2: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 352, supplyTotalPre: 350
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 352
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 715 -> FAILED tests
*************** ITERATION # 716 ***************  
NOTE Player 1: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 277, supplyTotalPre: 275
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 277
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 716 -> FAILED tests
*************** ITERATION # 717 ***************  
NOTE Player 1: found 60 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 161, supplyTotalPre: 159
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 161
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 717 -> FAILED tests
*************** ITERATION # 718 ***************  
NOTE Player 0: found 92 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 492, supplyTotalPre: 490
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 492
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 718 -> FAILED tests
*************** ITERATION # 719 ***************  
NOTE Player 1: found 64 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 318, supplyTotalPre: 316
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 318
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 719 -> FAILED tests
*************** ITERATION # 720 ***************  
NOTE Player 1: found 31 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 331, supplyTotalPre: 329
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 331
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 720 -> FAILED tests
*************** ITERATION # 721 ***************  
NOTE Player 1: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 8, supplyTotalPre: 6
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 8
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 721 -> FAILED tests
*************** ITERATION # 722 ***************  
NOTE Player 1: found 73 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 212, supplyTotalPre: 210
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 212
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 722 -> FAILED tests
*************** ITERATION # 723 ***************  
NOTE Player 2: found 108 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 246, supplyTotalPre: 244
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 246
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 723 -> FAILED tests
*************** ITERATION # 724 ***************  
NOTE Player 1: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 205, supplyTotalPre: 203
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 205
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 724 -> FAILED tests
*************** ITERATION # 725 ***************  
NOTE Player 2: found 79 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 475, supplyTotalPre: 473
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 475
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 725 -> FAILED tests
*************** ITERATION # 726 ***************  
NOTE Player 2: found 45 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 8, supplyTotalPre: 6
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 8
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 726 -> FAILED tests
*************** ITERATION # 727 ***************  
NOTE Player 0: found 56 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 397, supplyTotalPre: 395
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 397
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 727 -> FAILED tests
*************** ITERATION # 728 ***************  
NOTE Player 0: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 355, supplyTotalPre: 353
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 355
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 728 -> FAILED tests
*************** ITERATION # 729 ***************  
NOTE Player 0: found 47 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 386, supplyTotalPre: 384
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 386
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 729 -> FAILED tests
*************** ITERATION # 730 ***************  
NOTE Player 1: did NOT find treasure in player's discard
NOTE Player 1: found 11 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 437, supplyTotalPre: 435
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 437
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 730 -> FAILED tests
*************** ITERATION # 731 ***************  
NOTE Player 2: found 71 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 258, supplyTotalPre: 256
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 258
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 731 -> FAILED tests
*************** ITERATION # 732 ***************  
NOTE Player 0: found 110 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 229, supplyTotalPre: 227
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 229
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 732 -> FAILED tests
*************** ITERATION # 733 ***************  
NOTE Player 2: found 89 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 39, supplyTotalPre: 37
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 39
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 733 -> FAILED tests
*************** ITERATION # 734 ***************  
NOTE Player 1: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 285, supplyTotalPre: 283
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 285
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 734 -> FAILED tests
*************** ITERATION # 735 ***************  
NOTE Player 2: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 294, supplyTotalPre: 292
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 294
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 735 -> FAILED tests
*************** ITERATION # 736 ***************  
NOTE Player 0: found 93 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 297, supplyTotalPre: 295
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 297
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 736 -> FAILED tests
*************** ITERATION # 737 ***************  
NOTE Player 2: found 24 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 502, supplyTotalPre: 500
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 502
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 737 -> FAILED tests
*************** ITERATION # 738 ***************  
NOTE Player 2: found 30 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 408, supplyTotalPre: 406
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 408
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 738 -> FAILED tests
*************** ITERATION # 739 ***************  
NOTE Player 2: found 54 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 286, supplyTotalPre: 284
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 286
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 739 -> FAILED tests
*************** ITERATION # 740 ***************  
NOTE Player 2: found 35 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 154, supplyTotalPre: 152
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 154
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 740 -> FAILED tests
*************** ITERATION # 741 ***************  
NOTE Player 2: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 183, supplyTotalPre: 181
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 183
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 741 -> FAILED tests
*************** ITERATION # 742 ***************  
NOTE Player 0: found 77 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 366, supplyTotalPre: 364
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 366
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 742 -> FAILED tests
*************** ITERATION # 743 ***************  
NOTE Player 1: found 67 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 388, supplyTotalPre: 386
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 388
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 743 -> FAILED tests
*************** ITERATION # 744 ***************  
NOTE Player 0: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 375, supplyTotalPre: 373
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 375
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 744 -> FAILED tests
*************** ITERATION # 745 ***************  
NOTE Player 0: found 10 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 10, supplyTotalPre: 8
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 10
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 745 -> FAILED tests
*************** ITERATION # 746 ***************  
NOTE Player 0: found 52 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 498, supplyTotalPre: 496
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 498
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 746 -> FAILED tests
*************** ITERATION # 747 ***************  
NOTE Player 0: found 43 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 231, supplyTotalPre: 229
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 231
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 747 -> FAILED tests
*************** ITERATION # 748 ***************  
NOTE Player 2: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 205, supplyTotalPre: 203
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 205
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 748 -> FAILED tests
*************** ITERATION # 749 ***************  
NOTE Player 0: found 89 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 269, supplyTotalPre: 267
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 269
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 749 -> FAILED tests
*************** ITERATION # 750 ***************  
NOTE Player 1: found 54 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 121, supplyTotalPre: 119
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 121
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 750 -> FAILED tests
*************** ITERATION # 751 ***************  
NOTE Player 0: found 87 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 292, supplyTotalPre: 290
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 292
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 751 -> FAILED tests
*************** ITERATION # 752 ***************  
NOTE Player 0: found 89 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 280, supplyTotalPre: 278
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 280
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 752 -> FAILED tests
*************** ITERATION # 753 ***************  
NOTE Player 0: found 82 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 277, supplyTotalPre: 275
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 277
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 753 -> FAILED tests
*************** ITERATION # 754 ***************  
NOTE Player 0: found 62 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 67, supplyTotalPre: 65
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 67
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 754 -> FAILED tests
*************** ITERATION # 755 ***************  
NOTE Player 2: found 14 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 31, supplyTotalPre: 29
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 31
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 755 -> FAILED tests
*************** ITERATION # 756 ***************  
NOTE Player 0: found 35 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 196, supplyTotalPre: 194
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 196
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 756 -> FAILED tests
*************** ITERATION # 757 ***************  
NOTE Player 2: found 66 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 303, supplyTotalPre: 301
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 303
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 757 -> FAILED tests
*************** ITERATION # 758 ***************  
NOTE Player 1: found 80 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 271, supplyTotalPre: 269
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 271
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 758 -> FAILED tests
*************** ITERATION # 759 ***************  
NOTE Player 2: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 73, supplyTotalPre: 71
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 73
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 759 -> FAILED tests
*************** ITERATION # 760 ***************  
NOTE Player 0: found 113 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 266, supplyTotalPre: 264
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 266
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 760 -> FAILED tests
*************** ITERATION # 761 ***************  
NOTE Player 0: found 84 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 286, supplyTotalPre: 284
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 286
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 761 -> FAILED tests
*************** ITERATION # 762 ***************  
NOTE Player 2: found 118 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 318, supplyTotalPre: 316
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 318
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 762 -> FAILED tests
*************** ITERATION # 763 ***************  
NOTE Player 1: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 389, supplyTotalPre: 387
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 389
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 763 -> FAILED tests
*************** ITERATION # 764 ***************  
NOTE Player 0: found 72 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 180, supplyTotalPre: 178
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 180
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 764 -> FAILED tests
*************** ITERATION # 765 ***************  
NOTE Player 2: found 40 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 136, supplyTotalPre: 134
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 136
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 765 -> FAILED tests
*************** ITERATION # 766 ***************  
NOTE Player 2: found 67 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 287, supplyTotalPre: 285
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 287
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 766 -> FAILED tests
*************** ITERATION # 767 ***************  
NOTE Player 0: found 68 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 198, supplyTotalPre: 196
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 198
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 767 -> FAILED tests
*************** ITERATION # 768 ***************  
NOTE Player 0: found 5 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 225, supplyTotalPre: 223
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 225
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 768 -> FAILED tests
*************** ITERATION # 769 ***************  
NOTE Player 1: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 161, supplyTotalPre: 159
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 161
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 769 -> FAILED tests
*************** ITERATION # 770 ***************  
NOTE Player 0: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 406, supplyTotalPre: 404
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 406
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 770 -> FAILED tests
*************** ITERATION # 771 ***************  
NOTE Player 0: found 80 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 364, supplyTotalPre: 362
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 364
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 771 -> FAILED tests
*************** ITERATION # 772 ***************  
NOTE Player 1: found 36 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 89, supplyTotalPre: 87
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 89
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 772 -> FAILED tests
*************** ITERATION # 773 ***************  
NOTE Player 1: found 47 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 74, supplyTotalPre: 72
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 74
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 773 -> FAILED tests
*************** ITERATION # 774 ***************  
NOTE Player 0: found 38 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 485, supplyTotalPre: 483
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 485
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 774 -> FAILED tests
*************** ITERATION # 775 ***************  
NOTE Player 2: found 78 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 63, supplyTotalPre: 61
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 63
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 775 -> FAILED tests
*************** ITERATION # 776 ***************  
NOTE Player 0: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 426, supplyTotalPre: 424
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 426
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 776 -> FAILED tests
*************** ITERATION # 777 ***************  
NOTE Player 1: found 65 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 485, supplyTotalPre: 483
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 485
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 777 -> FAILED tests
*************** ITERATION # 778 ***************  
NOTE Player 0: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 441, supplyTotalPre: 439
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 441
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 778 -> FAILED tests
*************** ITERATION # 779 ***************  
NOTE Player 1: found 72 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 416, supplyTotalPre: 414
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 416
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 779 -> FAILED tests
*************** ITERATION # 780 ***************  
NOTE Player 1: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 102, supplyTotalPre: 100
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 102
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 780 -> FAILED tests
*************** ITERATION # 781 ***************  
NOTE Player 1: found 89 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 168, supplyTotalPre: 166
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 168
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 781 -> FAILED tests
*************** ITERATION # 782 ***************  
NOTE Player 0: found 34 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 380, supplyTotalPre: 378
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 380
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 782 -> FAILED tests
*************** ITERATION # 783 ***************  
NOTE Player 1: found 25 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 48, supplyTotalPre: 46
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 48
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 783 -> FAILED tests
*************** ITERATION # 784 ***************  
NOTE Player 2: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 17, supplyTotalPre: 15
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 17
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 784 -> FAILED tests
*************** ITERATION # 785 ***************  
NOTE Player 0: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 388, supplyTotalPre: 386
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 388
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 785 -> FAILED tests
*************** ITERATION # 786 ***************  
NOTE Player 0: found 56 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 239, supplyTotalPre: 237
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 239
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 786 -> FAILED tests
*************** ITERATION # 787 ***************  
NOTE Player 1: found 60 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 213, supplyTotalPre: 211
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 213
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 787 -> FAILED tests
*************** ITERATION # 788 ***************  
NOTE Player 0: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 432, supplyTotalPre: 430
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 432
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 788 -> FAILED tests
*************** ITERATION # 789 ***************  
NOTE Player 0: found 48 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 126, supplyTotalPre: 124
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 126
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 789 -> FAILED tests
*************** ITERATION # 790 ***************  
NOTE Player 2: found 36 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 291, supplyTotalPre: 289
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 291
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 790 -> FAILED tests
*************** ITERATION # 791 ***************  
NOTE Player 1: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 18, supplyTotalPre: 16
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 18
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 791 -> FAILED tests
*************** ITERATION # 792 ***************  
NOTE Player 1: found 87 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 306, supplyTotalPre: 304
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 306
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 792 -> FAILED tests
*************** ITERATION # 793 ***************  
NOTE Player 0: did NOT find treasure in player's deck
NOTE Player 0: found 38 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 129, supplyTotalPre: 127
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 129
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 793 -> FAILED tests
*************** ITERATION # 794 ***************  
NOTE Player 1: found 99 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 225, supplyTotalPre: 223
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 225
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 794 -> FAILED tests
*************** ITERATION # 795 ***************  
NOTE Player 2: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 268, supplyTotalPre: 266
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 268
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 795 -> FAILED tests
*************** ITERATION # 796 ***************  
NOTE Player 0: found 37 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 312, supplyTotalPre: 310
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 312
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 796 -> FAILED tests
*************** ITERATION # 797 ***************  
NOTE Player 1: found 94 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 314, supplyTotalPre: 312
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 314
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 797 -> FAILED tests
*************** ITERATION # 798 ***************  
NOTE Player 0: found 49 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 339, supplyTotalPre: 337
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 339
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 798 -> FAILED tests
*************** ITERATION # 799 ***************  
NOTE Player 0: did NOT find Adventurer in player's hand
NOTE Player 0: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): SUCCESS: player #0, check if played card has increased by 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): ********** no assert performed
Test4 (check deck+discard count): ********** no assert performed
Test5 (check top cards of hand): topHand == 7
Branch-3 FAILED: player #0, check if top card of hand is unchanged
Debug Data: G->hand[topHand-2]: 1553796000, Gpre.hand[topHand-2]): 1553769544
printing POST game state: 

--START PRINTING GAME STATE -------------------
numPlayers = 3
SUPPLY TOTAL=169, supplyCount: #0: 29, #1: 7, #2: 7, #3: 0, #4: 9, #5: 2, #6: 6, #7: 9, #8: 12, #9: 12, #10: 7, #11: 4, #12: -1, #13: 4, #14: 6, #15: 2, #16: 8, #17: -1, #18: 5, #19: 9, #20: 9, #21: 1, #22: 7, #23: -1, #24: 9, #25: 9, #26: -1, 
embargoTokens: #0: 0, #1: 0, #2: 0, #3: 0, #4: 0, #5: 0, #6: 0, #7: 0, #8: 0, #9: 0, #10: 0, #11: 0, #12: 0, #13: 0, #14: 0, #15: 0, #16: 0, #17: 0, #18: 0, #19: 0, #20: 0, #21: 0, #22: 0, #23: 0, #24: 0, #25: 0, #26: 0, 
outpostPlayed = 0, outpostTurn = 387389207, whoseTurn = 0, phase = 0, numActions = 1, coins = 4, numBuys = 1
playedCardCount = 0, playedCards[x]: 
---------------------
PLAYER #0, HANDCOUNT=7, hand[player][hand]: [0][hand:0] = 5, [0][hand:1] = 12, [0][hand:2] = 24, [0][hand:3] = 15, [0][hand:4] = 1, [0][hand:5] = 5, [0][hand:6] = 4, 
PLAYER #0, DECKCOUNT=48, deck[player][hand]: [0][deck:0] = 20, [0][deck:1] = 8, [0][deck:2] = 9, [0][deck:3] = 7, [0][deck:4] = 22, [0][deck:5] = 1, [0][deck:6] = 26, [0][deck:7] = 0, [0][deck:8] = 5, [0][deck:9] = 15, [0][deck:10] = 7, [0][deck:11] = 19, [0][deck:12] = 26, [0][deck:13] = 25, [0][deck:14] = 3, [0][deck:15] = 3, [0][deck:16] = 14, [0][deck:17] = 10, [0][deck:18] = 12, [0][deck:19] = 7, [0][deck:20] = 14, [0][deck:21] = 19, [0][deck:22] = 18, [0][deck:23] = 26, [0][deck:24] = 18, [0][deck:25] = 23, [0][deck:26] = 10, [0][deck:27] = 14, [0][deck:28] = 24, [0][deck:29] = 17, [0][deck:30] = 4, [0][deck:31] = 7, [0][deck:32] = 18, [0][deck:33] = 14, [0][deck:34] = 13, [0][deck:35] = 24, [0][deck:36] = 18, [0][deck:37] = 2, [0][deck:38] = 19, [0][deck:39] = 24, [0][deck:40] = 1, [0][deck:41] = 11, [0][deck:42] = 14, [0][deck:43] = 3, [0][deck:44] = 5, [0][deck:45] = 21, [0][deck:46] = 1, [0][deck:47] = 14, 
PLAYER #0, DISCARDCOUNT=406, discard[player][hand]: [0][discard: 0] = 20, [0][discard: 1] = 23, [0][discard: 2] = 13, [0][discard: 3] = 15, [0][discard: 4] = 1, [0][discard: 5] = 14, [0][discard: 6] = 10, [0][discard: 7] = 6, [0][discard: 8] = 21, [0][discard: 9] = 3, [0][discard: 10] = 17, [0][discard: 11] = 14, [0][discard: 12] = 11, [0][discard: 13] = 13, [0][discard: 14] = 21, [0][discard: 15] = 21, [0][discard: 16] = 0, [0][discard: 17] = 19, [0][discard: 18] = 14, [0][discard: 19] = 0, [0][discard: 20] = 12, [0][discard: 21] = 17, [0][discard: 22] = 9, [0][discard: 23] = 14, [0][discard: 24] = 8, [0][discard: 25] = 10, [0][discard: 26] = 10, [0][discard: 27] = 21, [0][discard: 28] = 11, [0][discard: 29] = 25, [0][discard: 30] = 22, [0][discard: 31] = 20, [0][discard: 32] = 7, [0][discard: 33] = 26, [0][discard: 34] = 22, [0][discard: 35] = 12, [0][discard: 36] = 11, [0][discard: 37] = 22, [0][discard: 38] = 10, [0][discard: 39] = 0, [0][discard: 40] = 25, [0][discard: 41] = 8, [0][discard: 42] = 25, [0][discard: 43] = 1, [0][discard: 44] = 6, [0][discard: 45] = 23, [0][discard: 46] = 3, [0][discard: 47] = 9, [0][discard: 48] = 16, [0][discard: 49] = 2, [0][discard: 50] = 11, [0][discard: 51] = 9, [0][discard: 52] = 1, [0][discard: 53] = 1, [0][discard: 54] = 21, [0][discard: 55] = 14, [0][discard: 56] = 11, [0][discard: 57] = 5, [0][discard: 58] = 23, [0][discard: 59] = 20, [0][discard: 60] = 0, [0][discard: 61] = 12, [0][discard: 62] = 16, [0][discard: 63] = 11, [0][discard: 64] = 11, [0][discard: 65] = 23, [0][discard: 66] = 12, [0][discard: 67] = 7, [0][discard: 68] = 0, [0][discard: 69] = 24, [0][discard: 70] = 9, [0][discard: 71] = 13, [0][discard: 72] = 21, [0][discard: 73] = 2, [0][discard: 74] = 17, [0][discard: 75] = 22, [0][discard: 76] = 11, [0][discard: 77] = 4, [0][discard: 78] = 12, [0][discard: 79] = 6, [0][discard: 80] = 0, [0][discard: 81] = 19, [0][discard: 82] = 22, [0][discard: 83] = 25, [0][discard: 84] = 3, [0][discard: 85] = 7, [0][discard: 86] = 7, [0][discard: 87] = 25, [0][discard: 88] = 3, [0][discard: 89] = 12, [0][discard: 90] = 18, [0][discard: 91] = 13, [0][discard: 92] = 26, [0][discard: 93] = 22, [0][discard: 94] = 16, [0][discard: 95] = 2, [0][discard: 96] = 3, [0][discard: 97] = 5, [0][discard: 98] = 4, [0][discard: 99] = 8, [0][discard: 100] = 12, [0][discard: 101] = 5, [0][discard: 102] = 19, [0][discard: 103] = 5, [0][discard: 104] = 6, [0][discard: 105] = 16, [0][discard: 106] = 17, [0][discard: 107] = 21, [0][discard: 108] = 23, [0][discard: 109] = 2, [0][discard: 110] = 0, [0][discard: 111] = 2, [0][discard: 112] = 20, [0][discard: 113] = 15, [0][discard: 114] = 14, [0][discard: 115] = 13, [0][discard: 116] = 21, [0][discard: 117] = 0, [0][discard: 118] = 13, [0][discard: 119] = 26, [0][discard: 120] = 16, [0][discard: 121] = 8, [0][discard: 122] = 18, [0][discard: 123] = 9, [0][discard: 124] = 23, [0][discard: 125] = 7, [0][discard: 126] = 22, [0][discard: 127] = 21, [0][discard: 128] = 26, [0][discard: 129] = 1, [0][discard: 130] = 16, [0][discard: 131] = 11, [0][discard: 132] = 0, [0][discard: 133] = 18, [0][discard: 134] = 26, [0][discard: 135] = 11, [0][discard: 136] = 21, [0][discard: 137] = 24, [0][discard: 138] = 8, [0][discard: 139] = 14, [0][discard: 140] = 2, [0][discard: 141] = 3, [0][discard: 142] = 7, [0][discard: 143] = 5, [0][discard: 144] = 25, [0][discard: 145] = 6, [0][discard: 146] = 22, [0][discard: 147] = 5, [0][discard: 148] = 24, [0][discard: 149] = 19, [0][discard: 150] = 9, [0][discard: 151] = 5, [0][discard: 152] = 22, [0][discard: 153] = 10, [0][discard: 154] = 22, [0][discard: 155] = 13, [0][discard: 156] = 12, [0][discard: 157] = 18, [0][discard: 158] = 13, [0][discard: 159] = 0, [0][discard: 160] = 26, [0][discard: 161] = 6, [0][discard: 162] = 0, [0][discard: 163] = 21, [0][discard: 164] = 21, [0][discard: 165] = 11, [0][discard: 166] = 18, [0][discard: 167] = 19, [0][discard: 168] = 12, [0][discard: 169] = 16, [0][discard: 170] = 6, [0][discard: 171] = 6, [0][discard: 172] = 19, [0][discard: 173] = 1, [0][discard: 174] = 14, [0][discard: 175] = 10, [0][discard: 176] = 10, [0][discard: 177] = 10, [0][discard: 178] = 6, [0][discard: 179] = 7, [0][discard: 180] = 9, [0][discard: 181] = 3, [0][discard: 182] = 11, [0][discard: 183] = 16, [0][discard: 184] = 3, [0][discard: 185] = 10, [0][discard: 186] = 20, [0][discard: 187] = 2, [0][discard: 188] = 18, [0][discard: 189] = 9, [0][discard: 190] = 7, [0][discard: 191] = 7, [0][discard: 192] = 22, [0][discard: 193] = 24, [0][discard: 194] = 12, [0][discard: 195] = 11, [0][discard: 196] = 18, [0][discard: 197] = 24, [0][discard: 198] = 5, [0][discard: 199] = 2, [0][discard: 200] = 15, [0][discard: 201] = 12, [0][discard: 202] = 4, [0][discard: 203] = 23, [0][discard: 204] = 8, [0][discard: 205] = 13, [0][discard: 206] = 1, [0][discard: 207] = 26, [0][discard: 208] = 16, [0][discard: 209] = 9, [0][discard: 210] = 25, [0][discard: 211] = 21, [0][discard: 212] = 13, [0][discard: 213] = 7, [0][discard: 214] = 8, [0][discard: 215] = 13, [0][discard: 216] = 0, [0][discard: 217] = 10, [0][discard: 218] = 21, [0][discard: 219] = 24, [0][discard: 220] = 26, [0][discard: 221] = 24, [0][discard: 222] = 17, [0][discard: 223] = 10, [0][discard: 224] = 19, [0][discard: 225] = 13, [0][discard: 226] = 16, [0][discard: 227] = 26, [0][discard: 228] = 24, [0][discard: 229] = 10, [0][discard: 230] = 3, [0][discard: 231] = 9, [0][discard: 232] = 2, [0][discard: 233] = 25, [0][discard: 234] = 22, [0][discard: 235] = 4, [0][discard: 236] = 12, [0][discard: 237] = 24, [0][discard: 238] = 7, [0][discard: 239] = 14, [0][discard: 240] = 0, [0][discard: 241] = 22, [0][discard: 242] = 22, [0][discard: 243] = 16, [0][discard: 244] = 13, [0][discard: 245] = 3, [0][discard: 246] = 26, [0][discard: 247] = 8, [0][discard: 248] = 1, [0][discard: 249] = 4, [0][discard: 250] = 12, [0][discard: 251] = 7, [0][discard: 252] = 9, [0][discard: 253] = 4, [0][discard: 254] = 0, [0][discard: 255] = 15, [0][discard: 256] = 26, [0][discard: 257] = 16, [0][discard: 258] = 1, [0][discard: 259] = 22, [0][discard: 260] = 26, [0][discard: 261] = 11, [0][discard: 262] = 14, [0][discard: 263] = 26, [0][discard: 264] = 18, [0][discard: 265] = 1, [0][discard: 266] = 5, [0][discard: 267] = 21, [0][discard: 268] = 22, [0][discard: 269] = 11, [0][discard: 270] = 22, [0][discard: 271] = 16, [0][discard: 272] = 18, [0][discard: 273] = 26, [0][discard: 274] = 11, [0][discard: 275] = 24, [0][discard: 276] = 8, [0][discard: 277] = 0, [0][discard: 278] = 15, [0][discard: 279] = 4, [0][discard: 280] = 18, [0][discard: 281] = 3, [0][discard: 282] = 1, [0][discard: 283] = 22, [0][discard: 284] = 25, [0][discard: 285] = 7, [0][discard: 286] = 7, [0][discard: 287] = 16, [0][discard: 288] = 23, [0][discard: 289] = 9, [0][discard: 290] = 10, [0][discard: 291] = 12, [0][discard: 292] = 24, [0][discard: 293] = 25, [0][discard: 294] = 15, [0][discard: 295] = 5, [0][discard: 296] = 26, [0][discard: 297] = 3, [0][discard: 298] = 5, [0][discard: 299] = 24, [0][discard: 300] = 16, [0][discard: 301] = 16, [0][discard: 302] = 11, [0][discard: 303] = 13, [0][discard: 304] = 6, [0][discard: 305] = 17, [0][discard: 306] = 12, [0][discard: 307] = 26, [0][discard: 308] = 24, [0][discard: 309] = 21, [0][discard: 310] = 19, [0][discard: 311] = 24, [0][discard: 312] = 1, [0][discard: 313] = 26, [0][discard: 314] = 21, [0][discard: 315] = 11, [0][discard: 316] = 22, [0][discard: 317] = 20, [0][discard: 318] = 1, [0][discard: 319] = 9, [0][discard: 320] = 16, [0][discard: 321] = 2, [0][discard: 322] = 1, [0][discard: 323] = 24, [0][discard: 324] = 24, [0][discard: 325] = 6, [0][discard: 326] = 6, [0][discard: 327] = 9, [0][discard: 328] = 5, [0][discard: 329] = 16, [0][discard: 330] = 19, [0][discard: 331] = 0, [0][discard: 332] = 22, [0][discard: 333] = 13, [0][discard: 334] = 12, [0][discard: 335] = 4, [0][discard: 336] = 13, [0][discard: 337] = 3, [0][discard: 338] = 22, [0][discard: 339] = 9, [0][discard: 340] = 22, [0][discard: 341] = 13, [0][discard: 342] = 3, [0][discard: 343] = 10, [0][discard: 344] = 10, [0][discard: 345] = 20, [0][discard: 346] = 26, [0][discard: 347] = 19, [0][discard: 348] = 10, [0][discard: 349] = 17, [0][discard: 350] = 8, [0][discard: 351] = 1, [0][discard: 352] = 2, [0][discard: 353] = 0, [0][discard: 354] = 14, [0][discard: 355] = 21, [0][discard: 356] = 15, [0][discard: 357] = 14, [0][discard: 358] = 10, [0][discard: 359] = 18, [0][discard: 360] = 2, [0][discard: 361] = 17, [0][discard: 362] = 15, [0][discard: 363] = 2, [0][discard: 364] = 1, [0][discard: 365] = 19, [0][discard: 366] = 7, [0][discard: 367] = 21, [0][discard: 368] = 21, [0][discard: 369] = 19, [0][discard: 370] = 21, [0][discard: 371] = 1, [0][discard: 372] = 21, [0][discard: 373] = 23, [0][discard: 374] = 2, [0][discard: 375] = 20, [0][discard: 376] = 8, [0][discard: 377] = 15, [0][discard: 378] = 18, [0][discard: 379] = 3, [0][discard: 380] = 16, [0][discard: 381] = 6, [0][discard: 382] = 22, [0][discard: 383] = 12, [0][discard: 384] = 15, [0][discard: 385] = 10, [0][discard: 386] = 14, [0][discard: 387] = 6, [0][discard: 388] = 11, [0][discard: 389] = 25, [0][discard: 390] = 25, [0][discard: 391] = 25, [0][discard: 392] = 26, [0][discard: 393] = 8, [0][discard: 394] = 3, [0][discard: 395] = 14, [0][discard: 396] = 17, [0][discard: 397] = 20, [0][discard: 398] = 17, [0][discard: 399] = 26, [0][discard: 400] = 25, [0][discard: 401] = 21, [0][discard: 402] = 17, [0][discard: 403] = 1, [0][discard: 404] = 20, [0][discard: 405] = 7, 
---------------------
PLAYER #1, HANDCOUNT=0, hand[player][hand]: 
PLAYER #1, DECKCOUNT=10, deck[player][hand]: [1][deck:0] = 4, [1][deck:1] = 1, [1][deck:2] = 4, [1][deck:3] = 1, [1][deck:4] = 4, [1][deck:5] = 4, [1][deck:6] = 4, [1][deck:7] = 4, [1][deck:8] = 4, [1][deck:9] = 1, 
PLAYER #1, DISCARDCOUNT=0, discard[player][hand]: 
---------------------
PLAYER #2, HANDCOUNT=0, hand[player][hand]: 
PLAYER #2, DECKCOUNT=10, deck[player][hand]: [2][deck:0] = 4, [2][deck:1] = 4, [2][deck:2] = 4, [2][deck:3] = 1, [2][deck:4] = 1, [2][deck:5] = 1, [2][deck:6] = 4, [2][deck:7] = 4, [2][deck:8] = 4, [2][deck:9] = 4, 
PLAYER #2, DISCARDCOUNT=0, discard[player][hand]: 
--END PRINTING GAME STATE -------------------

adventurer test - iteration 799 -> FAILED tests
*************** ITERATION # 800 ***************  
NOTE Player 1: found 92 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 198, supplyTotalPre: 196
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 198
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 800 -> FAILED tests
*************** ITERATION # 801 ***************  
NOTE Player 2: found 82 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 70, supplyTotalPre: 68
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 70
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 801 -> FAILED tests
*************** ITERATION # 802 ***************  
NOTE Player 1: found 30 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 58, supplyTotalPre: 56
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 58
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 802 -> FAILED tests
*************** ITERATION # 803 ***************  
NOTE Player 0: found 30 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 300, supplyTotalPre: 298
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 300
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 803 -> FAILED tests
*************** ITERATION # 804 ***************  
NOTE Player 0: found 24 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 375, supplyTotalPre: 373
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 375
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 804 -> FAILED tests
*************** ITERATION # 805 ***************  
NOTE Player 0: found 52 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 113, supplyTotalPre: 111
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 113
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 805 -> FAILED tests
*************** ITERATION # 806 ***************  
NOTE Player 2: found 91 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 425, supplyTotalPre: 423
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 425
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 806 -> FAILED tests
*************** ITERATION # 807 ***************  
NOTE Player 1: found 48 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 378, supplyTotalPre: 376
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 378
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 807 -> FAILED tests
*************** ITERATION # 808 ***************  
NOTE Player 0: found 38 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 157, supplyTotalPre: 155
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 157
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 808 -> FAILED tests
*************** ITERATION # 809 ***************  
NOTE Player 1: found 78 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 475, supplyTotalPre: 473
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 475
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 809 -> FAILED tests
*************** ITERATION # 810 ***************  
NOTE Player 2: found 44 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 154, supplyTotalPre: 152
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 154
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 810 -> FAILED tests
*************** ITERATION # 811 ***************  
NOTE Player 0: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 441, supplyTotalPre: 439
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 441
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 811 -> FAILED tests
*************** ITERATION # 812 ***************  
NOTE Player 2: found 81 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 69, supplyTotalPre: 67
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 69
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 812 -> FAILED tests
*************** ITERATION # 813 ***************  
NOTE Player 0: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 76, supplyTotalPre: 74
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 76
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 813 -> FAILED tests
*************** ITERATION # 814 ***************  
NOTE Player 2: found 35 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 50, supplyTotalPre: 48
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 50
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 814 -> FAILED tests
*************** ITERATION # 815 ***************  
NOTE Player 1: found 67 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 218, supplyTotalPre: 216
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 218
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 815 -> FAILED tests
*************** ITERATION # 816 ***************  
NOTE Player 1: found 81 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 256, supplyTotalPre: 254
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 256
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 816 -> FAILED tests
*************** ITERATION # 817 ***************  
NOTE Player 1: found 82 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 232, supplyTotalPre: 230
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 232
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 817 -> FAILED tests
*************** ITERATION # 818 ***************  
NOTE Player 2: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 242, supplyTotalPre: 240
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 242
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 818 -> FAILED tests
*************** ITERATION # 819 ***************  
NOTE Player 0: found 75 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 260, supplyTotalPre: 258
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 260
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 819 -> FAILED tests
*************** ITERATION # 820 ***************  
NOTE Player 0: found 36 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 92, supplyTotalPre: 90
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 92
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 820 -> FAILED tests
*************** ITERATION # 821 ***************  
NOTE Player 1: found 94 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 129, supplyTotalPre: 127
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 129
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 821 -> FAILED tests
*************** ITERATION # 822 ***************  
NOTE Player 0: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 383, supplyTotalPre: 381
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 383
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 822 -> FAILED tests
*************** ITERATION # 823 ***************  
NOTE Player 1: found 71 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 455, supplyTotalPre: 453
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 455
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 823 -> FAILED tests
*************** ITERATION # 824 ***************  
NOTE Player 2: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 326, supplyTotalPre: 324
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 326
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 824 -> FAILED tests
*************** ITERATION # 825 ***************  
NOTE Player 1: found 52 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 115, supplyTotalPre: 113
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 115
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 825 -> FAILED tests
*************** ITERATION # 826 ***************  
NOTE Player 0: found 38 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 408, supplyTotalPre: 406
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 408
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 826 -> FAILED tests
*************** ITERATION # 827 ***************  
NOTE Player 2: did NOT find treasure in player's discard
NOTE Player 2: found 32 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 149, supplyTotalPre: 147
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 149
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 827 -> FAILED tests
*************** ITERATION # 828 ***************  
NOTE Player 1: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 205, supplyTotalPre: 203
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 205
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 828 -> FAILED tests
*************** ITERATION # 829 ***************  
NOTE Player 0: found 48 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 289, supplyTotalPre: 287
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 289
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 829 -> FAILED tests
*************** ITERATION # 830 ***************  
NOTE Player 2: found 36 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 186, supplyTotalPre: 184
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 186
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 830 -> FAILED tests
*************** ITERATION # 831 ***************  
NOTE Player 0: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 450, supplyTotalPre: 448
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 450
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 831 -> FAILED tests
*************** ITERATION # 832 ***************  
NOTE Player 0: did NOT find treasure in player's discard
NOTE Player 0: found 29 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 45, supplyTotalPre: 43
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 45
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 832 -> FAILED tests
*************** ITERATION # 833 ***************  
NOTE Player 1: found 79 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 233, supplyTotalPre: 231
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 233
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 833 -> FAILED tests
*************** ITERATION # 834 ***************  
NOTE Player 2: did NOT find treasure in player's discard
NOTE Player 2: found 9 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 233, supplyTotalPre: 231
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 233
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 834 -> FAILED tests
*************** ITERATION # 835 ***************  
NOTE Player 0: found 85 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 90, supplyTotalPre: 88
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 90
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 835 -> FAILED tests
*************** ITERATION # 836 ***************  
NOTE Player 1: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 354, supplyTotalPre: 352
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 354
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 836 -> FAILED tests
*************** ITERATION # 837 ***************  
NOTE Player 2: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 248, supplyTotalPre: 246
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 248
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 837 -> FAILED tests
*************** ITERATION # 838 ***************  
NOTE Player 1: found 63 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 363, supplyTotalPre: 361
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 363
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 838 -> FAILED tests
*************** ITERATION # 839 ***************  
NOTE Player 0: found 60 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 443, supplyTotalPre: 441
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 443
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 839 -> FAILED tests
*************** ITERATION # 840 ***************  
NOTE Player 2: did NOT find treasure in player's discard
NOTE Player 2: found 37 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 81, supplyTotalPre: 79
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 81
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 840 -> FAILED tests
*************** ITERATION # 841 ***************  
NOTE Player 2: found 79 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 407, supplyTotalPre: 405
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 407
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 841 -> FAILED tests
*************** ITERATION # 842 ***************  
NOTE Player 2: found 43 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 412, supplyTotalPre: 410
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 412
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 842 -> FAILED tests
*************** ITERATION # 843 ***************  
NOTE Player 0: found 63 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 113, supplyTotalPre: 111
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 113
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 843 -> FAILED tests
*************** ITERATION # 844 ***************  
NOTE Player 0: found 44 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 334, supplyTotalPre: 332
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 334
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 844 -> FAILED tests
*************** ITERATION # 845 ***************  
NOTE Player 2: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 321, supplyTotalPre: 319
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 321
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 845 -> FAILED tests
*************** ITERATION # 846 ***************  
NOTE Player 0: found 82 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 60, supplyTotalPre: 58
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 60
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 846 -> FAILED tests
*************** ITERATION # 847 ***************  
NOTE Player 0: found 62 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 115, supplyTotalPre: 113
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 115
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 847 -> FAILED tests
*************** ITERATION # 848 ***************  
NOTE Player 1: found 85 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 75, supplyTotalPre: 73
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 75
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 848 -> FAILED tests
*************** ITERATION # 849 ***************  
NOTE Player 0: found 30 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 153, supplyTotalPre: 151
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 153
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 849 -> FAILED tests
*************** ITERATION # 850 ***************  
NOTE Player 1: found 26 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 128, supplyTotalPre: 126
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 128
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 850 -> FAILED tests
*************** ITERATION # 851 ***************  
NOTE Player 1: found 57 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 494, supplyTotalPre: 492
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 494
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 851 -> FAILED tests
*************** ITERATION # 852 ***************  
NOTE Player 1: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 416, supplyTotalPre: 414
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 416
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 852 -> FAILED tests
*************** ITERATION # 853 ***************  
NOTE Player 0: found 83 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 203, supplyTotalPre: 201
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 203
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 853 -> FAILED tests
*************** ITERATION # 854 ***************  
NOTE Player 2: found 52 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 499, supplyTotalPre: 497
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 499
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 854 -> FAILED tests
*************** ITERATION # 855 ***************  
NOTE Player 2: found 63 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 41, supplyTotalPre: 39
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 41
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 855 -> FAILED tests
*************** ITERATION # 856 ***************  
NOTE Player 0: found 21 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 230, supplyTotalPre: 228
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 230
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 856 -> FAILED tests
*************** ITERATION # 857 ***************  
NOTE Player 0: found 10 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 502, supplyTotalPre: 500
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 502
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 857 -> FAILED tests
*************** ITERATION # 858 ***************  
NOTE Player 0: found 62 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 217, supplyTotalPre: 215
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 217
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 858 -> FAILED tests
*************** ITERATION # 859 ***************  
NOTE Player 0: found 72 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 185, supplyTotalPre: 183
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 185
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 859 -> FAILED tests
*************** ITERATION # 860 ***************  
NOTE Player 1: found 42 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 377, supplyTotalPre: 375
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 377
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 860 -> FAILED tests
*************** ITERATION # 861 ***************  
NOTE Player 1: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 74, supplyTotalPre: 72
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 74
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 861 -> FAILED tests
*************** ITERATION # 862 ***************  
NOTE Player 2: found 50 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 140, supplyTotalPre: 138
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 140
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 862 -> FAILED tests
*************** ITERATION # 863 ***************  
NOTE Player 1: did NOT find treasure in player's deck
NOTE Player 1: found 47 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 135, supplyTotalPre: 133
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 135
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 863 -> FAILED tests
*************** ITERATION # 864 ***************  
NOTE Player 1: found 75 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 178, supplyTotalPre: 176
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 178
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 864 -> FAILED tests
*************** ITERATION # 865 ***************  
NOTE Player 1: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 28, supplyTotalPre: 26
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 28
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 865 -> FAILED tests
*************** ITERATION # 866 ***************  
NOTE Player 1: found 35 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 358, supplyTotalPre: 356
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 358
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 866 -> FAILED tests
*************** ITERATION # 867 ***************  
NOTE Player 1: found 62 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 264, supplyTotalPre: 262
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 264
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 867 -> FAILED tests
*************** ITERATION # 868 ***************  
NOTE Player 2: found 38 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 320, supplyTotalPre: 318
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 320
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 868 -> FAILED tests
*************** ITERATION # 869 ***************  
NOTE Player 1: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 86, supplyTotalPre: 84
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 86
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 869 -> FAILED tests
*************** ITERATION # 870 ***************  
NOTE Player 1: found 79 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 258, supplyTotalPre: 256
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 258
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 870 -> FAILED tests
*************** ITERATION # 871 ***************  
NOTE Player 1: found 14 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 27, supplyTotalPre: 25
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 27
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 871 -> FAILED tests
*************** ITERATION # 872 ***************  
NOTE Player 1: found 80 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 172, supplyTotalPre: 170
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 172
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 872 -> FAILED tests
*************** ITERATION # 873 ***************  
NOTE Player 1: found 75 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 459, supplyTotalPre: 457
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 459
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 873 -> FAILED tests
*************** ITERATION # 874 ***************  
NOTE Player 1: found 75 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 436, supplyTotalPre: 434
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 436
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 874 -> FAILED tests
*************** ITERATION # 875 ***************  
NOTE Player 2: found 55 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 33, supplyTotalPre: 31
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 33
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 875 -> FAILED tests
*************** ITERATION # 876 ***************  
NOTE Player 1: found 78 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 75, supplyTotalPre: 73
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 75
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 876 -> FAILED tests
*************** ITERATION # 877 ***************  
NOTE Player 1: found 64 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 443, supplyTotalPre: 441
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 443
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 877 -> FAILED tests
*************** ITERATION # 878 ***************  
NOTE Player 2: found 88 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 358, supplyTotalPre: 356
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 358
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 878 -> FAILED tests
*************** ITERATION # 879 ***************  
NOTE Player 2: found 49 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 73, supplyTotalPre: 71
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 73
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 879 -> FAILED tests
*************** ITERATION # 880 ***************  
NOTE Player 1: found 48 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 155, supplyTotalPre: 153
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 155
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 880 -> FAILED tests
*************** ITERATION # 881 ***************  
NOTE Player 0: found 82 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 465, supplyTotalPre: 463
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 465
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 881 -> FAILED tests
*************** ITERATION # 882 ***************  
NOTE Player 0: found 64 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 290, supplyTotalPre: 288
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 290
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 882 -> FAILED tests
*************** ITERATION # 883 ***************  
NOTE Player 2: found 22 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 407, supplyTotalPre: 405
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 407
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 883 -> FAILED tests
*************** ITERATION # 884 ***************  
NOTE Player 1: found 31 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 410, supplyTotalPre: 408
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 410
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 884 -> FAILED tests
*************** ITERATION # 885 ***************  
NOTE Player 2: found 91 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 369, supplyTotalPre: 367
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 369
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 885 -> FAILED tests
*************** ITERATION # 886 ***************  
NOTE Player 1: found 56 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 373, supplyTotalPre: 371
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 373
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 886 -> FAILED tests
*************** ITERATION # 887 ***************  
NOTE Player 0: found 88 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 48, supplyTotalPre: 46
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 48
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 887 -> FAILED tests
*************** ITERATION # 888 ***************  
NOTE Player 2: found 16 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 40, supplyTotalPre: 38
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 40
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 888 -> FAILED tests
*************** ITERATION # 889 ***************  
NOTE Player 2: found 16 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 325, supplyTotalPre: 323
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 325
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 889 -> FAILED tests
*************** ITERATION # 890 ***************  
NOTE Player 0: did NOT find treasure in player's discard
NOTE Player 0: found 34 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 235, supplyTotalPre: 233
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 235
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 890 -> FAILED tests
*************** ITERATION # 891 ***************  
NOTE Player 2: found 63 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 174, supplyTotalPre: 172
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 174
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 891 -> FAILED tests
*************** ITERATION # 892 ***************  
NOTE Player 1: found 47 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 375, supplyTotalPre: 373
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 375
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 892 -> FAILED tests
*************** ITERATION # 893 ***************  
NOTE Player 0: found 113 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 321, supplyTotalPre: 319
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 321
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 893 -> FAILED tests
*************** ITERATION # 894 ***************  
NOTE Player 0: found 38 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 102, supplyTotalPre: 100
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 102
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 894 -> FAILED tests
*************** ITERATION # 895 ***************  
NOTE Player 2: found 88 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 470, supplyTotalPre: 468
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 470
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 895 -> FAILED tests
*************** ITERATION # 896 ***************  
NOTE Player 0: found 17 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 340, supplyTotalPre: 338
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 340
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 896 -> FAILED tests
*************** ITERATION # 897 ***************  
NOTE Player 2: found 80 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 213, supplyTotalPre: 211
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 213
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 897 -> FAILED tests
*************** ITERATION # 898 ***************  
NOTE Player 0: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 468, supplyTotalPre: 466
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 468
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 898 -> FAILED tests
*************** ITERATION # 899 ***************  
NOTE Player 0: found 72 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 395, supplyTotalPre: 393
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 395
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 899 -> FAILED tests
*************** ITERATION # 900 ***************  
NOTE Player 2: found 30 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 387, supplyTotalPre: 385
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 387
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 900 -> FAILED tests
*************** ITERATION # 901 ***************  
NOTE Player 0: found 56 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 301, supplyTotalPre: 299
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 301
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 901 -> FAILED tests
*************** ITERATION # 902 ***************  
NOTE Player 2: found 57 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 180, supplyTotalPre: 178
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 180
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 902 -> FAILED tests
*************** ITERATION # 903 ***************  
NOTE Player 0: found 49 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 435, supplyTotalPre: 433
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 435
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 903 -> FAILED tests
*************** ITERATION # 904 ***************  
NOTE Player 0: found 102 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 253, supplyTotalPre: 251
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 253
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 904 -> FAILED tests
*************** ITERATION # 905 ***************  
NOTE Player 2: found 71 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 459, supplyTotalPre: 457
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 459
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 905 -> FAILED tests
*************** ITERATION # 906 ***************  
NOTE Player 2: found 57 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 480, supplyTotalPre: 478
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 480
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 906 -> FAILED tests
*************** ITERATION # 907 ***************  
NOTE Player 2: found 72 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 18, supplyTotalPre: 16
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 18
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 907 -> FAILED tests
*************** ITERATION # 908 ***************  
NOTE Player 0: found 59 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 386, supplyTotalPre: 384
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 386
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 908 -> FAILED tests
*************** ITERATION # 909 ***************  
NOTE Player 0: found 26 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 48, supplyTotalPre: 46
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 48
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 909 -> FAILED tests
*************** ITERATION # 910 ***************  
NOTE Player 2: found 67 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 3, supplyTotalPre: 1
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 3
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 910 -> FAILED tests
*************** ITERATION # 911 ***************  
NOTE Player 1: found 18 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 335, supplyTotalPre: 333
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 335
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 911 -> FAILED tests
*************** ITERATION # 912 ***************  
NOTE Player 1: found 65 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 254, supplyTotalPre: 252
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 254
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 912 -> FAILED tests
*************** ITERATION # 913 ***************  
NOTE Player 0: found 31 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 500, supplyTotalPre: 498
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 500
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 913 -> FAILED tests
*************** ITERATION # 914 ***************  
NOTE Player 2: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 71, supplyTotalPre: 69
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 71
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 914 -> FAILED tests
*************** ITERATION # 915 ***************  
NOTE Player 1: found 69 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 279, supplyTotalPre: 277
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 279
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 915 -> FAILED tests
*************** ITERATION # 916 ***************  
NOTE Player 0: found 25 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 308, supplyTotalPre: 306
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 308
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 916 -> FAILED tests
*************** ITERATION # 917 ***************  
NOTE Player 1: found 60 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 198, supplyTotalPre: 196
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 198
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 917 -> FAILED tests
*************** ITERATION # 918 ***************  
NOTE Player 0: found 71 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 17, supplyTotalPre: 15
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 17
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 918 -> FAILED tests
*************** ITERATION # 919 ***************  
NOTE Player 1: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 447, supplyTotalPre: 445
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 447
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 919 -> FAILED tests
*************** ITERATION # 920 ***************  
NOTE Player 1: found 64 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 72, supplyTotalPre: 70
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 72
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 920 -> FAILED tests
*************** ITERATION # 921 ***************  
NOTE Player 0: found 78 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 312, supplyTotalPre: 310
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 312
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 921 -> FAILED tests
*************** ITERATION # 922 ***************  
NOTE Player 0: found 83 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 82, supplyTotalPre: 80
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 82
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 922 -> FAILED tests
*************** ITERATION # 923 ***************  
NOTE Player 2: found 24 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 181, supplyTotalPre: 179
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 181
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 923 -> FAILED tests
*************** ITERATION # 924 ***************  
NOTE Player 1: found 97 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 3, supplyTotalPre: 1
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 3
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 924 -> FAILED tests
*************** ITERATION # 925 ***************  
NOTE Player 2: found 45 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 39, supplyTotalPre: 37
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 39
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 925 -> FAILED tests
*************** ITERATION # 926 ***************  
NOTE Player 1: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 165, supplyTotalPre: 163
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 165
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 926 -> FAILED tests
*************** ITERATION # 927 ***************  
NOTE Player 2: found 104 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 16, supplyTotalPre: 14
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 16
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 927 -> FAILED tests
*************** ITERATION # 928 ***************  
NOTE Player 1: found 68 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 373, supplyTotalPre: 371
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 373
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 928 -> FAILED tests
*************** ITERATION # 929 ***************  
NOTE Player 1: found 61 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 156, supplyTotalPre: 154
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 156
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 929 -> FAILED tests
*************** ITERATION # 930 ***************  
NOTE Player 1: found 33 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 381, supplyTotalPre: 379
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 381
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 930 -> FAILED tests
*************** ITERATION # 931 ***************  
NOTE Player 2: found 43 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 491, supplyTotalPre: 489
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 491
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 931 -> FAILED tests
*************** ITERATION # 932 ***************  
NOTE Player 2: found 17 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 494, supplyTotalPre: 492
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 494
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 932 -> FAILED tests
*************** ITERATION # 933 ***************  
NOTE Player 1: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 283, supplyTotalPre: 281
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 283
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 933 -> FAILED tests
*************** ITERATION # 934 ***************  
NOTE Player 0: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 328, supplyTotalPre: 326
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 328
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 934 -> FAILED tests
*************** ITERATION # 935 ***************  
NOTE Player 1: found 52 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 442, supplyTotalPre: 440
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 442
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 935 -> FAILED tests
*************** ITERATION # 936 ***************  
NOTE Player 2: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 332, supplyTotalPre: 330
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 332
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 936 -> FAILED tests
*************** ITERATION # 937 ***************  
NOTE Player 2: found 73 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 287, supplyTotalPre: 285
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 287
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 937 -> FAILED tests
*************** ITERATION # 938 ***************  
NOTE Player 0: found 83 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 268, supplyTotalPre: 266
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 268
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 938 -> FAILED tests
*************** ITERATION # 939 ***************  
NOTE Player 2: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 239, supplyTotalPre: 237
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 239
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 939 -> FAILED tests
*************** ITERATION # 940 ***************  
NOTE Player 0: found 60 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 210, supplyTotalPre: 208
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 210
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 940 -> FAILED tests
*************** ITERATION # 941 ***************  
NOTE Player 1: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 382, supplyTotalPre: 380
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 382
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 941 -> FAILED tests
*************** ITERATION # 942 ***************  
NOTE Player 2: found 62 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 172, supplyTotalPre: 170
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 172
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 942 -> FAILED tests
*************** ITERATION # 943 ***************  
NOTE Player 1: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 150, supplyTotalPre: 148
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 150
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 943 -> FAILED tests
*************** ITERATION # 944 ***************  
NOTE Player 0: found 63 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 133, supplyTotalPre: 131
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 133
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 944 -> FAILED tests
*************** ITERATION # 945 ***************  
NOTE Player 2: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 108, supplyTotalPre: 106
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 108
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 945 -> FAILED tests
*************** ITERATION # 946 ***************  
NOTE Player 0: found 81 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 212, supplyTotalPre: 210
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 212
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 946 -> FAILED tests
*************** ITERATION # 947 ***************  
NOTE Player 0: found 98 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 356, supplyTotalPre: 354
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 356
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 947 -> FAILED tests
*************** ITERATION # 948 ***************  
NOTE Player 0: found 87 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 412, supplyTotalPre: 410
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 412
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 948 -> FAILED tests
*************** ITERATION # 949 ***************  
NOTE Player 1: found 58 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 154, supplyTotalPre: 152
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 154
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 949 -> FAILED tests
*************** ITERATION # 950 ***************  
NOTE Player 1: found 42 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 401, supplyTotalPre: 399
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 401
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 950 -> FAILED tests
*************** ITERATION # 951 ***************  
NOTE Player 1: found 80 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 126, supplyTotalPre: 124
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 126
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 951 -> FAILED tests
*************** ITERATION # 952 ***************  
NOTE Player 0: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 49, supplyTotalPre: 47
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 49
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 952 -> FAILED tests
*************** ITERATION # 953 ***************  
NOTE Player 1: found 44 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 41, supplyTotalPre: 39
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 41
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 953 -> FAILED tests
*************** ITERATION # 954 ***************  
NOTE Player 0: found 75 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 441, supplyTotalPre: 439
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 441
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 954 -> FAILED tests
*************** ITERATION # 955 ***************  
NOTE Player 1: found 127 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 280, supplyTotalPre: 278
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 280
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 955 -> FAILED tests
*************** ITERATION # 956 ***************  
NOTE Player 0: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 162, supplyTotalPre: 160
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 162
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 956 -> FAILED tests
*************** ITERATION # 957 ***************  
NOTE Player 1: found 62 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 347, supplyTotalPre: 345
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 347
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 957 -> FAILED tests
*************** ITERATION # 958 ***************  
NOTE Player 0: found 31 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 34, supplyTotalPre: 32
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 34
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 958 -> FAILED tests
*************** ITERATION # 959 ***************  
NOTE Player 2: found 63 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 403, supplyTotalPre: 401
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 403
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 959 -> FAILED tests
*************** ITERATION # 960 ***************  
NOTE Player 1: found 24 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 227, supplyTotalPre: 225
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 227
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 960 -> FAILED tests
*************** ITERATION # 961 ***************  
NOTE Player 1: found 66 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 200, supplyTotalPre: 198
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 200
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 961 -> FAILED tests
*************** ITERATION # 962 ***************  
NOTE Player 2: found 68 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 140, supplyTotalPre: 138
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 140
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 962 -> FAILED tests
*************** ITERATION # 963 ***************  
NOTE Player 1: found 27 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 280, supplyTotalPre: 278
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 280
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 963 -> FAILED tests
*************** ITERATION # 964 ***************  
NOTE Player 1: found 86 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 445, supplyTotalPre: 443
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 445
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 964 -> FAILED tests
*************** ITERATION # 965 ***************  
NOTE Player 2: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 411, supplyTotalPre: 409
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 411
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 965 -> FAILED tests
*************** ITERATION # 966 ***************  
NOTE Player 2: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 233, supplyTotalPre: 231
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 233
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 966 -> FAILED tests
*************** ITERATION # 967 ***************  
NOTE Player 0: found 78 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 253, supplyTotalPre: 251
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 253
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 967 -> FAILED tests
*************** ITERATION # 968 ***************  
NOTE Player 0: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 488, supplyTotalPre: 486
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 488
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 968 -> FAILED tests
*************** ITERATION # 969 ***************  
NOTE Player 0: found 23 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 48, supplyTotalPre: 46
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 48
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 969 -> FAILED tests
*************** ITERATION # 970 ***************  
NOTE Player 1: found 24 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 233, supplyTotalPre: 231
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 233
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 970 -> FAILED tests
*************** ITERATION # 971 ***************  
NOTE Player 0: found 25 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 219, supplyTotalPre: 217
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 219
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 971 -> FAILED tests
*************** ITERATION # 972 ***************  
NOTE Player 2: found 48 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 81, supplyTotalPre: 79
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 81
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 972 -> FAILED tests
*************** ITERATION # 973 ***************  
NOTE Player 0: found 18 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 393, supplyTotalPre: 391
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 393
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 973 -> FAILED tests
*************** ITERATION # 974 ***************  
NOTE Player 0: found 79 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 484, supplyTotalPre: 482
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 484
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 974 -> FAILED tests
*************** ITERATION # 975 ***************  
NOTE Player 2: found 53 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 187, supplyTotalPre: 185
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 187
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 975 -> FAILED tests
*************** ITERATION # 976 ***************  
NOTE Player 2: found 23 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 456, supplyTotalPre: 454
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 456
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 976 -> FAILED tests
*************** ITERATION # 977 ***************  
NOTE Player 0: found 59 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 357, supplyTotalPre: 355
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 357
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 977 -> FAILED tests
*************** ITERATION # 978 ***************  
NOTE Player 1: found 57 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 446, supplyTotalPre: 444
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 446
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 978 -> FAILED tests
*************** ITERATION # 979 ***************  
NOTE Player 0: found 89 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 491, supplyTotalPre: 489
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 491
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 979 -> FAILED tests
*************** ITERATION # 980 ***************  
NOTE Player 1: found 26 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 188, supplyTotalPre: 186
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 188
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 980 -> FAILED tests
*************** ITERATION # 981 ***************  
NOTE Player 2: found 27 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 35, supplyTotalPre: 33
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 35
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 981 -> FAILED tests
*************** ITERATION # 982 ***************  
NOTE Player 1: found 88 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 345, supplyTotalPre: 343
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 345
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 982 -> FAILED tests
*************** ITERATION # 983 ***************  
NOTE Player 1: found 41 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 307, supplyTotalPre: 305
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 307
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 983 -> FAILED tests
*************** ITERATION # 984 ***************  
NOTE Player 2: found 18 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 406, supplyTotalPre: 404
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 406
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 984 -> FAILED tests
*************** ITERATION # 985 ***************  
NOTE Player 0: found 74 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 286, supplyTotalPre: 284
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 286
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 985 -> FAILED tests
*************** ITERATION # 986 ***************  
NOTE Player 2: found 39 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 362, supplyTotalPre: 360
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 362
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 986 -> FAILED tests
*************** ITERATION # 987 ***************  
NOTE Player 0: found 44 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 249, supplyTotalPre: 247
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 249
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 987 -> FAILED tests
*************** ITERATION # 988 ***************  
NOTE Player 0: found 46 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 356, supplyTotalPre: 354
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 356
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 988 -> FAILED tests
*************** ITERATION # 989 ***************  
NOTE Player 1: found 70 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 426, supplyTotalPre: 424
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 426
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 989 -> FAILED tests
*************** ITERATION # 990 ***************  
NOTE Player 2: found 34 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 321, supplyTotalPre: 319
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 321
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 990 -> FAILED tests
*************** ITERATION # 991 ***************  
NOTE Player 0: found 91 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 49, supplyTotalPre: 47
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 49
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 991 -> FAILED tests
*************** ITERATION # 992 ***************  
NOTE Player 2: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 137, supplyTotalPre: 135
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 137
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 992 -> FAILED tests
*************** ITERATION # 993 ***************  
NOTE Player 0: found 81 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 64, supplyTotalPre: 62
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 64
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 993 -> FAILED tests
*************** ITERATION # 994 ***************  
NOTE Player 0: found 51 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #0, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #0, check if total supply count has not changed
Test3 (check hand count): FAILED: player #0, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 132, supplyTotalPre: 130
Test4 (check deck+discard count): branch-1 SUCCESS: player #0, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 132
Branch-1 SUCCESS: player #0, check if top 2 cards of hand are treasure cards
adventurer test - iteration 994 -> FAILED tests
*************** ITERATION # 995 ***************  
NOTE Player 1: found 38 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 419, supplyTotalPre: 417
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 419
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 995 -> FAILED tests
*************** ITERATION # 996 ***************  
NOTE Player 2: found 54 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 4 -> Test1 (check played card change): FAILED: player #2, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #2, check if total supply count has not changed
Test3 (check hand count): FAILED: player #2, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 260, supplyTotalPre: 258
Test4 (check deck+discard count): branch-1 SUCCESS: player #2, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 260
Branch-1 SUCCESS: player #2, check if top 2 cards of hand are treasure cards
adventurer test - iteration 996 -> FAILED tests
*************** ITERATION # 997 ***************  
NOTE Player 1: found 37 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 112, supplyTotalPre: 110
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 112
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 997 -> FAILED tests
*************** ITERATION # 998 ***************  
NOTE Player 1: found 22 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 4 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 104, supplyTotalPre: 102
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 104
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 998 -> FAILED tests
*************** ITERATION # 999 ***************  
NOTE Player 1: did NOT find treasure in player's deck
NOTE Player 1: found 10 treasure in player's DISCARD + DECK
drawntreasure = 1, cardDrawn = 5 -> drawntreasure = 2, cardDrawn = 5 -> Test1 (check played card change): FAILED: player #1, check if played card has increased by 1
Debug: G->playedCardCount: 0, Gpre.playedCardCount: 0
Test2 (check supply count): SUCCESS: player #1, check if total supply count has not changed
Test3 (check hand count): FAILED: player #1, check if hand count went up by 1 (minus Adventurer + 2 treasure cards)
Debug Data: G->handCount[p]: 59, supplyTotalPre: 57
Test4 (check deck+discard count): branch-1 SUCCESS: player #1, check deck+discard count decreased 2 (only 2 treasure moves to hand, rest are discard)
Test5 (check top cards of hand): topHand == 59
Branch-1 SUCCESS: player #1, check if top 2 cards of hand are treasure cards
adventurer test - iteration 999 -> FAILED tests
Function 'compare'
Lines executed:100.00% of 6
Branches executed:100.00% of 4
Taken at least once:100.00% of 4
No calls

Function 'newGame'
Lines executed:0.00% of 2
No branches
No calls

Function 'kingdomCards'
Lines executed:0.00% of 12
No branches
No calls

Function 'initializeGame'
Lines executed:84.62% of 78
Branches executed:100.00% of 46
Taken at least once:80.43% of 46
No calls

Function 'shuffle'
Lines executed:100.00% of 18
Branches executed:100.00% of 8
Taken at least once:100.00% of 8
No calls

Function 'playCard'
Lines executed:0.00% of 14
Branches executed:0.00% of 10
Taken at least once:0.00% of 10
No calls

Function 'buyCard'
Lines executed:0.00% of 13
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
No calls

Function 'numHandCards'
Lines executed:0.00% of 1
No branches
No calls

Function 'handCard'
Lines executed:0.00% of 2
No branches
No calls

Function 'supplyCount'
Lines executed:0.00% of 1
No branches
No calls

Function 'fullDeckCount'
Lines executed:0.00% of 11
Branches executed:0.00% of 12
Taken at least once:0.00% of 12
No calls

Function 'whoseTurn'
Lines executed:100.00% of 1
No branches
No calls

Function 'endTurn'
Lines executed:0.00% of 22
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
No calls

Function 'isGameOver'
Lines executed:0.00% of 12
Branches executed:0.00% of 8
Taken at least once:0.00% of 8
No calls

Function 'scoreFor'
Lines executed:0.00% of 26
Branches executed:0.00% of 42
Taken at least once:0.00% of 42
No calls

Function 'getWinners'
Lines executed:0.00% of 33
Branches executed:0.00% of 22
Taken at least once:0.00% of 22
No calls

Function 'drawCard'
Lines executed:100.00% of 24
Branches executed:100.00% of 6
Taken at least once:100.00% of 6
No calls

Function 'getCost'
Lines executed:0.00% of 30
Branches executed:0.00% of 28
Taken at least once:0.00% of 28
No calls

Function 'cardEffect'
Lines executed:5.91% of 237
Branches executed:14.65% of 157
Taken at least once:1.91% of 157
No calls

Function 'discardCard'
Lines executed:0.00% of 14
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
No calls

Function 'gainCard'
Lines executed:0.00% of 15
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
No calls

Function 'updateCoins'
Lines executed:71.43% of 14
Branches executed:100.00% of 8
Taken at least once:75.00% of 8
No calls

Function 'TreasureMapAction'
Lines executed:0.00% of 15
Branches executed:0.00% of 10
Taken at least once:0.00% of 10
No calls

Function 'SmithyAction'
Lines executed:0.00% of 5
Branches executed:0.00% of 2
Taken at least once:0.00% of 2
No calls

Function 'AdventurerAction'
Lines executed:100.00% of 23
Branches executed:100.00% of 12
Taken at least once:100.00% of 12
No calls

Function 'VillageAction'
Lines executed:0.00% of 4
No branches
No calls

Function 'CouncilRoomAction'
Lines executed:0.00% of 12
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
No calls

Function 'CutPurseAction'
Lines executed:0.00% of 17
Branches executed:0.00% of 12
Taken at least once:0.00% of 12
No calls

File 'dominion.c'
Lines executed:24.47% of 662
Branches executed:25.66% of 417
Taken at least once:18.23% of 417
No calls
dominion.c:creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "dominion_refactorwk2.h"
        -:    4:#include "rngs.h"
        -:    5:#include <stdio.h>
        -:    6:#include <math.h>
        -:    7:#include <stdlib.h>
        -:    8:  
function compare called 92711 returned 100% blocks executed 100%
        -:    9:int compare(const void* a, const void* b) {
    92711:   10:  if (*(int*)a > *(int*)b)
branch  0 taken 21%
branch  1 taken 79%
    19918:   11:    return 1;
    72793:   12:  if (*(int*)a < *(int*)b)
branch  0 taken 47%
branch  1 taken 53%
    34458:   13:    return -1;
    38335:   14:  return 0;
    92711:   15:}
        -:   16:
function newGame called 0 returned 0% blocks executed 0%
        -:   17:struct gameState* newGame() {
    #####:   18:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   19:  return g;
        -:   20:}
        -:   21:
function kingdomCards called 0 returned 0% blocks executed 0%
        -:   22:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   23:		  int k8, int k9, int k10) {
    #####:   24:  int* k = malloc(10 * sizeof(int));
    #####:   25:  k[0] = k1;
    #####:   26:  k[1] = k2;
    #####:   27:  k[2] = k3;
    #####:   28:  k[3] = k4;
    #####:   29:  k[4] = k5;
    #####:   30:  k[5] = k6;
    #####:   31:  k[6] = k7;
    #####:   32:  k[7] = k8;
    #####:   33:  k[8] = k9;
    #####:   34:  k[9] = k10;
    #####:   35:  return k;
        -:   36:}
        -:   37:
function initializeGame called 1000 returned 100% blocks executed 90%
        -:   38:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   39:		   struct gameState *state) {
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;			
        -:   43:  //set up random number generator
     1000:   44:  SelectStream(1);
     1000:   45:  PutSeed((long)randomSeed);
        -:   46:  
        -:   47:  //check number of players
     2000:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 100%
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
     1000:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    22000:   57:  for (i = 0; i < 10; i++)
branch  0 taken 91%
branch  1 taken 9%
        -:   58:    {
   220000:   59:      for (j = 0; j < 10; j++)
branch  0 taken 91%
branch  1 taken 9%
        -:   60:        {
   190000:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
branch  0 taken 90%
branch  1 taken 10%
branch  2 taken 0%
branch  3 taken 100%
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
   100000:   65:        }
    10000:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
     1000:   73:  if (numPlayers == 2)
branch  0 taken 0%
branch  1 taken 100%
        -:   74:    {
    #####:   75:      state->supplyCount[curse] = 10;
    #####:   76:    }
     1000:   77:  else if (numPlayers == 3)
branch  0 taken 100%
branch  1 taken 0%
        -:   78:    {
     1000:   79:      state->supplyCount[curse] = 20;
     1000:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
     1000:   87:  if (numPlayers == 2)
branch  0 taken 0%
branch  1 taken 100%
        -:   88:    {
    #####:   89:      state->supplyCount[estate] = 8;
    #####:   90:      state->supplyCount[duchy] = 8;
    #####:   91:      state->supplyCount[province] = 8;
    #####:   92:    }
        -:   93:  else
        -:   94:    {
     1000:   95:      state->supplyCount[estate] = 12;
     1000:   96:      state->supplyCount[duchy] = 12;
     1000:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
     1000:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
     1000:  102:  state->supplyCount[silver] = 40;
     1000:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    42000:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
branch  0 taken 95%
branch  1 taken 5%
        -:  107:  {
   330000:  108:	  for (j = 0; j < 10; j++)           		//loop chosen cards
branch  0 taken 94%
branch  1 taken 6%
        -:  109:	  {
   155000:  110:		  if (kingdomCards[j] == i) {
branch  0 taken 6%
branch  1 taken 94%
        -:  111:			  //check if card is a 'Victory' Kingdom card
    20000:  112:			  if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens) {
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 10%
branch  3 taken 90%
     1000:  113:				  if (numPlayers == 2){
branch  0 taken 0%
branch  1 taken 100%
    #####:  114:					  state->supplyCount[i] = 8;
    #####:  115:				  } else {
     1000:  116:					  state->supplyCount[i] = 12;
        -:  117:				  }
     1000:  118:			  } else {
     9000:  119:				  state->supplyCount[i] = 10;
        -:  120:			  }
    10000:  121:			  break;
        -:  122:		  } else {    //card is not in the set choosen for the game
   145000:  123:			  state->supplyCount[i] = -1;
        -:  124:		  }
   145000:  125:	  }
    20000:  126:  }
        -:  127:  ////////////////////////
        -:  128:  //supply intilization complete
        -:  129:
        -:  130:  //set player decks
     8000:  131:  for (i = 0; i < numPlayers; i++) {
branch  0 taken 75%
branch  1 taken 25%
     3000:  132:      state->deckCount[i] = 0;
    24000:  133:      for (j = 0; j < 3; j++) {
branch  0 taken 75%
branch  1 taken 25%
     9000:  134:    	  state->deck[i][j] = estate;
     9000:  135:    	  state->deckCount[i]++;
     9000:  136:      }
    48000:  137:      for (j = 3; j < 10; j++) {
branch  0 taken 88%
branch  1 taken 13%
    21000:  138:    	  state->deck[i][j] = copper;
    21000:  139:    	  state->deckCount[i]++;
    21000:  140:      }
     3000:  141:   }
        -:  142:
        -:  143:  //shuffle player decks
     8000:  144:  for (i = 0; i < numPlayers; i++) {
branch  0 taken 75%
branch  1 taken 25%
     3000:  145:      if ( shuffle(i, state) < 0 ) {
branch  0 taken 0%
branch  1 taken 100%
    #####:  146:    	  return -1;
        -:  147:      }
     3000:  148:   }
        -:  149:
        -:  150:  //draw player hands
     8000:  151:  for (i = 0; i < numPlayers; i++) {
branch  0 taken 75%
branch  1 taken 25%
        -:  152:      //initialize hand size to zero
     3000:  153:      state->handCount[i] = 0;
     3000:  154:      state->discardCount[i] = 0;
        -:  155:      //draw 5 cards
        -:  156:      // for (j = 0; j < 5; j++)
        -:  157:      //	{
        -:  158:      //	  drawCard(i, state);
        -:  159:      //	}
     3000:  160:   }
        -:  161:  
        -:  162:  //set embargo tokens to 0 for all supply piles
    56000:  163:  for (i = 0; i <= treasure_map; i++) {
branch  0 taken 96%
branch  1 taken 4%
    27000:  164:      state->embargoTokens[i] = 0;
    27000:  165:  }
        -:  166:
        -:  167:  //initialize first player's turn
     1000:  168:  state->outpostPlayed = 0;
     1000:  169:  state->phase = 0;
     1000:  170:  state->numActions = 1;
     1000:  171:  state->numBuys = 1;
     1000:  172:  state->playedCardCount = 0;
     1000:  173:  state->whoseTurn = 0;
     1000:  174:  state->handCount[state->whoseTurn] = 0;
        -:  175:  //int it; move to top
        -:  176:
        -:  177:  //Moved draw cards to here, only drawing at the start of a turn
    12000:  178:  for (it = 0; it < 5; it++){
branch  0 taken 83%
branch  1 taken 17%
     5000:  179:    drawCard(state->whoseTurn, state);
     5000:  180:  }
        -:  181:
     1000:  182:  updateCoins(state->whoseTurn, state, 0);
     1000:  183:  return 0;
     1000:  184:}
        -:  185:
        -:  186:
function shuffle called 3098 returned 100% blocks executed 100%
        -:  187:int shuffle(int player, struct gameState *state) {
        -:  188:  int newDeck[MAX_DECK];
     3098:  189:  int newDeckPos = 0;
        -:  190:  int card;
        -:  191:  int i;
        -:  192:
     3098:  193:  if (state->deckCount[player] < 1)
branch  0 taken 2%
branch  1 taken 98%
       50:  194:    return -1;
     3048:  195:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare); 
        -:  196:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  197:
    88082:  198:  while (state->deckCount[player] > 0) {
branch  0 taken 93%
branch  1 taken 7%
    40993:  199:    card = floor(Random() * state->deckCount[player]);
    40993:  200:    newDeck[newDeckPos] = state->deck[player][card];
    40993:  201:    newDeckPos++;
  1916354:  202:    for (i = card; i < state->deckCount[player]-1; i++) {
branch  0 taken 96%
branch  1 taken 4%
   917184:  203:      state->deck[player][i] = state->deck[player][i+1];
   917184:  204:    }
    40993:  205:    state->deckCount[player]--;
        -:  206:  }
    88082:  207:  for (i = 0; i < newDeckPos; i++) {
branch  0 taken 93%
branch  1 taken 7%
    40993:  208:    state->deck[player][i] = newDeck[i];
    40993:  209:    state->deckCount[player]++;
    40993:  210:  }
     3048:  211:  return 0;
     3098:  212:}
        -:  213:
        -:  214:
function playCard called 0 returned 0% blocks executed 0%
        -:  215:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state) 
        -:  216:{	
        -:  217:  int card;
    #####:  218:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  219:
        -:  220:  //check if it is the right phase
    #####:  221:  if (state->phase != 0) {
branch  0 never executed
branch  1 never executed
    #####:  222:      return -1;
        -:  223:  }
        -:  224:	
        -:  225:  //check if player has enough actions
    #####:  226:  if ( state->numActions < 1 ) {
branch  0 never executed
branch  1 never executed
    #####:  227:      return -1;
        -:  228:  }
        -:  229:	
        -:  230:  //get card played
    #####:  231:  card = handCard(handPos, state);
        -:  232:	
        -:  233:  //check if selected card is an action
    #####:  234:  if ( card < adventurer || card > treasure_map ) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  235:      return -1;
        -:  236:  }
        -:  237:	
        -:  238:  //play card
    #####:  239:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 ) {
branch  0 never executed
branch  1 never executed
    #####:  240:      return -1;
        -:  241:  }
        -:  242:	
        -:  243:  //reduce number of actions
    #####:  244:  state->numActions--;
        -:  245:
        -:  246:  //update coins (Treasure cards may be added with card draws)
    #####:  247:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  248:	
    #####:  249:  return 0;
    #####:  250:}
        -:  251:
        -:  252:
function buyCard called 0 returned 0% blocks executed 0%
        -:  253:int buyCard(int supplyPos, struct gameState *state) {
        -:  254:  int who;
        -:  255:  if (DEBUG){ printf("Entering buyCard...\n"); }
        -:  256:
        -:  257:  // I don't know what to do about the phase thing.
        -:  258:
    #####:  259:  who = state->whoseTurn;
        -:  260:
    #####:  261:  if (state->numBuys < 1){
branch  0 never executed
branch  1 never executed
        -:  262:    if (DEBUG)
        -:  263:      printf("You do not have any buys left\n");
    #####:  264:    return -1;
    #####:  265:  } else if (supplyCount(supplyPos, state) <1){
branch  0 never executed
branch  1 never executed
        -:  266:    if (DEBUG)
        -:  267:      printf("There are not any of that type of card left\n");
    #####:  268:    return -1;
    #####:  269:  } else if (state->coins < getCost(supplyPos)){
branch  0 never executed
branch  1 never executed
        -:  270:    if (DEBUG) 
        -:  271:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  272:    return -1;
        -:  273:  } else {
    #####:  274:    state->phase=1;
        -:  275:    //state->supplyCount[supplyPos]--;
    #####:  276:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  277:  
    #####:  278:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  279:    state->numBuys--;
        -:  280:    if (DEBUG)
        -:  281:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  282:  }
        -:  283:
        -:  284:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  285:  //state->discardCount[who]++;
        -:  286:    
    #####:  287:  return 0;
    #####:  288:}
        -:  289:
function numHandCards called 0 returned 0% blocks executed 0%
        -:  290:int numHandCards(struct gameState *state) {
    #####:  291:  return state->handCount[ whoseTurn(state) ];
        -:  292:}
        -:  293:
function handCard called 0 returned 0% blocks executed 0%
        -:  294:int handCard(int handPos, struct gameState *state) {
    #####:  295:  int currentPlayer = whoseTurn(state);
    #####:  296:  return state->hand[currentPlayer][handPos];
        -:  297:}
        -:  298:
function supplyCount called 0 returned 0% blocks executed 0%
        -:  299:int supplyCount(int card, struct gameState *state) {
    #####:  300:  return state->supplyCount[card];
        -:  301:}
        -:  302:
function fullDeckCount called 0 returned 0% blocks executed 0%
        -:  303:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  304:  int i;
    #####:  305:  int count = 0;
        -:  306:
    #####:  307:  for (i = 0; i < state->deckCount[player]; i++) {
branch  0 never executed
branch  1 never executed
    #####:  308:      if (state->deck[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
    #####:  309:  }
        -:  310:
    #####:  311:  for (i = 0; i < state->handCount[player]; i++) {
branch  0 never executed
branch  1 never executed
    #####:  312:      if (state->hand[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
    #####:  313:  }
        -:  314:
    #####:  315:  for (i = 0; i < state->discardCount[player]; i++) {
branch  0 never executed
branch  1 never executed
    #####:  316:      if (state->discard[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
    #####:  317:  }
    #####:  318:  return count;
        -:  319:}
        -:  320:
function whoseTurn called 1000 returned 100% blocks executed 100%
        -:  321:int whoseTurn(struct gameState *state) {
     1000:  322:  return state->whoseTurn;
        -:  323:}
        -:  324:
function endTurn called 0 returned 0% blocks executed 0%
        -:  325:int endTurn(struct gameState *state) {
        -:  326:  int k;
        -:  327:  int i;
    #####:  328:  int currentPlayer = whoseTurn(state);
        -:  329:  
        -:  330:  //Discard hand
    #####:  331:  for (i = 0; i < state->handCount[currentPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####:  332:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  333:    state->hand[currentPlayer][i] = -1;//Set card to -1
    #####:  334:  }
    #####:  335:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  336:    
        -:  337:  //Code for determining the player
    #####:  338:  if (currentPlayer < (state->numPlayers - 1)){ 
branch  0 never executed
branch  1 never executed
    #####:  339:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
    #####:  340:  }
        -:  341:  else{
    #####:  342:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  343:  }
        -:  344:
    #####:  345:  state->outpostPlayed = 0;
    #####:  346:  state->phase = 0;
    #####:  347:  state->numActions = 1;
    #####:  348:  state->coins = 0;
    #####:  349:  state->numBuys = 1;
    #####:  350:  state->playedCardCount = 0;
    #####:  351:  state->handCount[state->whoseTurn] = 0;
        -:  352:
        -:  353:  //int k; move to top
        -:  354:  //Next player draws hand
    #####:  355:  for (k = 0; k < 5; k++){
branch  0 never executed
branch  1 never executed
    #####:  356:    drawCard(state->whoseTurn, state);//Draw a card
    #####:  357:  }
        -:  358:
        -:  359:  //Update money
    #####:  360:  updateCoins(state->whoseTurn, state , 0);
        -:  361:
    #####:  362:  return 0;
        -:  363:}
        -:  364:
function isGameOver called 0 returned 0% blocks executed 0%
        -:  365:int isGameOver(struct gameState *state) {
        -:  366:  int i;
        -:  367:  int j;
        -:  368:	
        -:  369:  //if stack of Province cards is empty, the game ends
    #####:  370:  if (state->supplyCount[province] == 0)
branch  0 never executed
branch  1 never executed
        -:  371:    {
    #####:  372:      return 1;
        -:  373:    }
        -:  374:
        -:  375:  //if three supply pile are at 0, the game ends
    #####:  376:  j = 0;
    #####:  377:  for (i = 0; i < 25; i++)
branch  0 never executed
branch  1 never executed
        -:  378:    {
    #####:  379:      if (state->supplyCount[i] == 0)
branch  0 never executed
branch  1 never executed
        -:  380:	{
    #####:  381:	  j++;
    #####:  382:	}
    #####:  383:    }
    #####:  384:  if ( j >= 3)
branch  0 never executed
branch  1 never executed
        -:  385:    {
    #####:  386:      return 1;
        -:  387:    }
        -:  388:
    #####:  389:  return 0;
    #####:  390:}
        -:  391:
function scoreFor called 0 returned 0% blocks executed 0%
        -:  392:int scoreFor (int player, struct gameState *state) {
        -:  393:
        -:  394:  int i;
    #####:  395:  int score = 0;
        -:  396:  //score from hand
    #####:  397:  for (i = 0; i < state->handCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  398:    {
    #####:  399:      if (state->hand[player][i] == curse) { score = score - 1; };
branch  0 never executed
branch  1 never executed
    #####:  400:      if (state->hand[player][i] == estate) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  401:      if (state->hand[player][i] == duchy) { score = score + 3; };
branch  0 never executed
branch  1 never executed
    #####:  402:      if (state->hand[player][i] == province) { score = score + 6; };
branch  0 never executed
branch  1 never executed
    #####:  403:      if (state->hand[player][i] == great_hall) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  404:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
branch  0 never executed
branch  1 never executed
        -:  405:      //DEBUG
        -:  406:      //printf ("score = %d\n", score);
    #####:  407:    }
        -:  408:
        -:  409:  //score from discard
    #####:  410:  for (i = 0; i < state->discardCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  411:    {
    #####:  412:      if (state->discard[player][i] == curse) { score = score - 1; };
branch  0 never executed
branch  1 never executed
    #####:  413:      if (state->discard[player][i] == estate) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  414:      if (state->discard[player][i] == duchy) { score = score + 3; };
branch  0 never executed
branch  1 never executed
    #####:  415:      if (state->discard[player][i] == province) { score = score + 6; };
branch  0 never executed
branch  1 never executed
    #####:  416:      if (state->discard[player][i] == great_hall) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  417:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
branch  0 never executed
branch  1 never executed
        -:  418:      //printf ("score = %d\n", score);
    #####:  419:    }
        -:  420:
        -:  421:  //score from deck
    #####:  422:  for (i = 0; i < state->discardCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  423:    {
    #####:  424:      if (state->deck[player][i] == curse) { score = score - 1; };
branch  0 never executed
branch  1 never executed
    #####:  425:      if (state->deck[player][i] == estate) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  426:      if (state->deck[player][i] == duchy) { score = score + 3; };
branch  0 never executed
branch  1 never executed
    #####:  427:      if (state->deck[player][i] == province) { score = score + 6; };
branch  0 never executed
branch  1 never executed
    #####:  428:      if (state->deck[player][i] == great_hall) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  429:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
branch  0 never executed
branch  1 never executed
        -:  430:      //printf ("score = %d\n", score);
    #####:  431:    }
        -:  432:
    #####:  433:  return score;
        -:  434:}
        -:  435:
function getWinners called 0 returned 0% blocks executed 0%
        -:  436:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  437:  int i;	
        -:  438:  int j;
        -:  439:  int highScore;
        -:  440:  int currentPlayer;
        -:  441:
        -:  442:  //get score for each player
    #####:  443:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  444:    {
        -:  445:      //set unused player scores to -9999
    #####:  446:      if (i >= state->numPlayers)
branch  0 never executed
branch  1 never executed
        -:  447:	{
    #####:  448:	  players[i] = -9999;
    #####:  449:	}
        -:  450:      else
        -:  451:	{
    #####:  452:	  players[i] = scoreFor (i, state);
        -:  453:	}
    #####:  454:    }
        -:  455:
        -:  456:  //find highest score
    #####:  457:  j = 0;
    #####:  458:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  459:    {
    #####:  460:      if (players[i] > players[j])
branch  0 never executed
branch  1 never executed
        -:  461:	{
    #####:  462:	  j = i;
    #####:  463:	}
    #####:  464:    }
    #####:  465:  highScore = players[j];
        -:  466:
        -:  467:  //add 1 to players who had less turns
    #####:  468:  currentPlayer = whoseTurn(state);
    #####:  469:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  470:    {
    #####:  471:      if ( players[i] == highScore && i > currentPlayer )
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  472:	{
    #####:  473:	  players[i]++;
    #####:  474:	}
    #####:  475:    }
        -:  476:
        -:  477:  //find new highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  480:    {
    #####:  481:      if ( players[i] > players[j] )
branch  0 never executed
branch  1 never executed
        -:  482:	{
    #####:  483:	  j = i;
    #####:  484:	}
    #####:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //set winners in array to 1 and rest to 0
    #####:  489:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  490:    {
    #####:  491:      if ( players[i] == highScore )
branch  0 never executed
branch  1 never executed
        -:  492:	{
    #####:  493:	  players[i] = 1;
    #####:  494:	}
        -:  495:      else
        -:  496:	{
    #####:  497:	  players[i] = 0;
        -:  498:	}
    #####:  499:    }
        -:  500:
    #####:  501:  return 0;
        -:  502:}
        -:  503:
function drawCard called 31737 returned 100% blocks executed 100%
        -:  504:int drawCard(int player, struct gameState *state) {
        -:  505:	int count;
        -:  506:	int deckCounter;
    31737:  507:	if (state->deckCount[player] <= 0){//Deck is empty
branch  0 taken 1%
branch  1 taken 99%
        -:  508:    
        -:  509:		//Step 1 Shuffle the discard pile back into a deck
        -:  510:		int i;
        -:  511:		//Move discard to deck
    22084:  512:		for (i = 0; i < state->discardCount[player];i++){
branch  0 taken 99%
branch  1 taken 1%
    10993:  513:			state->deck[player][i] = state->discard[player][i];
    10993:  514:			state->discard[player][i] = -1;
    10993:  515:		}
        -:  516:
       49:  517:		state->deckCount[player] = state->discardCount[player];
       49:  518:		state->discardCount[player] = 0;//Reset discard
        -:  519:
        -:  520:		//Shufffle the deck
       49:  521:		shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  522:   
        -:  523:		if (DEBUG){//Debug statements
        -:  524:			printf("Deck count now: %d\n", state->deckCount[player]);
        -:  525:		}
        -:  526:    
       49:  527:		state->discardCount[player] = 0;
        -:  528:
        -:  529:		//Step 2 Draw Card
       49:  530:		count = state->handCount[player];//Get current player's hand count
        -:  531:
        -:  532:		if (DEBUG){//Debug statements
        -:  533:		  printf("Current hand count: %d\n", count);
        -:  534:		}
        -:  535:
       49:  536:		deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  537:
       49:  538:		if (deckCounter == 0)
branch  0 taken 2%
branch  1 taken 98%
        1:  539:		  return -1;
        -:  540:
       48:  541:		state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
       48:  542:		state->deckCount[player]--;
       48:  543:		state->handCount[player]++;//Increment hand count
        -:  544:
       48:  545:	} else{
    31688:  546:		int count = state->handCount[player];//Get current hand count for player
        -:  547:		int deckCounter;
        -:  548:		if (DEBUG){//Debug statements
        -:  549:		  printf("Current hand count: %d\n", count);
        -:  550:		}
        -:  551:
    31688:  552:		deckCounter = state->deckCount[player];//Create holder for the deck count
    31688:  553:		state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    31688:  554:		state->deckCount[player]--;
    31688:  555:		state->handCount[player]++;//Increment hand count
        -:  556:	  }
    31736:  557:  return 0;
    31737:  558:}
        -:  559:
function getCost called 0 returned 0% blocks executed 0%
        -:  560:int getCost(int cardNumber)
        -:  561:{
    #####:  562:  switch( cardNumber ) 
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
branch 18 never executed
branch 19 never executed
branch 20 never executed
branch 21 never executed
branch 22 never executed
branch 23 never executed
branch 24 never executed
branch 25 never executed
branch 26 never executed
branch 27 never executed
        -:  563:    {
        -:  564:    case curse:
    #####:  565:      return 0;
        -:  566:    case estate:
    #####:  567:      return 2;
        -:  568:    case duchy:
    #####:  569:      return 5;
        -:  570:    case province:
    #####:  571:      return 8;
        -:  572:    case copper:
    #####:  573:      return 0;
        -:  574:    case silver:
    #####:  575:      return 3;
        -:  576:    case gold:
    #####:  577:      return 6;
        -:  578:    case adventurer:
    #####:  579:      return 6;
        -:  580:    case council_room:
    #####:  581:      return 5;
        -:  582:    case feast:
    #####:  583:      return 4;
        -:  584:    case gardens:
    #####:  585:      return 4;
        -:  586:    case mine:
    #####:  587:      return 5;
        -:  588:    case remodel:
    #####:  589:      return 4;
        -:  590:    case smithy:
    #####:  591:      return 4;
        -:  592:    case village:
    #####:  593:      return 3;
        -:  594:    case baron:
    #####:  595:      return 4;
        -:  596:    case great_hall:
    #####:  597:      return 3;
        -:  598:    case minion:
    #####:  599:      return 5;
        -:  600:    case steward:
    #####:  601:      return 3;
        -:  602:    case tribute:
    #####:  603:      return 5;
        -:  604:    case ambassador:
    #####:  605:      return 3;
        -:  606:    case cutpurse:
    #####:  607:      return 4;
        -:  608:    case embargo: 
    #####:  609:      return 2;
        -:  610:    case outpost:
    #####:  611:      return 5;
        -:  612:    case salvager:
    #####:  613:      return 4;
        -:  614:    case sea_hag:
    #####:  615:      return 4;
        -:  616:    case treasure_map:
    #####:  617:      return 4;
        -:  618:    }
        -:  619:	
    #####:  620:  return -1;
    #####:  621:}
        -:  622:
function cardEffect called 1000 returned 100% blocks executed 3%
        -:  623:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  624:{
        -:  625:  int i;
        -:  626:  int j;
        -:  627:  int k;
        -:  628:  int x;
        -:  629:  int index;
     1000:  630:  k=0; x=0; index=0; //added this to silence unused var warning
     1000:  631:  int currentPlayer = whoseTurn(state);
     1000:  632:  int nextPlayer = currentPlayer + 1;
        -:  633:
     1000:  634:  int tributeRevealedCards[2] = {-1, -1};
        -:  635:  int temphand[MAX_HAND];// moved above the if statement
        -:  636:  // int drawntreasure=0; removed due to code refactor wk2
        -:  637:  int cardDrawn;
     1000:  638:  cardDrawn = 0; //added this to silence unused var warning
     1000:  639:  int z = 0; // this is the counter for the temp hand
     1000:  640:  z = 0; // added this to silence warnings
     1000:  641:  if (nextPlayer > (state->numPlayers - 1)){
branch  0 taken 31%
branch  1 taken 70%
      305:  642:    nextPlayer = 0;
      305:  643:  }
        -:  644:  
        -:  645:	
        -:  646:  //uses switch to select card and perform actions
     1000:  647:  switch( card ) {
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 0%
branch  4 taken 0%
branch  5 taken 0%
branch  6 taken 0%
branch  7 taken 0%
branch  8 taken 0%
branch  9 taken 0%
branch 10 taken 0%
branch 11 taken 0%
branch 12 taken 0%
branch 13 taken 0%
branch 14 taken 0%
branch 15 taken 0%
branch 16 taken 0%
branch 17 taken 0%
branch 18 taken 0%
branch 19 taken 0%
branch 20 taken 0%
        -:  648:
        -:  649:  	  // ***************************
        -:  650:  	  // ******** ADVENTURER *******
        -:  651:  	  // ***************************
        -:  652:  	  case adventurer:
        -:  653:      
        -:  654:  		  // add refactored adventurer action here
     1000:  655:  		  AdventurerAction (currentPlayer, state, handPos);
     1000:  656:  		  return 0;
        -:  657:      
        -:  658:/*** Comment out original code before refactor      
        -:  659:      while(drawntreasure<2){
        -:  660:	if (state->deckCount[currentPlayer] <1){//if the deck is empty we need to shuffle discard and add to deck
        -:  661:	  shuffle(currentPlayer, state);
        -:  662:	}
        -:  663:	drawCard(currentPlayer, state);
        -:  664:	cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
        -:  665:	if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
        -:  666:	  drawntreasure++;
        -:  667:	else{
        -:  668:	  temphand[z]=cardDrawn;
        -:  669:	  state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
        -:  670:	  z++;
        -:  671:	}
        -:  672:      }
        -:  673:      while(z-1>=0){
        -:  674:	state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
        -:  675:	z=z-1;
        -:  676:      }
        -:  677:***/
        -:  678:
        -:  679:
        -:  680:    // *****************************
        -:  681:		// ******** Council Room *******
        -:  682:		// *****************************
        -:  683:			
        -:  684:    case council_room:
    #####:  685:		  CouncilRoomAction (currentPlayer, state, handPos);
    #####:  686:	    return 0;
        -:  687:	
        -:  688:/*** commented out to refactor in separate function
        -:  689:      //+4 Cards
        -:  690:      for (i = 0; i < 4; i++)
        -:  691:	{
        -:  692:	  drawCard(currentPlayer, state);
        -:  693:	}
        -:  694:			
        -:  695:      //+1 Buy
        -:  696:      state->numBuys++;
        -:  697:			
        -:  698:      //Each other player draws a card
        -:  699:      for (i = 0; i < state->numPlayers; i++)
        -:  700:	{
        -:  701:	  if ( i != currentPlayer )
        -:  702:	    {
        -:  703:	      drawCard(i, state);
        -:  704:	    }
        -:  705:	}
        -:  706:			
        -:  707:      //put played card in played card pile
        -:  708:      discardCard(handPos, currentPlayer, state, 0);
        -:  709:***/			
        -:  710:  			
        -:  711:    // ***************************		
        -:  712:	// ******** FEAST  **********
        -:  713:	// ***************************
        -:  714:    case feast:
        -:  715:    	//gain card with cost up to 5
        -:  716:    	//Backup hand
    #####:  717:    	for (i = 0; i <= state->handCount[currentPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####:  718:    		temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  719:    		state->hand[currentPlayer][i] = -1;//Set to nothing
    #####:  720:    	}
        -:  721:    	//Backup hand
        -:  722:
        -:  723:    	//Update Coins for Buy
    #####:  724:    	updateCoins(currentPlayer, state, 5);
    #####:  725:    	x = 1;//Condition to loop on
    #####:  726:    	while( x == 1) {//Buy one card
branch  0 never executed
branch  1 never executed
    #####:  727:			if (supplyCount(choice1, state) <= 0){
branch  0 never executed
branch  1 never executed
        -:  728:			  if (DEBUG)
        -:  729:				printf("None of that card left, sorry!\n");
        -:  730:
        -:  731:			  if (DEBUG){
        -:  732:				printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  733:			  }
    #####:  734:			}
    #####:  735:			else if (state->coins < getCost(choice1)){
branch  0 never executed
branch  1 never executed
    #####:  736:			  printf("That card is too expensive!\n");
        -:  737:
        -:  738:			  if (DEBUG){
        -:  739:				printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  740:			  }
    #####:  741:			}
        -:  742:			else{
        -:  743:
        -:  744:			  if (DEBUG){
        -:  745:				printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  746:			  }
        -:  747:
    #####:  748:			  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  749:			  x = 0;//No more buying cards
        -:  750:
        -:  751:			  if (DEBUG){
        -:  752:				printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  753:			  }
        -:  754:
        -:  755:			}
        -:  756:    	}
        -:  757:
        -:  758:    	//Reset Hand
    #####:  759:		for (i = 0; i <= state->handCount[currentPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####:  760:			state->hand[currentPlayer][i] = temphand[i];
    #####:  761:			temphand[i] = -1;
    #####:  762:		}
        -:  763:		//Reset Hand
    #####:  764:		return 0;
        -:  765:			
        -:  766:    case gardens:
    #####:  767:      return -1;
        -:  768:			
        -:  769:    // ***************************		
        -:  770:		// ******** mine **********
        -:  771:		// ***************************		
        -:  772:    case mine:
    #####:  773:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  774:
    #####:  775:      if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  776:	{
    #####:  777:	  return -1;
        -:  778:	}
        -:  779:		
    #####:  780:      if (choice2 > treasure_map || choice2 < curse)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  781:	{
    #####:  782:	  return -1;
        -:  783:	}
        -:  784:
    #####:  785:      if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) )
branch  0 never executed
branch  1 never executed
        -:  786:	{
    #####:  787:	  return -1;
        -:  788:	}
        -:  789:
    #####:  790:      gainCard(choice2, state, 2, currentPlayer);
        -:  791:
        -:  792:      //discard card from hand
    #####:  793:      discardCard(handPos, currentPlayer, state, 0);
        -:  794:
        -:  795:      //discard trashed card
    #####:  796:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -:  797:	{
    #####:  798:	  if (state->hand[currentPlayer][i] == j)
branch  0 never executed
branch  1 never executed
        -:  799:	    {
    #####:  800:	      discardCard(i, currentPlayer, state, 0);			
    #####:  801:	      break;
        -:  802:	    }
    #####:  803:	}
        -:  804:			
    #####:  805:      return 0;
        -:  806:			
        -:  807:    // ***************************		
        -:  808:		// ******** remodel **********
        -:  809:		// ***************************		
        -:  810:    case remodel:
    #####:  811:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  812:
    #####:  813:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
branch  0 never executed
branch  1 never executed
        -:  814:	{
    #####:  815:	  return -1;
        -:  816:	}
        -:  817:
    #####:  818:      gainCard(choice2, state, 0, currentPlayer);
        -:  819:
        -:  820:      //discard card from hand
    #####:  821:      discardCard(handPos, currentPlayer, state, 0);
        -:  822:
        -:  823:      //discard trashed card
    #####:  824:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -:  825:	{
    #####:  826:	  if (state->hand[currentPlayer][i] == j)
branch  0 never executed
branch  1 never executed
        -:  827:	    {
    #####:  828:	      discardCard(i, currentPlayer, state, 0);			
    #####:  829:	      break;
        -:  830:	    }
    #####:  831:	}
        -:  832:
        -:  833:
    #####:  834:      return 0;
        -:  835:		
        -:  836:    // ***************************		
        -:  837:		// ******** SMITHY **********
        -:  838:		// ***************************		
        -:  839:    case smithy:
        -:  840:    
        -:  841:      // debug: print number of cards before call    
        -:  842:      //printf ("\nDebug: number cards in hand before: ");
        -:  843:      //printf ("%i\n", state->handCount[currentPlayer]);
        -:  844:      
        -:  845:      // add refactored smithy action here
    #####:  846:      SmithyAction (currentPlayer, state, handPos);
        -:  847:
        -:  848:      // debug: print number of cards after call
        -:  849:      //printf ("\nDebug: number cards in hand after: ");
        -:  850:      //printf ("%i\n", state->handCount[currentPlayer]);
    #####:  851:      return 0;
        -:  852:
        -:  853: /****     
        -:  854:      //+3 Cards
        -:  855:      for (i = 0; i < 3; i++)
        -:  856:	{
        -:  857:	  drawCard(currentPlayer, state);
        -:  858:	}
        -:  859:			
        -:  860:      //discard card from hand
        -:  861:      discardCard(handPos, currentPlayer, state, 0);
        -:  862:  ***/
        -:  863: 		
        -:  864:    // ***************************		
        -:  865:		// ******** VILLAGE **********
        -:  866:		// ***************************		
        -:  867:    case village:
        -:  868:    
    #####:  869:      VillageAction (currentPlayer, state, handPos);
    #####:  870:      return 0;
        -:  871:      
        -:  872:   /****   
        -:  873:      //+1 Card
        -:  874:      drawCard(currentPlayer, state);
        -:  875:			
        -:  876:      //+2 Actions
        -:  877:      state->numActions = state->numActions + 2;
        -:  878:			
        -:  879:      //discard played card from hand
        -:  880:      discardCard(handPos, currentPlayer, state, 0);
        -:  881:    ***/
        -:  882:		
        -:  883:    // ***************************		
        -:  884:		// ********  **********
        -:  885:		// ***************************		
        -:  886:    case baron:
    #####:  887:      state->numBuys++;//Increase buys by 1!
    #####:  888:      if (choice1 > 0){//Boolean true or going to discard an estate
branch  0 never executed
branch  1 never executed
    #####:  889:	int p = 0;//Iterator for hand!
    #####:  890:	int card_not_discarded = 1;//Flag for discard set!
    #####:  891:	while(card_not_discarded){
branch  0 never executed
branch  1 never executed
    #####:  892:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
branch  0 never executed
branch  1 never executed
    #####:  893:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  894:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  895:	    state->discardCount[currentPlayer]++;
    #####:  896:	    for (;p < state->handCount[currentPlayer]; p++){
branch  0 never executed
branch  1 never executed
    #####:  897:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
    #####:  898:	    }
    #####:  899:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  900:	    state->handCount[currentPlayer]--;
    #####:  901:	    card_not_discarded = 0;//Exit the loop
    #####:  902:	  }
    #####:  903:	  else if (p > state->handCount[currentPlayer]){
branch  0 never executed
branch  1 never executed
        -:  904:	    if(DEBUG) {
        -:  905:	      printf("No estate cards in your hand, invalid choice\n");
        -:  906:	      printf("Must gain an estate if there are any\n");
        -:  907:	    }
    #####:  908:	    if (supplyCount(estate, state) > 0){
branch  0 never executed
branch  1 never executed
    #####:  909:	      gainCard(estate, state, 0, currentPlayer);
    #####:  910:	      state->supplyCount[estate]--;//Decrement estates
    #####:  911:	      if (supplyCount(estate, state) == 0){
branch  0 never executed
branch  1 never executed
    #####:  912:		isGameOver(state);
    #####:  913:	      }
    #####:  914:	    }
    #####:  915:	    card_not_discarded = 0;//Exit the loop
    #####:  916:	  }
        -:  917:			    
        -:  918:	  else{
    #####:  919:	    p++;//Next card
        -:  920:	  }
        -:  921:	}
    #####:  922:      }
        -:  923:			    
        -:  924:      else{
    #####:  925:	if (supplyCount(estate, state) > 0){
branch  0 never executed
branch  1 never executed
    #####:  926:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  927:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  928:	  if (supplyCount(estate, state) == 0){
branch  0 never executed
branch  1 never executed
    #####:  929:	    isGameOver(state);
    #####:  930:	  }
    #####:  931:	}
        -:  932:      }
        -:  933:	    
        -:  934:      
    #####:  935:      return 0;
        -:  936:		
        -:  937:    // ***************************		
        -:  938:		// ********  **********
        -:  939:		// ***************************		
        -:  940:    case great_hall:
        -:  941:      //+1 Card
    #####:  942:      drawCard(currentPlayer, state);
        -:  943:			
        -:  944:      //+1 Actions
    #####:  945:      state->numActions++;
        -:  946:			
        -:  947:      //discard card from hand
    #####:  948:      discardCard(handPos, currentPlayer, state, 0);
    #####:  949:      return 0;
        -:  950:		
        -:  951:    // ***************************		
        -:  952:		// ********  **********
        -:  953:		// ***************************		
        -:  954:    case minion:
        -:  955:      //+1 action
    #####:  956:      state->numActions++;
        -:  957:			
        -:  958:      //discard card from hand
    #####:  959:      discardCard(handPos, currentPlayer, state, 0);
        -:  960:			
    #####:  961:      if (choice1)		//+2 coins
branch  0 never executed
branch  1 never executed
        -:  962:	{
    #####:  963:	  state->coins = state->coins + 2;
    #####:  964:	}
        -:  965:			
    #####:  966:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
branch  0 never executed
branch  1 never executed
        -:  967:	{
        -:  968:	  //discard hand
    #####:  969:	  while(numHandCards(state) > 0)
branch  0 never executed
branch  1 never executed
        -:  970:	    {
    #####:  971:	      discardCard(handPos, currentPlayer, state, 0);
        -:  972:	    }
        -:  973:				
        -:  974:	  //draw 4
    #####:  975:	  for (i = 0; i < 4; i++)
branch  0 never executed
branch  1 never executed
        -:  976:	    {
    #####:  977:	      drawCard(currentPlayer, state);
    #####:  978:	    }
        -:  979:				
        -:  980:	  //other players discard hand and redraw if hand size > 4
    #####:  981:	  for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  982:	    {
    #####:  983:	      if (i != currentPlayer)
branch  0 never executed
branch  1 never executed
        -:  984:		{
    #####:  985:		  if ( state->handCount[i] > 4 )
branch  0 never executed
branch  1 never executed
        -:  986:		    {
        -:  987:		      //discard hand
    #####:  988:		      while( state->handCount[i] > 0 )
branch  0 never executed
branch  1 never executed
        -:  989:			{
    #####:  990:			  discardCard(handPos, i, state, 0);
        -:  991:			}
        -:  992:							
        -:  993:		      //draw 4
    #####:  994:		      for (j = 0; j < 4; j++)
branch  0 never executed
branch  1 never executed
        -:  995:			{
    #####:  996:			  drawCard(i, state);
    #####:  997:			}
    #####:  998:		    }
    #####:  999:		}
    #####: 1000:	    }
        -: 1001:				
    #####: 1002:	}
    #####: 1003:      return 0;
        -: 1004:		
        -: 1005:		//*********************
        -: 1006:    //*********************
        -: 1007:    //*********************
        -: 1008:    
        -: 1009:    case steward:
    #####: 1010:      if (choice1 == 1)
branch  0 never executed
branch  1 never executed
        -: 1011:	{
        -: 1012:	  //+2 cards
    #####: 1013:	  drawCard(currentPlayer, state);
    #####: 1014:	  drawCard(currentPlayer, state);
    #####: 1015:	}
    #####: 1016:      else if (choice1 == 2)
branch  0 never executed
branch  1 never executed
        -: 1017:	{
        -: 1018:	  //+2 coins
    #####: 1019:	  state->coins = state->coins + 2;
    #####: 1020:	}
        -: 1021:      else
        -: 1022:	{
        -: 1023:	  //trash 2 cards in hand
    #####: 1024:	  discardCard(choice2, currentPlayer, state, 1);
    #####: 1025:	  discardCard(choice3, currentPlayer, state, 1);
        -: 1026:	}
        -: 1027:			
        -: 1028:      //discard card from hand
    #####: 1029:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1030:      return 0;
        -: 1031:		
        -: 1032:    // ***************************		
        -: 1033:		// ********  **********
        -: 1034:		// ***************************		
        -: 1035:    case tribute:
    #####: 1036:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
branch  0 never executed
branch  1 never executed
    #####: 1037:	if (state->deckCount[nextPlayer] > 0){
branch  0 never executed
branch  1 never executed
    #####: 1038:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1039:	  state->deckCount[nextPlayer]--;
    #####: 1040:	}
    #####: 1041:	else if (state->discardCount[nextPlayer] > 0){
branch  0 never executed
branch  1 never executed
    #####: 1042:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1043:	  state->discardCount[nextPlayer]--;
    #####: 1044:	}
        -: 1045:	else{
        -: 1046:	  //No Card to Reveal
        -: 1047:	  if (DEBUG){
        -: 1048:	    printf("No cards to reveal\n");
        -: 1049:	  }
        -: 1050:	}
    #####: 1051:      }
        -: 1052:	    
        -: 1053:      else{
    #####: 1054:	if (state->deckCount[nextPlayer] == 0){
branch  0 never executed
branch  1 never executed
    #####: 1055:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####: 1056:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1057:	    state->deckCount[nextPlayer]++;
    #####: 1058:	    state->discard[nextPlayer][i] = -1;
    #####: 1059:	    state->discardCount[nextPlayer]--;
    #####: 1060:	  }
        -: 1061:			    
    #####: 1062:	  shuffle(nextPlayer,state);//Shuffle the deck
    #####: 1063:	} 
    #####: 1064:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1065:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1066:	state->deckCount[nextPlayer]--;
    #####: 1067:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1068:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1069:	state->deckCount[nextPlayer]--;
        -: 1070:      }    
        -: 1071:		       
    #####: 1072:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one 
branch  0 never executed
branch  1 never executed
    #####: 1073:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1074:	state->playedCardCount++;
    #####: 1075:	tributeRevealedCards[1] = -1;
    #####: 1076:      }
        -: 1077:
    #####: 1078:      for (i = 0; i <= 2; i ++){
branch  0 never executed
branch  1 never executed
    #####: 1079:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####: 1080:	  state->coins += 2;
    #####: 1081:	}
        -: 1082:		    
    #####: 1083:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
    #####: 1084:	  drawCard(currentPlayer, state);
    #####: 1085:	  drawCard(currentPlayer, state);
    #####: 1086:	}
        -: 1087:	else{//Action Card
    #####: 1088:	  state->numActions = state->numActions + 2;
        -: 1089:	}
    #####: 1090:      }
        -: 1091:	    
    #####: 1092:      return 0;
        -: 1093:
        -: 1094:    // ***************************		
        -: 1095:		// ********  **********
        -: 1096:		// ***************************		
        -: 1097:		
        -: 1098:    case ambassador:
    #####: 1099:      j = 0;		//used to check if player has enough cards to discard
        -: 1100:
    #####: 1101:      if (choice2 > 2 || choice2 < 0)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -: 1102:	{
    #####: 1103:	  return -1;				
        -: 1104:	}
        -: 1105:
    #####: 1106:      if (choice1 == handPos)
branch  0 never executed
branch  1 never executed
        -: 1107:	{
    #####: 1108:	  return -1;
        -: 1109:	}
        -: 1110:
    #####: 1111:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1112:	{
    #####: 1113:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
        -: 1114:	    {
    #####: 1115:	      j++;
    #####: 1116:	    }
    #####: 1117:	}
    #####: 1118:      if (j < choice2)
branch  0 never executed
branch  1 never executed
        -: 1119:	{
    #####: 1120:	  return -1;				
        -: 1121:	}
        -: 1122:
        -: 1123:      if (DEBUG) 
        -: 1124:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1125:
        -: 1126:      //increase supply count for choosen card by amount being discarded
    #####: 1127:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1128:			
        -: 1129:      //each other player gains a copy of revealed card
    #####: 1130:      for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -: 1131:	{
    #####: 1132:	  if (i != currentPlayer)
branch  0 never executed
branch  1 never executed
        -: 1133:	    {
    #####: 1134:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
    #####: 1135:	    }
    #####: 1136:	}
        -: 1137:
        -: 1138:      //discard played card from hand
    #####: 1139:      discardCard(handPos, currentPlayer, state, 0);			
        -: 1140:
        -: 1141:      //trash copies of cards returned to supply
    #####: 1142:      for (j = 0; j < choice2; j++)
branch  0 never executed
branch  1 never executed
        -: 1143:	{
    #####: 1144:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1145:	    {
    #####: 1146:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
branch  0 never executed
branch  1 never executed
        -: 1147:		{
    #####: 1148:		  discardCard(i, currentPlayer, state, 1);
    #####: 1149:		  break;
        -: 1150:		}
    #####: 1151:	    }
    #####: 1152:	}			
        -: 1153:
    #####: 1154:      return 0;
        -: 1155:
        -: 1156:    // ***************************		
        -: 1157:		// ******** CUT PURSE **********
        -: 1158:		// ***************************		
        -: 1159:
        -: 1160:    case cutpurse:
        -: 1161:      
        -: 1162:      // Refactored code in separate function
    #####: 1163:      CutPurseAction (currentPlayer, state, handPos);
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:/*** commented out and moved code to separate function
        -: 1167:      updateCoins(currentPlayer, state, 2);
        -: 1168:      for (i = 0; i < state->numPlayers; i++)
        -: 1169:	{
        -: 1170:	  if (i != currentPlayer)
        -: 1171:	    {
        -: 1172:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1173:		{
        -: 1174:		  if (state->hand[i][j] == copper)
        -: 1175:		    {
        -: 1176:		      discardCard(j, i, state, 0);
        -: 1177:		      break;
        -: 1178:		    }
        -: 1179:		  if (j == state->handCount[i])
        -: 1180:		    {
        -: 1181:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1182:			{
        -: 1183:			  if (DEBUG)
        -: 1184:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1185:			}	
        -: 1186:		      break;
        -: 1187:		    }		
        -: 1188:		}
        -: 1189:					
        -: 1190:	    }
        -: 1191:				
        -: 1192:	}				
        -: 1193:      //discard played card from hand
        -: 1194:      discardCard(handPos, currentPlayer, state, 0);			
        -: 1195:***/
        -: 1196:
        -: 1197:    // ***************************		
        -: 1198:		// ******** embargo **********
        -: 1199:		// ***************************				
        -: 1200:    case embargo: 
        -: 1201:      //+2 Coins
    #####: 1202:      state->coins = state->coins + 2;
        -: 1203:			
        -: 1204:      //see if selected pile is in play
    #####: 1205:      if ( state->supplyCount[choice1] == -1 )
branch  0 never executed
branch  1 never executed
        -: 1206:	{
    #####: 1207:	  return -1;
        -: 1208:	}
        -: 1209:			
        -: 1210:      //add embargo token to selected supply pile
    #####: 1211:      state->embargoTokens[choice1]++;
        -: 1212:			
        -: 1213:      //trash card
    #####: 1214:      discardCard(handPos, currentPlayer, state, 1);		
    #####: 1215:      return 0;
        -: 1216:
        -: 1217:    // ***************************		
        -: 1218:		// ******** Outpost **********
        -: 1219:		// ***************************		
        -: 1220:		
        -: 1221:    case outpost:
        -: 1222:      //set outpost flag
    #####: 1223:      state->outpostPlayed++;
        -: 1224:			
        -: 1225:      //discard card
    #####: 1226:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1227:      return 0;
        -: 1228:
        -: 1229:    // ***************************		
        -: 1230:		// ******** SALVAGER **********
        -: 1231:		// ***************************		
        -: 1232:    case salvager:
        -: 1233:      //+1 buy
    #####: 1234:      state->numBuys++;
        -: 1235:			
    #####: 1236:      if (choice1)
branch  0 never executed
branch  1 never executed
        -: 1237:	{
        -: 1238:	  //gain coins equal to trashed card
    #####: 1239:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1240:	  //trash card
    #####: 1241:	  discardCard(choice1, currentPlayer, state, 1);	
    #####: 1242:	}
        -: 1243:			
        -: 1244:      //discard card
    #####: 1245:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1246:      return 0;
        -: 1247:
        -: 1248:    // ***************************		
        -: 1249:		// ******** SEA HAG **********
        -: 1250:		// ***************************		
        -: 1251:    case sea_hag:
    #####: 1252:      for (i = 0; i < state->numPlayers; i++){
branch  0 never executed
branch  1 never executed
    #####: 1253:    	  if (i != currentPlayer){
branch  0 never executed
branch  1 never executed
    #####: 1254:    		  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1255:    		  state->discardCount[i]++;
    #####: 1256:    		  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
    #####: 1257:    	  }
    #####: 1258:      }
    #####: 1259:      return 0;
        -: 1260:
        -: 1261:      // ***************************
        -: 1262:  		// ******** TREASURE MAP **********
        -: 1263:  		// ***************************
        -: 1264:    case treasure_map:
        -: 1265:
        -: 1266:    	//int returnval;
        -: 1267:    	//returnval = TreasureMapAction (currentPlayer, state, handPos);
    #####: 1268:    	return (TreasureMapAction (currentPlayer, state, handPos));
        -: 1269:
        -: 1270:    	/** commented out and moved to separate function
        -: 1271:      //search hand for another treasure_map
        -: 1272:      index = -1;
        -: 1273:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1274:      {
        -: 1275:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1276:	    {
        -: 1277:	      index = i;
        -: 1278:	      break;
        -: 1279:	    }
        -: 1280:      }
        -: 1281:      if (index > -1) {
        -: 1282:		  //trash both treasure cards
        -: 1283:		  discardCard(handPos, currentPlayer, state, 1);
        -: 1284:		  discardCard(index, currentPlayer, state, 1);
        -: 1285:
        -: 1286:		  //gain 4 Gold cards
        -: 1287:		  for (i = 0; i < 4; i++) {
        -: 1288:			  gainCard(gold, state, 1, currentPlayer);
        -: 1289:		  }
        -: 1290:				
        -: 1291:		  //return success
        -: 1292:		  return 1;
        -: 1293:      }
        -: 1294:			
        -: 1295:      //no second treasure_map found in hand
        -: 1296:      return -1;
        -: 1297:      */
        -: 1298:    }
        -: 1299:
    #####: 1300:  return -1;
     1000: 1301:}
        -: 1302:
function discardCard called 0 returned 0% blocks executed 0%
        -: 1303:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1304:{
        -: 1305:  //if card is not trashed, added to Played pile 
    #####: 1306:  if (trashFlag < 1) {
branch  0 never executed
branch  1 never executed
        -: 1307:      //add card to played pile
    #####: 1308:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos]; 
    #####: 1309:      state->playedCardCount++;
    #####: 1310:   }
        -: 1311:  //set played card to -1
    #####: 1312:  state->hand[currentPlayer][handPos] = -1;
        -: 1313:	
        -: 1314:  //remove card from player's hand
    #####: 1315:  if ( handPos == (state->handCount[currentPlayer] - 1) ) { //last card in hand array is played
branch  0 never executed
branch  1 never executed
        -: 1316:      //reduce number of cards in hand
    #####: 1317:      state->handCount[currentPlayer]--;
    #####: 1318:  } else if ( state->handCount[currentPlayer] == 1 ) { //only one card in hand
branch  0 never executed
branch  1 never executed
        -: 1319:      //reduce number of cards in hand
    #####: 1320:      state->handCount[currentPlayer]--;
    #####: 1321:  } else {
        -: 1322:      //replace discarded card with last card in hand
    #####: 1323:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1324:      //set last card to -1
    #####: 1325:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1326:      //reduce number of cards in hand
    #####: 1327:      state->handCount[currentPlayer]--;
        -: 1328:   }
    #####: 1329:  return 0;
        -: 1330:}
        -: 1331:
function gainCard called 0 returned 0% blocks executed 0%
        -: 1332:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1333:{
        -: 1334:  //Note: supplyPos is enum of choosen card
        -: 1335:	
        -: 1336:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1337:  if ( supplyCount(supplyPos, state) < 1 )
branch  0 never executed
branch  1 never executed
        -: 1338:    {
    #####: 1339:      return -1;
        -: 1340:    }
        -: 1341:	
        -: 1342:  //added card for [whoseTurn] current player:
        -: 1343:  // toFlag = 0 : add to discard
        -: 1344:  // toFlag = 1 : add to deck
        -: 1345:  // toFlag = 2 : add to hand
        -: 1346:
    #####: 1347:  if (toFlag == 1)
branch  0 never executed
branch  1 never executed
        -: 1348:    {
    #####: 1349:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1350:      state->deckCount[player]++;
    #####: 1351:    }
    #####: 1352:  else if (toFlag == 2)
branch  0 never executed
branch  1 never executed
        -: 1353:    {
    #####: 1354:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1355:      state->handCount[player]++;
    #####: 1356:    }
        -: 1357:  else
        -: 1358:    {
    #####: 1359:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1360:      state->discardCount[player]++;
        -: 1361:    }
        -: 1362:	
        -: 1363:  //decrease number in supply pile
    #####: 1364:  state->supplyCount[supplyPos]--;
        -: 1365:	 
    #####: 1366:  return 0;
    #####: 1367:}
        -: 1368:
function updateCoins called 1000 returned 100% blocks executed 85%
        -: 1369:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1370:{
        -: 1371:  int i;
        -: 1372:	
        -: 1373:  //reset coin count
     1000: 1374:  state->coins = 0;
        -: 1375:
        -: 1376:  //add coins for each Treasure card in player's hand
    12000: 1377:  for (i = 0; i < state->handCount[player]; i++)
branch  0 taken 83%
branch  1 taken 17%
        -: 1378:    {
     5000: 1379:      if (state->hand[player][i] == copper)
branch  0 taken 80%
branch  1 taken 20%
        -: 1380:	{
     4000: 1381:	  state->coins += 1;
     4000: 1382:	}
     1000: 1383:      else if (state->hand[player][i] == silver)
branch  0 taken 0%
branch  1 taken 100%
        -: 1384:	{
    #####: 1385:	  state->coins += 2;
    #####: 1386:	}
     1000: 1387:      else if (state->hand[player][i] == gold)
branch  0 taken 0%
branch  1 taken 100%
        -: 1388:	{
    #####: 1389:	  state->coins += 3;
    #####: 1390:	}	
     5000: 1391:    }	
        -: 1392:
        -: 1393:  //add bonus
     1000: 1394:  state->coins += bonus;
        -: 1395:
     1000: 1396:  return 0;
        -: 1397:}
        -: 1398:
        -: 1399://***************************************
        -: 1400://***** REFACTORED CODE Week2 ***********
        -: 1401://***************************************
        -: 1402:
function TreasureMapAction called 0 returned 0% blocks executed 0%
        -: 1403:int TreasureMapAction (int currentPlayer, struct gameState *state, int handPos) {
        -: 1404:	//search hand for another treasure_map
    #####: 1405:	int index = -1;
        -: 1406:	int i;
    #####: 1407:	for (i = 0; i < state->handCount[currentPlayer]; i++) {
branch  0 never executed
branch  1 never executed
    #####: 1408:		if (state->hand[currentPlayer][i] == treasure_map && i != handPos) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####: 1409:			index = i;
    #####: 1410:			break;
        -: 1411:		}
    #####: 1412:	}
    #####: 1413:	if (index > -1) {
branch  0 never executed
branch  1 never executed
        -: 1414:		//trash both treasure cards
    #####: 1415:		discardCard(handPos, currentPlayer, state, 1);
    #####: 1416:		discardCard(index, currentPlayer, state, 1);
        -: 1417:
        -: 1418:		//gain 4 Gold cards
    #####: 1419:		for (i = 0; i < 4; i++) {
branch  0 never executed
branch  1 never executed
    #####: 1420:			gainCard(gold, state, 1, currentPlayer);
    #####: 1421:		}
        -: 1422:
        -: 1423:		//return success
    #####: 1424:		return 1;
        -: 1425:	}
        -: 1426:
        -: 1427:	//no second treasure_map found in hand
    #####: 1428:	return -1;
    #####: 1429:}
        -: 1430:
        -: 1431:// ***********************
        -: 1432:// SMITHY ACTION FUNCTION
        -: 1433:// ***********************
function SmithyAction called 0 returned 0% blocks executed 0%
        -: 1434:int SmithyAction (int currentPlayer, struct gameState *state, int handPos) {
        -: 1435:  int i;
        -: 1436:  // printf ("\nDebug: Smithy Action refactor code\n");
        -: 1437:
        -: 1438:/** Original Smithy action without bugs
        -: 1439:  //+3 Cards
        -: 1440:  for (i = 0; i < 3; i++)
        -: 1441:	{
        -: 1442:	  drawCard(currentPlayer, state);
        -: 1443:	}	
        -: 1444:**/ 
        -: 1445:
        -: 1446:  // *** ADDING BUG +4 Cards (instead of +3 cards!!)
    #####: 1447:  for (i = 0; i < 4; i++)
branch  0 never executed
branch  1 never executed
        -: 1448:	{
    #####: 1449:	  drawCard(currentPlayer, state);
    #####: 1450:	}	
        -: 1451:	
        -: 1452:  //discard card from hand
    #####: 1453:  discardCard(handPos, currentPlayer, state, 0);
    #####: 1454:  return 0;
        -: 1455:}
        -: 1456:
        -: 1457:
        -: 1458:// ***********************
        -: 1459:// ADVENTURER ACTION FUNCTION
        -: 1460:// ***********************
function AdventurerAction called 1000 returned 100% blocks executed 100%
        -: 1461:int AdventurerAction (int currentPlayer, struct gameState *state, int handPos) {
     1000: 1462:  int drawntreasure=0;
     1000: 1463:  int z = 0; // for temp hand counter
        -: 1464:  int cardDrawn;
        -: 1465:  int temphand[MAX_HAND];
        -: 1466:  int result; // added to stop crashing
        -: 1467:  
        -: 1468:  //printf ("\nDebug: Adventurer Action refactor code\n");
        -: 1469:
    55474: 1470:  while(drawntreasure<2){
branch  0 taken 96%
branch  1 taken 4%
    26737: 1471:	  if (state->deckCount[currentPlayer] <1){//if the deck is empty we need to shuffle discard and add to deck
branch  0 taken 1%
branch  1 taken 99%
       49: 1472:	  shuffle(currentPlayer, state);
       49: 1473:	  }
    26737: 1474:	  result = drawCard(currentPlayer, state);
        -: 1475:	  // DEBUG
    26737: 1476:	  if (result == -1) {
branch  0 taken 1%
branch  1 taken 99%
        1: 1477:		  printf (" -- Couldn't draw card -- \n");
        -: 1478:		  // setting drawntreasure to 3 to get out of while loop
        1: 1479:		  drawntreasure = 3;
        1: 1480:	  } else {
        -: 1481:		  // end DEBUG
        -: 1482:
        -: 1483:		  //top card of hand is most recently drawn card.
    26736: 1484:		  cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];
        -: 1485:
        -: 1486:/***  Original Adventurer action without bugs
        -: 1487:	  if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
        -: 1488:***/
        -: 1489:    // *** ADDING BUG if statement does not check for gold, just copper and silver
    52452: 1490:		  if (cardDrawn == copper || cardDrawn == silver) {
branch  0 taken 96%
branch  1 taken 4%
branch  2 taken 4%
branch  3 taken 96%
     1999: 1491:			  drawntreasure++;
     1999: 1492:			  printf ("drawntreasure = %i, cardDrawn = %i -> ", drawntreasure, cardDrawn);
     1999: 1493:		  } else {
    24737: 1494:			  temphand[z]=cardDrawn;
    24737: 1495:			  state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
    24737: 1496:			  z++;
        -: 1497:		  }
        -: 1498:	  }
        -: 1499:
        -: 1500:  }
    51474: 1501:  while(z-1>=0){
branch  0 taken 96%
branch  1 taken 4%
    24737: 1502:	  state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    24737: 1503:	  z=z-1;
        -: 1504:  }
     1000: 1505:  return 0;
        -: 1506:}
        -: 1507:
        -: 1508:
        -: 1509:
        -: 1510:// ***********************
        -: 1511:// VILLAGE ACTION FUNCTION
        -: 1512:// ***********************
function VillageAction called 0 returned 0% blocks executed 0%
        -: 1513:int VillageAction (int currentPlayer, struct gameState *state, int handPos) {
        -: 1514:  //printf ("\nDebug: Village Action refactor code\n");
        -: 1515:  //+1 Card
    #####: 1516:  drawCard(currentPlayer, state);
        -: 1517:
        -: 1518:/***  Original Village Action action without bugs			
        -: 1519:  //+2 Actions
        -: 1520:  state->numActions = state->numActions + 2;
        -: 1521:***/
        -: 1522:	// *** ADDING BUG adding 3 more actions instead of 2
    #####: 1523:  state->numActions = state->numActions + 3;  
        -: 1524:  
        -: 1525:  //discard played card from hand
    #####: 1526:  discardCard(handPos, currentPlayer, state, 0);
        -: 1527:  
    #####: 1528:  return 0;
        -: 1529:}
        -: 1530:
        -: 1531:
        -: 1532:
        -: 1533:
        -: 1534:
function CouncilRoomAction called 0 returned 0% blocks executed 0%
        -: 1535:int CouncilRoomAction (int currentPlayer, struct gameState *state, int handPos) {
        -: 1536:  int i;
    #####: 1537:  printf ("\nDebug: Council Room Action refactor code\n");
        -: 1538:  //+4 Cards
    #####: 1539:  for (i = 0; i < 4; i++) {
branch  0 never executed
branch  1 never executed
    #####: 1540:	  drawCard(currentPlayer, state);
    #####: 1541:	}
        -: 1542:	//+1 Buy
    #####: 1543:  state->numBuys++;
        -: 1544:
        -: 1545:/***  Original Council Room action without bugs			
        -: 1546:  //Each other player draws a card
        -: 1547:  for (i = 0; i < state->numPlayers; i++) {
        -: 1548:***/
        -: 1549:  // *** ADDING BUG reducing the other players that need to draw card by 1
    #####: 1550:  for (i = 0; i < (state->numPlayers-1); i++) {
branch  0 never executed
branch  1 never executed
    #####: 1551:	  if ( i != currentPlayer ) {
branch  0 never executed
branch  1 never executed
    #####: 1552:	      drawCard(i, state);
    #####: 1553:	  }
    #####: 1554:	}
        -: 1555:	//put played card in played card pile
    #####: 1556:  discardCard(handPos, currentPlayer, state, 0);
    #####: 1557:  return 0;
        -: 1558:}
        -: 1559:
        -: 1560:
        -: 1561:
        -: 1562:
function CutPurseAction called 0 returned 0% blocks executed 0%
        -: 1563:int CutPurseAction (int currentPlayer, struct gameState *state, int handPos) {
        -: 1564:  int i, j, k;
    #####: 1565:  printf ("\nDebug: Cut Purse Action refactor code\n");
        -: 1566:  
    #####: 1567:  updateCoins(currentPlayer, state, 2);
    #####: 1568:  for (i = 0; i < state->numPlayers; i++) {
branch  0 never executed
branch  1 never executed
    #####: 1569:	  if (i != currentPlayer) {
branch  0 never executed
branch  1 never executed
    #####: 1570:	    for (j = 0; j < state->handCount[i]; j++) {
branch  0 never executed
branch  1 never executed
        -: 1571:	    
        -: 1572:	    /***  Original Council Room action without bugs		
        -: 1573:		    if (state->hand[i][j] == copper) {
        -: 1574:		  ***/
        -: 1575:        // *** ADDING BUG other players discard silver INSTEAD of copper
    #####: 1576:		    if (state->hand[i][j] == silver) {		    
branch  0 never executed
branch  1 never executed
    #####: 1577:		      discardCard(j, i, state, 0);
    #####: 1578:		      break;
        -: 1579:		    }
    #####: 1580:		    if (j == state->handCount[i]) {
branch  0 never executed
branch  1 never executed
    #####: 1581:		      for (k = 0; k < state->handCount[i]; k++) {
branch  0 never executed
branch  1 never executed
        -: 1582:			      if (DEBUG)
        -: 1583:			      printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
    #####: 1584:			    }	
    #####: 1585:		      break;
        -: 1586:		    }		
    #####: 1587:		  }		
    #####: 1588:	  }		
    #####: 1589:	}				
        -: 1590:  //discard played card from hand
    #####: 1591:  discardCard(handPos, currentPlayer, state, 0);			
    #####: 1592:  return 0;
        -: 1593:}
        -: 1594:
        -: 1595://end of dominion.c
        -: 1596:
