int playCouncil_Room(struct gameState *state, int handPos) {
	int i;
	int currentPlayer = whoseTurn(state);
	// Draw 4 cards
	for (i = 0; i <= 4; i++){   //  <<<<<<<<<<<<<<<<<<======================= Buggy Statement, the original statement should be 
								//  for (i = 0; i < 4; i++){  
		drawCard(currentPlayer, state);
	}
	
	// Each other player draws 1 card
	for (i = 0; i < state->numPlayers; i++) {
		drawCard(i, state);
	}
	// Discard played card
	discardCard(handPos, currentPlayer, state, 0);

	return 0;
};


int playAdventurer(struct gameState *state) {
	int currentPlayer = whoseTurn(state);
	int cardDrawn;
	int drawnTreasure = 0;
	int tempHand[MAX_HAND];
	int z = 0;
	while (drawnTreasure < 2) {
		if (state->deckCount[currentPlayer] <= 1) { //  <<<<<<<<<<<<<<<<<<======================= Buggy Statement
													//  if (state->deckCount[currentPlayer] < 1) {   
			shuffle(currentPlayer, state);
		}
		drawCard(currentPlayer, state);
		cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]
				- 1];
		if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
			drawnTreasure++;
		else {
			tempHand[z] = cardDrawn;
			state->handCount[currentPlayer]--;
			z++;
		}
	}

	while (z - 1 >= 0) {
		state->discard[currentPlayer][state->discardCount[currentPlayer]++] =
				tempHand[z - 1];
		z--;
	}

	return 0;
};


